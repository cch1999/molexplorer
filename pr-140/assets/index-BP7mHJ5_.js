var R=m=>{throw TypeError(m)};var J=(m,e,t)=>e.has(m)||R("Cannot "+t);var H=(m,e,t)=>e.has(m)?R("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(m):e.set(m,t);var T=(m,e,t)=>(J(m,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();const W="https://files.rcsb.org/ligands/view",Z="https://models.rcsb.org/v1",Q="https://raw.githubusercontent.com/cch1999/cch1999.github.io/refs/heads/new_website/assets/files/fragment_library_ccd.tsv",K="https://www.ebi.ac.uk/pdbe/graph-api/compound/similarity",X="https://www.ebi.ac.uk/pdbe/graph-api/compound/in_pdb",ee="https://data.rcsb.org/rest/v1/core/entry",te="https://www.ebi.ac.uk/pdbe/graph-api/pdb/summary",ne="https://files.rcsb.org/download",se="https://www.ebi.ac.uk/pdbe/api/pdb/entry/ligand_monomers",ie="https://data.rcsb.org/rest/v1/core/entry_groups",oe="https://rest.uniprot.org/uniprotkb",U="https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound",le="https://pubchem.ncbi.nlm.nih.gov/compound",x="https://www.ebi.ac.uk/pdbe/static/files/pdbechem_v2",S="https://www.rcsb.org/structure",D="https://www.ebi.ac.uk/pdbe/entry/pdb",re="https://cdn.rcsb.org/images/structures",ae=["HOH","ZN","MG","CA","NA","K","CL"],de=100,ce=["HEM","NAD","FAD","COA","ATP","ADP","355","MPV","YQD","J9N","VIA"],ue=[{code:"UHV",source:"reagents",type:"reagent",pdbId:"5RH5",labelAsymId:"A",authSeqId:"1001"}],he=["SO4","PO4","CIT","EDO","GOL","1PE","ACE","ACT","BME","DMS","FMT","IMD","MES","PEG","PGE","TRS"],me=["ZN","MG","CA","NA","K","CL"],B=new Map;var L,N;class y{static async fetchText(e){return T(this,L,N).call(this,e,t=>t.text())}static async fetchJson(e){return T(this,L,N).call(this,e,t=>t.json())}static getCcdSdf(e){return this.fetchText(`${W}/${e.toUpperCase()}_ideal.sdf`)}static getInstanceSdf(e,t,n){return this.fetchText(`${Z}/${e.toUpperCase()}/ligand?auth_seq_id=${t}&label_asym_id=${n}&encoding=sdf`)}static getFragmentLibraryTsv(){return this.fetchText(Q)}static getSimilarCcds(e){return this.fetchJson(`${K}/${e}`)}static getPdbEntriesForCcd(e){return this.fetchJson(`${X}/${e}`)}static getRcsbEntry(e){return this.fetchJson(`${ee}/${e.toLowerCase()}`)}static getPdbSummary(e){return this.fetchJson(`${te}/${e}`)}static getPdbFile(e){return this.fetchText(`${ne}/${e}.pdb`)}static getLigandMonomers(e){return this.fetchJson(`${se}/${e}`)}static async getPubChemSynonyms(e){var s,i,o;const t=`${U}/name/${encodeURIComponent(e)}/synonyms/JSON`,n=await this.fetchJson(t);return((o=(i=(s=n==null?void 0:n.InformationList)==null?void 0:s.Information)==null?void 0:i[0])==null?void 0:o.Synonym)??[]}static async getPubChemProperties(e){var s,i;const t=`${U}/name/${encodeURIComponent(e)}/property/MolecularFormula,MolecularWeight,IUPACName,CanonicalSMILES/JSON`,n=await this.fetchJson(t);return((i=(s=n==null?void 0:n.PropertyTable)==null?void 0:s.Properties)==null?void 0:i[0])??null}static async getPubChemMetadata(e){const[t,n]=await Promise.all([this.getPubChemSynonyms(e).catch(()=>[]),this.getPubChemProperties(e).catch(()=>null)]),s=n==null?void 0:n.CID;return{synonyms:t,properties:n,link:s?`${le}/${s}`:null}}static async getPdbEntriesForUniprot(e){const t=e.toUpperCase(),n=`${oe}/${t}.json`,s=await this.fetchJson(n);return((s==null?void 0:s.uniProtKBCrossReferences)??[]).filter(o=>o.database==="PDB").map(o=>o.id)}static getProteinGroup(e){return this.fetchJson(`${ie}/${e}`)}static clearCache(){B.clear()}}L=new WeakSet,N=async function(e,t){if(B.has(e))return B.get(e);const n=await fetch(e);if(!n.ok){const i=new Error(`HTTP error! status: ${n.status}`);throw i.status=n.status,i.url=e,i}const s=await t(n);return B.set(e,s),s},H(y,L);class pe{constructor(e,t){this.repository=e,this.cardUI=t}async loadAllMolecules(){for(const e of this.repository.getAllMolecules())e.status==="pending"&&await this.loadMolecule(e)}async loadMolecule(e){const{code:t,pdbId:n,authSeqId:s,labelAsymId:i}=typeof e=="string"?{code:e}:e;try{this.repository.updateMoleculeStatus(t,"loading");const o=await this.findMoleculeInLocalTsv(t);if(o){this.repository.updateMoleculeStatus(t,"loaded"),this.cardUI.createMoleculeCardFromSmiles(o,t);return}let l;if(n&&s&&i?l=await y.getInstanceSdf(n,s,i):l=await y.getCcdSdf(t),!l||l.trim()===""||l.toLowerCase().includes("<html"))throw new Error("Received empty or invalid SDF data.");this.repository.updateMoleculeStatus(t,"loaded");const a=this.repository.getMolecule(t);a&&(a.sdf=l),this.cardUI.createMoleculeCard(l,t,"sdf")}catch(o){console.error(`Could not fetch or process data for ${t}:`,o),this.repository.updateMoleculeStatus(t,"error"),this.cardUI.createNotFoundCard(t,`Failed to load: ${o.message}`)}}async findMoleculeInLocalTsv(e){try{const n=(await y.getFragmentLibraryTsv()).split(`
`);for(const s of n){const i=s.split("	");if(i.length>8&&i[8]===e)return i[3]}return null}catch(t){return console.error("Error searching fragment library TSV:",t),null}}}class ge{constructor(e=[]){this.molecules=e.map(t=>({...t,id:this.generateId(t)})),this.viewerMolecules=[]}generateId(e){if(typeof e=="string")return e;const{code:t,pdbId:n,authSeqId:s,labelAsymId:i}=e;return n&&s&&i?`${n}_${i}_${s}_${t}`:t}addMolecule(e){const t=this.generateId(e);if(this.molecules.find(s=>s.id===t))return!1;const n={code:typeof e=="string"?e:e.code,status:"pending",id:t};return e&&typeof e=="object"&&Object.assign(n,e),this.molecules.push(n),!0}removeMolecule(e){const t=this.molecules.findIndex(n=>n.id===e||n.code===e);return t===-1?!1:(this.molecules.splice(t,1),!0)}deleteAllMolecules(){this.molecules=[]}getMolecule(e){return this.molecules.find(t=>t.id===e||t.code===e)}updateMoleculeStatus(e,t){const n=this.getMolecule(e);n&&(n.status=t)}getAllMolecules(){return[...this.molecules]}clearAll(){this.molecules=[]}addViewerMolecule(e){!e||!e.code||!e.sdf||this.viewerMolecules.find(t=>t.code===e.code)||this.viewerMolecules.push({code:e.code,sdf:e.sdf})}removeViewerMolecule(e){this.viewerMolecules=this.viewerMolecules.filter(t=>t.code!==e)}getViewerMolecules(){return[...this.viewerMolecules]}clearViewerState(){this.viewerMolecules=[]}removeHydrogensFromSdf(e){const t=e.split(/\r?\n/);if(t.length<4)return e;const n=t[3],s=parseInt(n.slice(0,3)),i=parseInt(n.slice(3,6)),o=t.slice(4,4+s),l=t.slice(4+s,4+s+i),a=t.slice(4+s+i),d=[],r=[];o.forEach((g,f)=>{g.slice(31,34).trim()!=="H"&&(d.push(f+1),r.push(g))});const c=new Map;d.forEach((g,f)=>{c.set(g,f+1)});const u=[];l.forEach(g=>{const f=parseInt(g.slice(0,3)),h=parseInt(g.slice(3,6));if(c.has(f)&&c.has(h)){const w=String(c.get(f)).padStart(3,"0"),v=String(c.get(h)).padStart(3,"0");u.push(w+v+g.slice(6))}});const p=String(r.length).padStart(3,"0")+String(u.length).padStart(3,"0")+n.slice(6);return[...t.slice(0,3),p,...r,...u,...a].join(`
`)}exportToSdf(e={}){const{removeHydrogens:t=!1}=e;return this.molecules.filter(n=>n.sdf).map(n=>{let s=t?this.removeHydrogensFromSdf(n.sdf):n.sdf;return s=s.trimEnd(),s.endsWith("$$$$")||(s+=`
$$$$`),s}).join(`
`)}}class fe{constructor(e,t,n){this.addMolecule=e,this.showMoleculeDetails=t,this.ligandModal=n}populateBoundLigands(e){const t=document.getElementById("bound-ligands-section"),n=document.getElementById("bound-ligands-table"),s=document.getElementById("bound-ligands-tbody"),i=document.getElementById("no-bound-ligands-message"),o=document.getElementById("add-all-bound-btn");s.innerHTML="",y.getLigandMonomers(e).then(l=>{const a=l[e.toLowerCase()];if(a&&a.length>0){const d=a.filter(u=>!ae.includes(u.chem_comp_id)),r=d.length>0?d:a;t.style.display="block",n.style.display="table",i.style.display="none",r.forEach(u=>{const p=this.createBoundLigandRow(u,e);s.appendChild(p)});const c=r;c.length>0?(o.style.display="inline-block",o.textContent=`Add All (${c.length})`,o.onclick=()=>this.addAllLigands(c,"bound",e)):o.style.display="none"}else t.style.display="block",n.style.display="none",i.style.display="block",o.style.display="none"}).catch(l=>{console.error("Error fetching bound ligands:",l),t.style.display="block",n.style.display="none",i.style.display="block",i.textContent="Could not load bound ligand data.",o.style.display="none";const a=l.status&&l.url?`Failed to load bound ligands (status ${l.status}) from ${l.url}`:"Failed to load bound ligand data.";typeof showNotification=="function"&&showNotification(a,"error")})}createBoundLigandRow(e,t){const n=document.createElement("tr"),s=document.createElement("td");s.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",s.appendChild(i),this.ligandModal&&this.ligandModal.load2DStructure(e.chem_comp_id,i);const o=document.createElement("td"),l=document.createElement("span");l.className="ccd-code",l.textContent=e.chem_comp_id,l.title=`Click to add ${e.chem_comp_id} to database`,l.addEventListener("click",()=>{document.getElementById("close-pdb-details-modal").click(),this.showMoleculeDetails&&this.showMoleculeDetails(e.chem_comp_id)}),o.appendChild(l);const a=document.createElement("td");a.textContent=e.chain_id;const d=document.createElement("td");d.textContent=e.author_residue_number;const r=document.createElement("td");r.textContent=e.entity_id;const c=document.createElement("td");c.className="ligand-name",c.textContent=e.chem_comp_name,c.title=e.chem_comp_name;const u=document.createElement("td");u.style.display="flex",u.style.gap="4px",u.style.justifyContent="center";const p=document.createElement("button");p.className="add-ligand-btn",p.innerHTML="&#43;",p.title=`Add ${e.chem_comp_id} to database`,p.addEventListener("click",()=>{this.addMolecule({code:e.chem_comp_id,pdbId:t,labelAsymId:e.chain_id,authSeqId:e.author_residue_number})?showNotification(`Adding molecule ${e.chem_comp_id}...`,"success"):showNotification(`Molecule ${e.chem_comp_id} already exists`,"info")}),u.appendChild(p);const g=document.createElement("button");return g.className="view-ligand-btn",g.innerHTML="👁",g.title=`View ${e.chem_comp_id}`,g.addEventListener("click",async()=>{var f;try{const h=await y.getCcdSdf(e.chem_comp_id);window.viewer&&(window.viewer.addMolecule({code:e.chem_comp_id,sdf:h}),(f=window.moleculeManager)==null||f.repository.addViewerMolecule({code:e.chem_comp_id,sdf:h}),showNotification(`Sent ${e.chem_comp_id} to viewer`,"success"))}catch(h){console.error("Error fetching SDF for viewer:",h),showNotification(`Failed to load ${e.chem_comp_id}`,"error")}}),u.appendChild(g),n.appendChild(s),n.appendChild(o),n.appendChild(a),n.appendChild(d),n.appendChild(r),n.appendChild(c),n.appendChild(u),n}addAllLigands(e,t,n){if(!e||e.length===0){showNotification(`No ${t} ligands to add`,"info");return}const s=document.getElementById(`add-all-${t}-btn`);s.disabled=!0,s.textContent="Adding...";let i=0,o=0;e.forEach((l,a)=>{setTimeout(()=>{if(this.addMolecule({code:l.chem_comp_id,pdbId:n,labelAsymId:l.chain_id,authSeqId:l.author_residue_number})?i++:o++,a===e.length-1){let r="";i>0&&o>0?r=`Added ${i} new molecules, ${o} already existed`:i>0?r=`Added ${i} new molecules`:r=`All ${o} molecules already existed`,showNotification(r,i>0?"success":"info"),s.disabled=!1,s.textContent=`Add All (${e.length})`}},a*de)})}}class ye{constructor(e,{notify:t=typeof window<"u"&&window.showNotification||(typeof showNotification=="function"?showNotification:()=>{}),rdkit:n=Promise.resolve(null)}={}){this.moleculeManager=e,this.fragments=[],this.grid=null,this.searchInput=null,this.sourceFilter=null,this.ccdToggle=null,this.notify=t,this.rdkitPromise=n}init(){return this.grid=document.getElementById("fragment-grid"),this.searchInput=document.getElementById("fragment-search"),this.sourceFilter=document.getElementById("fragment-filter-source"),this.ccdToggle=document.getElementById("ccd-toggle"),this.addEventListeners(),this}addEventListeners(){this.searchInput&&this.searchInput.addEventListener("input",()=>this.renderFragments()),this.sourceFilter&&this.sourceFilter.addEventListener("change",()=>this.renderFragments()),this.ccdToggle&&this.ccdToggle.addEventListener("change",()=>this.renderFragments())}async loadFragments(){try{const t=(await y.getFragmentLibraryTsv()).split(`
`).slice(1);this.fragments=t.map((n,s)=>{const i=n.split("	");return i.length<10?null:{id:i[0]||s,name:i[1],kind:i[2],query:i[3],description:i[4],comment:i[5],url:i[6],source:i[7],ccd:i[8],in_ccd:i[9].trim()==="True"}}).filter(Boolean),this.renderFragments()}catch(e){console.error("Failed to load fragment library:",e),this.grid&&(this.grid.innerHTML="<p>No fragments match your criteria.</p>")}}renderFragments(){if(!this.grid)return;this.grid.innerHTML="";const e=this.searchInput?this.searchInput.value.toLowerCase():"",t=this.sourceFilter?this.sourceFilter.value:"all",n=this.ccdToggle?this.ccdToggle.checked:!1,s=this.fragments.filter(o=>{const l=o.name.toLowerCase().includes(e),a=t==="all"||o.source===t,d=!n||o.in_ccd;return l&&a&&d});if(s.length===0){this.grid.innerHTML="<p>No fragments match your criteria.</p>";return}const i=document.createDocumentFragment();s.forEach(o=>{const l=this.createFragmentCard(o);i.appendChild(l)}),this.grid.appendChild(i)}createFragmentCard(e){const t=document.createElement("div");t.className="molecule-card fragment-card";const n=document.createElement("h3");n.textContent=e.name,t.appendChild(n);const s=document.createElement("div");s.className="viewer-container",t.appendChild(s);const i=document.createElement("div");i.className="fragment-info";let o="No";if(e.in_ccd&&e.ccd){const a=e.ccd.split(",")[0].trim();o=`Yes (<a href="#" class="ccd-link" data-ccd="${a}">${a}</a>)`}i.innerHTML=`
            <p><strong>Source:</strong> ${e.source}</p>
            <p><strong>In CCD:</strong> ${o}</p>
            <p><strong>Type:</strong> ${e.kind}</p>
        `,t.appendChild(i);const l=i.querySelector(".ccd-link");if(l&&l.addEventListener("click",a=>{a.preventDefault();const d=a.target.dataset.ccd;this.moleculeManager&&this.moleculeManager.showMoleculeDetails&&this.moleculeManager.showMoleculeDetails(d)}),e.in_ccd&&e.ccd){const a=e.ccd.split(",")[0].trim(),d=this.moleculeManager.getMolecule(a),r=document.createElement("button");r.textContent=d?"In library":"Add to library",r.className="add-to-library-btn",d&&(r.disabled=!0,r.classList.add("added")),r.addEventListener("click",c=>{c.stopPropagation(),this.moleculeManager.addMolecule(a)?(this.notify(`Adding molecule ${a} to library...`,"success"),r.textContent="Added to library",r.disabled=!0,r.classList.add("added")):(this.notify(`Molecule ${a} already exists.`,"info"),r.textContent="In library",r.disabled=!0,r.classList.add("added"))}),t.appendChild(r)}return setTimeout(()=>{(e.kind==="SMILES"||e.kind==="SMARTS")&&e.query?this.rdkitPromise.then(a=>{if(!a){s.innerHTML='<p class="render-error">RDKit not available</p>';return}try{const d=this.sanitizeSMILES(e.query),r=a.get_mol(d),c=r.get_svg(200,150);r.delete(),s.innerHTML=c}catch(d){console.error("Error rendering SMILES for "+e.name,d),s.innerHTML=`<p class="render-error">Render error for query: ${e.query}</p>`}}):s.innerHTML=`<p class="render-error">Cannot render type: ${e.kind||"N/A"}</p>`},50),t}addFragment(e){return!e.name||!e.query?(this.notify("Fragment name and SMILES/SMARTS query are required.","error"),!1):this.fragments.some(n=>n.name.toLowerCase()===e.name.toLowerCase())?(this.notify(`Fragment "${e.name}" already exists.`,"error"),!1):(this.fragments.unshift({id:`custom-${Date.now()}`,name:e.name,kind:"SMILES",query:e.query,description:e.description,comment:"Custom fragment",url:"",source:e.source||"custom",ccd:"",in_ccd:!1}),this.renderFragments(),this.notify(`Fragment "${e.name}" added successfully!`,"success"),!0)}sanitizeSMILES(e){return e?e.replace(/[^A-Za-z0-9\(\)\[\]\.\-=#$:@\/\\]/g,""):""}}class be{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("molecule-details-modal"),this.detailsTitle=document.getElementById("details-title"),this.detailsCode=document.getElementById("details-code"),this.detailsSource=document.getElementById("details-source"),this.detailsType=document.getElementById("details-type"),this.detailsStructure=document.getElementById("details-structure"),this.pdbInstanceFields=document.querySelectorAll(".pdb-instance-field"),this.detailsPdbId=document.getElementById("details-pdb-id"),this.detailsChain=document.getElementById("details-chain"),this.detailsResidue=document.getElementById("details-residue"),this.detailsViewer=document.getElementById("details-viewer-container"),this.detailsJSON=document.getElementById("details-json"),this.viewer=null;const t=document.getElementById("close-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",n=>{n.target===this.modal&&this.close()})}show(e,t){this.cleanupViewer(),this.detailsTitle.textContent=`Molecule Details: ${e}`,this.detailsCode.textContent=e;const n=["ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL"].includes(e);this.detailsSource.textContent=n?"building_blocks":"reagents",this.detailsType.textContent=n?"building_block":"reagent";const s=this.moleculeManager.getMolecule?this.moleculeManager.getMolecule(e):null,i=s&&s.pdbId&&s.authSeqId&&s.labelAsymId;this.detailsStructure&&(this.detailsStructure.textContent=i?"PDB instance":"Ideal CCD SDF"),this.pdbInstanceFields&&this.pdbInstanceFields.forEach(l=>{l.style.display=i?"flex":"none"}),i?(this.detailsPdbId&&(this.detailsPdbId.textContent=s.pdbId.toUpperCase()),this.detailsChain&&(this.detailsChain.textContent=s.labelAsymId),this.detailsResidue&&(this.detailsResidue.textContent=s.authSeqId)):(this.detailsPdbId&&(this.detailsPdbId.textContent="-"),this.detailsChain&&(this.detailsChain.textContent="-"),this.detailsResidue&&(this.detailsResidue.textContent="-")),this.detailsViewer.innerHTML="<p>Loading structure...</p>",i?y.getPdbFile(s.pdbId).then(l=>{setTimeout(()=>{var a,d;try{const r=(d=(a=document.body)==null?void 0:a.classList)!=null&&d.contains("dark-mode")?"#e0e0e0":"white",c=$3Dmol.createViewer(this.detailsViewer,{backgroundColor:r,width:"100%",height:"100%"});this.detailsViewer.viewer=c,c.addModel(l,"pdb"),c.setStyle({},{cartoon:{color:"lightgrey"}});const u={chain:s.labelAsymId,resi:parseInt(s.authSeqId,10)},p={within:{distance:5,sel:u}};c.setStyle(p,{stick:{radius:.15,colorscheme:"element"}}),c.setStyle(u,{stick:{radius:.2,colorscheme:"element"},sphere:{scale:.3,colorscheme:"element"}}),c.addSurface($3Dmol.SurfaceType.MS,{opacity:.6,color:"white"},p),c.zoomTo(u),c.render(),this.viewer=c}catch(r){console.error(`Error initializing PDB viewer for ${e}:`,r),this.detailsViewer.innerHTML='<p style="color: #666;">Structure rendering error</p>'}},100)}).catch(l=>{console.error(`Error fetching PDB for ${e}:`,l),this.detailsViewer.innerHTML='<p style="color: #666;">Structure data not available</p>'}):t?setTimeout(()=>{var l,a;try{const d=(a=(l=document.body)==null?void 0:l.classList)!=null&&a.contains("dark-mode")?"#e0e0e0":"white",r=$3Dmol.createViewer(this.detailsViewer,{backgroundColor:d,width:"100%",height:"100%"});this.detailsViewer.viewer=r,r.addModel(t,"sdf"),r.setStyle({},{stick:{radius:.2,colorscheme:"element"},sphere:{scale:.3,colorscheme:"element"}}),r.setStyle({elem:"H"},{}),r.zoomTo(),r.render(),this.viewer=r}catch(d){console.error(`Error initializing details viewer for ${e}:`,d),this.detailsViewer.innerHTML='<p style="color: #666;">Structure rendering error</p>'}},100):this.detailsViewer.innerHTML='<p style="color: #666;">Structure data not available</p>';const o={molecule_id:`mol_${e.toLowerCase()}`,ccd_code:e,source:n?"building_blocks":"reagents",type:n?"building_block":"reagent",structure_type:i?"pdb_instance":"ideal_sdf",structure_data:t?t.substring(0,100)+"...":"N/A",properties:{molecular_weight:null,formula:null,status:s?s.status:"unknown"}};i&&(o.pdb_instance={pdb_id:s.pdbId,auth_seq_id:s.authSeqId,label_asym_id:s.labelAsymId}),this.detailsJSON.textContent=JSON.stringify(o,null,2),this.modal.style.display="block"}close(){this.cleanupViewer(),this.modal.style.display="none"}cleanupViewer(){var e,t;if(this.viewer){try{this.viewer.clear(),typeof this.viewer.destroy=="function"?this.viewer.destroy():(e=this.viewer)!=null&&e.gl&&typeof this.viewer.gl.getExtension=="function"&&((t=this.viewer.gl.getExtension("WEBGL_lose_context"))==null||t.loseContext())}catch(n){console.warn("Error destroying viewer:",n)}this.viewer=null}this.detailsViewer&&(this.detailsViewer.innerHTML="",this.detailsViewer.viewer=null)}}class we{constructor(e){this.moleculeManager=e,this.currentSimilarLigands=[]}async load(e){var o,l,a,d,r,c,u,p,g;const t=document.getElementById("similar-ligands-container"),n=document.getElementById("similar-ligands-table"),s=document.getElementById("similar-ligands-tbody"),i=document.getElementById("add-all-similar-btn");this.currentSimilarLigands=[];try{t.innerHTML="<p>Loading similar ligands...</p>",n.style.display="none",i.style.display="none";const h=(await y.getSimilarCcds(e))[e];if(!h||!((l=(o=h[0])==null?void 0:o.stereoisomers)!=null&&l.length)&&!((d=(a=h[0])==null?void 0:a.same_scaffold)!=null&&d.length)&&!((c=(r=h[0])==null?void 0:r.similar_ligands)!=null&&c.length)){t.innerHTML='<div class="no-similar-ligands">No similar ligands found</div>';return}s.innerHTML="";const w=(v,_)=>{_.forEach(C=>{this.currentSimilarLigands.push(C);const M=this.createSimilarLigandRow(v,C);s.appendChild(M)})};(u=h[0])!=null&&u.stereoisomers&&w("stereoisomer",h[0].stereoisomers),(p=h[0])!=null&&p.same_scaffold&&w("scaffold",h[0].same_scaffold),(g=h[0])!=null&&g.similar_ligands&&w("similar",h[0].similar_ligands),t.style.display="none",n.style.display="table",this.currentSimilarLigands.length>0&&(i.style.display="inline-block",i.textContent=`Add All (${this.currentSimilarLigands.length})`,i.replaceWith(i.cloneNode(!0)),document.getElementById("add-all-similar-btn").addEventListener("click",()=>this.addAllSimilarLigands()))}catch(f){console.error(`Error fetching similar CCDs for ${e}:`,f),t.innerHTML='<div class="no-similar-ligands">Similar ligands feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoSimilarLigands()}}addAllSimilarLigands(){if(!this.currentSimilarLigands||this.currentSimilarLigands.length===0){showNotification("No similar ligands to add","info");return}const e=document.getElementById("add-all-similar-btn");e.disabled=!0,e.textContent="Adding...";let t=0,n=0;this.currentSimilarLigands.forEach((s,i)=>{setTimeout(()=>{if(this.moleculeManager.addMolecule(s.chem_comp_id)?t++:n++,i===this.currentSimilarLigands.length-1){let l="";t>0&&n>0?l=`Added ${t} new molecules, ${n} already existed`:t>0?l=`Added ${t} new molecules`:l=`All ${n} molecules already existed`,showNotification(l,t>0?"success":"info"),e.disabled=!1,e.textContent=`Add All (${this.currentSimilarLigands.length})`}},i*100)})}createSimilarLigandRow(e,t){const n=document.createElement("tr"),s=document.createElement("td");s.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",s.appendChild(i),this.load2DStructure(t.chem_comp_id,i);const o=document.createElement("td"),l=document.createElement("span");l.className=`type-badge type-${e}`;let a="";switch(e){case"stereoisomer":a="Stereoisomer";break;case"scaffold":a="Same Scaffold";break;case"similar":a="Similar";break}l.textContent=a,o.appendChild(l);const d=document.createElement("td"),r=document.createElement("span");r.className="ccd-code",r.textContent=t.chem_comp_id,r.title=`Click to add ${t.chem_comp_id} to database`,r.addEventListener("click",()=>{document.getElementById("close-details-modal").click(),this.moleculeManager.showMoleculeDetails(t.chem_comp_id)}),d.appendChild(r);const c=document.createElement("td");c.className="ligand-name",c.textContent=t.name||"N/A";const u=document.createElement("td");if(u.className="match-info",t.similarity_score){const f=Math.round(t.similarity_score*100);u.textContent=`${f}% similarity`}else t.substructure_match&&t.substructure_match.length>0?u.textContent=t.substructure_match.join(", "):u.textContent="-";const p=document.createElement("td"),g=document.createElement("button");return g.className="add-ligand-btn",g.innerHTML="&#43;",g.title=`Add ${t.chem_comp_id} to database`,g.addEventListener("click",()=>{this.moleculeManager.addMolecule(t.chem_comp_id)?showNotification(`Adding molecule ${t.chem_comp_id}...`,"success"):showNotification(`Molecule ${t.chem_comp_id} already exists`,"info")}),p.appendChild(g),n.appendChild(s),n.appendChild(o),n.appendChild(d),n.appendChild(c),n.appendChild(u),n.appendChild(p),n}async load2DStructure(e,t){try{const n=`${x}/${e.toUpperCase()}_200.svg`,s=document.createElement("img");s.src=n,s.alt=`2D structure of ${e}`,s.onload=()=>{t.innerHTML="",t.appendChild(s)},s.onerror=()=>{const i=`${x}/${e.toLowerCase()}_200.svg`,o=document.createElement("img");o.src=i,o.alt=`2D structure of ${e}`,o.onload=()=>{t.innerHTML="",t.appendChild(o)},o.onerror=()=>{t.className="error",t.textContent="No image"}}}catch(n){console.error(`Error loading 2D structure for ${e}:`,n),t.className="error",t.textContent="Error"}}showDemoSimilarLigands(){const e=document.getElementById("similar-ligands-container"),t=document.getElementById("similar-ligands-table"),n=document.getElementById("similar-ligands-tbody"),s=[{type:"stereoisomer",chem_comp_id:"HEJ",name:"9-{5-O-[(S)-hydroxy{[(R)-hydroxy(phosphonooxy)phosphoryl]oxy}phosphoryl]-beta-D-arabinofuranosyl}-9H-purin-6-amine",substructure_match:[]},{type:"scaffold",chem_comp_id:"E7X",name:"(2~{S})-4-[[(2~{R},3~{S},4~{R},5~{R})-5-(6-aminopurin-9-yl)-3,4-bis(oxidanyl)oxolan-2-yl]methyl-(2-hydroxyethyl)amino]-2-azaniumyl-butanoate",substructure_match:["N7"]},{type:"scaffold",chem_comp_id:"ADP",name:"Adenosine 5-diphosphate",substructure_match:["N1","N3","N7","N9"]}];n.innerHTML="",s.forEach(i=>{const o=this.createSimilarLigandRow(i.type,i);n.appendChild(o)}),e.innerHTML='<div style="background: #e8f5e8; padding: 10px; border-radius: 4px; margin-bottom: 10px; font-size: 13px;"><strong>Demo Data:</strong> Showing sample similar ligands for ATP. In production, this would fetch real data from the PDBe API.</div>',t.style.display="table"}}class ve{constructor(e){this.moleculeManager=e}async load(e){const t=document.getElementById("pdb-entries-container"),n=document.getElementById("pdb-entries-table-container"),s=document.getElementById("pdb-entries-tbody");try{t.innerHTML="<p>Loading PDB entries...</p>",s.innerHTML="",n.style.display="none",n.querySelectorAll('p[style*="font-size: 12px"]').forEach(d=>d.remove());const l=(await y.getPdbEntriesForCcd(e))[e];if(!l||l.length===0){t.innerHTML='<div class="no-pdb-entries">No PDB entries found containing this CCD code</div>';return}s.innerHTML="";const a=l.slice(0,10);console.log(`Found ${l.length} PDB entries for ${e}, showing first ${a.length}`);for(const d of a)try{const r=await this.moleculeManager.fetchRCSBDetails(d),c=this.createDetailedPDBEntryRow(d,r);s.appendChild(c)}catch(r){console.warn(`Failed to fetch details for ${d}:`,r);const c=this.createSimplePDBEntryRow(d);s.appendChild(c)}if(t.style.display="none",n.style.display="block",l.length>10){const d=document.createElement("p");d.style.fontSize="12px",d.style.color="#666",d.style.fontStyle="italic",d.style.marginTop="10px",d.textContent=`Showing first 10 of ${l.length} PDB entries containing ${e}`,n.appendChild(d)}}catch(i){console.error(`Error fetching PDB entries for ${e}:`,i),s.innerHTML="",n.style.display="none",t.innerHTML='<div class="no-pdb-entries">PDB entries feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoPDBEntries()}}createDetailedPDBEntryRow(e,t){const n=document.createElement("tr"),s=document.createElement("td"),i=document.createElement("span");i.className="pdb-id",i.textContent=e.toUpperCase(),i.title=`Click to view details for ${e.toUpperCase()}`,i.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),s.appendChild(i);const o=document.createElement("td");o.className="pdb-title",t&&t.struct&&t.struct.title?(o.textContent=t.struct.title,o.title=t.struct.title):o.textContent="N/A";const l=document.createElement("td");l.className="pdb-resolution",t&&t.rcsb_entry_info&&t.rcsb_entry_info.resolution_combined&&t.rcsb_entry_info.resolution_combined.length>0?l.textContent=`${t.rcsb_entry_info.resolution_combined[0].toFixed(2)}`:l.textContent="N/A";const a=document.createElement("td");if(a.className="pdb-date",t&&t.rcsb_accession_info&&t.rcsb_accession_info.initial_release_date){const u=new Date(t.rcsb_accession_info.initial_release_date);a.textContent=u.toLocaleDateString()}else a.textContent="N/A";const d=document.createElement("td");d.className="view-buttons-cell";const r=document.createElement("button");r.textContent="RCSB PDB",r.className="view-structure-btn rcsb-btn",r.title=`View ${e.toUpperCase()} on RCSB PDB`,r.addEventListener("click",()=>{window.open(`${S}/${e.toUpperCase()}`,"_blank")});const c=document.createElement("button");return c.textContent="PDBe",c.className="view-structure-btn pdbe-btn",c.title=`View ${e.toUpperCase()} on PDBe`,c.addEventListener("click",()=>{window.open(`${D}/${e.toLowerCase()}`,"_blank")}),d.appendChild(r),d.appendChild(c),n.appendChild(s),n.appendChild(o),n.appendChild(l),n.appendChild(a),n.appendChild(d),n}createSimplePDBEntryRow(e){const t=document.createElement("tr"),n=document.createElement("td"),s=document.createElement("span");s.className="pdb-id",s.textContent=e.toUpperCase(),s.title=`Click to view details for ${e.toUpperCase()}`,s.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),n.appendChild(s);const i=document.createElement("td");i.textContent="Loading...",i.className="pdb-title";const o=document.createElement("td");o.textContent="N/A",o.className="pdb-resolution";const l=document.createElement("td");l.textContent="N/A",l.className="pdb-date";const a=document.createElement("td");a.className="view-buttons-cell";const d=document.createElement("button");d.textContent="RCSB PDB",d.className="view-structure-btn rcsb-btn",d.title=`View ${e.toUpperCase()} on RCSB PDB`,d.addEventListener("click",()=>{window.open(`${S}/${e.toUpperCase()}`,"_blank")});const r=document.createElement("button");return r.textContent="PDBe",r.className="view-structure-btn pdbe-btn",r.title=`View ${e.toUpperCase()} on PDBe`,r.addEventListener("click",()=>{window.open(`${D}/${e.toLowerCase()}`,"_blank")}),a.appendChild(d),a.appendChild(r),t.appendChild(n),t.appendChild(i),t.appendChild(o),t.appendChild(l),t.appendChild(a),t}showDemoPDBEntries(){const e=document.getElementById("pdb-entries-container"),t=document.getElementById("pdb-entries-table-container"),n=document.getElementById("pdb-entries-tbody");n.innerHTML="",t.querySelectorAll('p[style*="font-size: 12px"]').forEach(o=>o.remove()),[{pdb_id:"1atp",title:"CRYSTAL STRUCTURE OF THE TERNARY COMPLEX OF PHENYLALANYL-TRNA SYNTHETASE WITH TRNA AND A PHENYLALANYL-ADENYLATE ANALOGUE",resolution:2.7,release_date:"1995-01-31"},{pdb_id:"2atp",title:"ADENOSINE-5'-TRIPHOSPHATE",resolution:1.83,release_date:"1996-07-17"},{pdb_id:"3atp",title:"ATP SYNTHASE",resolution:2.4,release_date:"1999-02-24"},{pdb_id:"1a49",title:"CRYSTAL STRUCTURE OF ADENYLYL CYCLASE",resolution:2.8,release_date:"1998-04-15"},{pdb_id:"1a5u",title:"ATP BINDING CASSETTE TRANSPORTER",resolution:3.2,release_date:"1998-08-12"}].forEach(o=>{const l={struct:{title:o.title},rcsb_entry_info:{resolution_combined:[o.resolution]},rcsb_accession_info:{initial_release_date:o.release_date}},a=this.createDetailedPDBEntryRow(o.pdb_id,l);n.appendChild(a)}),e.innerHTML='<div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 4px; font-size: 12px; margin-bottom: 10px;">Demo data shown due to CORS restrictions. In production, this would show all PDB entries containing ATP.</div>',t.style.display="block"}}const Ee="https://data.rcsb.org/rest/v1/core/chemcomp";class Ce{static async getProperties(e){try{const t=await fetch(`${Ee}/${e.toUpperCase()}`);if(!t.ok)throw new Error(`HTTP error ${t.status}`);const n=await t.json(),s=(n==null?void 0:n.chem_comp)||{},i=(n==null?void 0:n.rcsb_chem_comp_info)||{};return{molecularWeight:s.formula_weight??null,formula:s.formula??null,atomCount:i.atom_count??null,heavyAtomCount:i.atom_count_heavy??null,aromaticBondCount:i.bond_count_aromatic??null}}catch(t){return console.error(`Failed to fetch properties for ${e}:`,t),null}}}class Me{constructor(e){this.details=new be(e),this.similarLigandTable=new we(e),this.pdbEntryList=new ve(e),this.propertiesContainer=document.getElementById("ligand-properties")}show(e,t){this.details.show(e,t),this.similarLigandTable.load(e),this.pdbEntryList.load(e),this.propertiesContainer&&(this.propertiesContainer.textContent="Loading properties...",Promise.all([Ce.getProperties(e).catch(()=>null),y.getPubChemMetadata(e).catch(()=>null)]).then(([n,s])=>{var a,d,r;if(!n&&!s){this.propertiesContainer.textContent="Properties unavailable";return}let i="";const o=((a=s==null?void 0:s.properties)==null?void 0:a.MolecularWeight)??(n==null?void 0:n.molecularWeight),l=((d=s==null?void 0:s.properties)==null?void 0:d.MolecularFormula)??(n==null?void 0:n.formula);(o||l)&&(i+=`<div>Molecular Weight: ${o??"N/A"}</div>`,i+=`<div>Formula: ${l??"N/A"}</div>`),n&&(n.atomCount!=null&&(i+=`<div>Atom Count: ${n.atomCount}</div>`),n.heavyAtomCount!=null&&(i+=`<div>Heavy Atom Count: ${n.heavyAtomCount}</div>`),n.aromaticBondCount!=null&&(i+=`<div>Aromatic Bond Count: ${n.aromaticBondCount}</div>`)),(r=s==null?void 0:s.properties)!=null&&r.IUPACName&&(i+=`<div>IUPAC Name: ${s.properties.IUPACName}</div>`),s!=null&&s.synonyms&&s.synonyms.length&&(i+=`<div>Synonyms: ${s.synonyms.slice(0,5).join(", ")}</div>`),s!=null&&s.link&&(i+=`<div><a href="${s.link}" target="_blank">PubChem Entry</a></div>`),this.propertiesContainer.innerHTML=i}).catch(()=>{this.propertiesContainer.textContent="Properties unavailable"}))}close(){this.details.close()}load2DStructure(e,t){return this.similarLigandTable.load2DStructure(e,t)}}class _e{constructor(e,t,n={}){this.grid=e,this.repository=t,this.onDelete=n.onDelete,this.onShowDetails=n.onShowDetails,this.onCompare=n.onCompare,this.draggedElement=null}createMoleculeCardFromSmiles(e,t,n=t){const s=document.createElement("div");s.className="molecule-card",s.draggable=!0,s.setAttribute("data-molecule-code",t),s.setAttribute("data-molecule-id",n);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",s.appendChild(i);const o=document.createElement("div");o.className="delete-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',o.title=`Delete ${t}`,o.addEventListener("click",u=>{u.stopPropagation(),this.onDelete&&this.onDelete(t)}),s.appendChild(o);const l=document.createElement("div");l.className="download-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',l.title=`Download ${t} as SDF`,l.addEventListener("click",u=>{u.stopPropagation(),this.downloadSdf(t)}),s.appendChild(l);const a=document.createElement("div");a.className="compare-btn",a.textContent="⇆",a.title=`Compare ${t}`,a.addEventListener("click",u=>{u.stopPropagation(),this.onCompare&&this.onCompare(t)}),s.appendChild(a);const d=document.createElement("div");d.className="molecule-code",d.textContent=t,s.appendChild(d);const r=document.createElement("div");r.className="molecule-viewer",r.id=`viewer-${t}`,s.appendChild(r);const c=document.createElement("div");c.className="smiles-label",c.textContent=`SMILES: ${e}`,c.style.fontSize="10px",c.style.color="#666",c.style.marginTop="5px",s.appendChild(c),this.grid.appendChild(s),this.renderSmilesIn2D(e,r),this.addDragEvents(s)}renderSmilesIn2D(e,t){t.innerHTML=`
            <div style="display:flex;align-items:center;justify-content:center;height:100%;background:#f8f9fa;border:1px solid #e9ecef;border-radius:4px;">
                <div style="text-align:center;padding:10px;">
                    <div style="font-size:24px;margin-bottom:5px;">🧪</div>
                    <div style="font-size:10px;color:#666;">SMILES</div>
                </div>
            </div>
        `}createMoleculeCard(e,t,n="sdf",s=t){const i=document.createElement("div");i.className="molecule-card",i.draggable=!0,i.setAttribute("data-molecule-code",t),i.setAttribute("data-molecule-id",s);const o=document.createElement("div");o.className="drag-handle",o.innerHTML="⋯",i.appendChild(o);const l=document.createElement("div");l.className="delete-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',l.title=`Delete ${t}`,l.addEventListener("click",p=>{p.stopPropagation(),this.onDelete&&this.onDelete(t)}),i.appendChild(l);const a=document.createElement("div");a.className="download-btn",a.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',a.title=`Download ${t} as SDF`,a.addEventListener("click",p=>{p.stopPropagation(),this.downloadSdf(t,e)}),i.appendChild(a);const d=document.createElement("div");d.className="compare-btn",d.textContent="⇆",d.title=`Compare ${t}`,d.addEventListener("click",p=>{p.stopPropagation(),this.onCompare&&this.onCompare(t)}),i.appendChild(d);const r=document.createElement("div");r.className="view-btn",r.textContent="👁",r.title=`View ${t}`,r.addEventListener("click",p=>{var g;p.stopPropagation(),window.viewer&&(window.viewer.addMolecule({code:t,sdf:e}),(g=window.moleculeManager)==null||g.repository.addViewerMolecule({code:t,sdf:e}),typeof showNotification=="function"&&showNotification(`Sent ${t} to viewer`,"success"))}),i.appendChild(r);const c=document.createElement("h3");c.textContent=t,c.style.cursor="pointer",c.addEventListener("click",()=>{this.onShowDetails&&this.onShowDetails(t,e,n)}),i.appendChild(c);const u=document.createElement("div");u.id=`viewer-${t}`,u.className="viewer-container",i.appendChild(u),this.grid.appendChild(i),this.addDragEvents(i),setTimeout(()=>{var p,g;try{const f=(g=(p=document.body)==null?void 0:p.classList)!=null&&g.contains("dark-mode")?"#e0e0e0":"white",h=$3Dmol.createViewer(u,{backgroundColor:f});u.viewer=h,h.addModel(e,n),h.setStyle({},{stick:{}}),h.setStyle({elem:"H"},{}),h.zoomTo(),h.render()}catch(f){console.error(`Error initializing 3Dmol viewer for ${t}:`,f),u.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>'}},100)}createNotFoundCard(e,t="Not found",n=e){const s=document.createElement("div");s.className="molecule-card",s.draggable=!0,s.setAttribute("data-molecule-code",e),s.setAttribute("data-molecule-id",n);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",s.appendChild(i);const o=document.createElement("div");o.className="delete-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',o.title=`Delete ${e}`,o.addEventListener("click",d=>{d.stopPropagation(),this.onDelete&&this.onDelete(e)}),s.appendChild(o);const l=document.createElement("div");l.className="download-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',l.title=`Download ${e} as SDF`,l.addEventListener("click",d=>{d.stopPropagation(),this.downloadSdf(e)}),s.appendChild(l);const a=document.createElement("div");a.className="not-found-content",a.innerHTML=`<h3>${e}</h3><p>${t}</p>`,s.appendChild(a),this.grid.appendChild(s),this.addDragEvents(s)}addDragEvents(e){e.addEventListener("dragstart",t=>this.handleDragStart(t)),e.addEventListener("dragover",t=>this.handleDragOver(t)),e.addEventListener("drop",t=>this.handleDrop(t)),e.addEventListener("dragend",t=>this.handleDragEnd(t))}handleDragStart(e){this.draggedElement=e.currentTarget,e.currentTarget.classList.add("dragging"),e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/html",e.currentTarget.outerHTML)}handleDragOver(e){return e.preventDefault&&e.preventDefault(),e.dataTransfer.dropEffect="move",!1}handleDrop(e){if(e.stopPropagation&&e.stopPropagation(),this.draggedElement!==e.currentTarget){const t=Array.from(this.grid.querySelectorAll(".molecule-card")),n=t.indexOf(this.draggedElement),s=t.indexOf(e.currentTarget);n<s?e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget.nextSibling):e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget);const i=this.repository.molecules,o=this.draggedElement.getAttribute("data-molecule-code"),l=e.currentTarget.getAttribute("data-molecule-code"),a=i.findIndex(r=>r.code===o),d=i.findIndex(r=>r.code===l);if(a>-1&&d>-1){const[r]=i.splice(a,1);i.splice(d,0,r)}}return!1}handleDragEnd(e){e.currentTarget.classList.remove("dragging"),this.draggedElement=null}async downloadSdf(e,t){try{let n=t;if(n||(n=await y.getCcdSdf(e)),!n)throw new Error("No SDF data available");const s=new Blob([n],{type:"chemical/x-mdl-sdfile"}),i=URL.createObjectURL(s),o=document.createElement("a");o.href=i,o.download=`${e}.sdf`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(i)}catch(n){console.error(`Failed to download SDF for ${e}:`,n)}}clearAll(){this.grid.querySelectorAll(".molecule-card").forEach(t=>t.remove())}}class Le{constructor(e){this.boundLigandTable=e,this.modal=document.getElementById("pdb-details-modal");const t=document.getElementById("close-pdb-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",n=>{n.target===this.modal&&this.close()})}async fetchRCSBDetails(e){try{return await y.getRcsbEntry(e)}catch(t){return console.error(`Error fetching RCSB details for PDB ${e}:`,t),null}}async showPDBDetailsModal(e){const t=document.getElementById("pdb-details-title"),n=document.getElementById("pdb-details-body"),s=document.getElementById("pdb-viewer-container");t.textContent=`PDB Entry Details: ${e.toUpperCase()}`,n.innerHTML='<div class="properties-loading">Loading PDB entry details...</div>',s.innerHTML="",s.style.display="none",this.modal.style.display="block";try{const i=await this.fetchRCSBDetails(e);if(!i)throw new Error("No data found for this PDB entry.");n.innerHTML=this.createPDBDetailsHTML(i),this.boundLigandTable&&this.boundLigandTable.populateBoundLigands(e),document.getElementById("open-rcsb-btn").addEventListener("click",()=>{window.open(`${S}/${e.toUpperCase()}`,"_blank")}),document.getElementById("open-pdbe-btn").addEventListener("click",()=>{window.open(`${D}/${e.toLowerCase()}`,"_blank")}),s.style.display="block",s.innerHTML='<p class="properties-loading">Loading 3D structure...</p>';const o=await y.getPdbFile(e);setTimeout(()=>{var l,a;try{const d=(a=(l=document.body)==null?void 0:l.classList)!=null&&a.contains("dark-mode")?"#e0e0e0":"white",r=$3Dmol.createViewer(s,{backgroundColor:d,width:"100%",height:"100%"});s.viewer=r,r.addModel(o,"pdb"),r.setStyle({},{cartoon:{color:"#b3b3b3",opacity:.7}}),r.setStyle({hetflag:!0},{stick:{radius:.5,colorscheme:"element"}}),r.setStyle({hetflag:!0,resn:["HOH","H2O","WAT"]},{}),r.zoomTo(),r.render()}catch(d){console.error("Error creating 3Dmol viewer:",d),s.innerHTML='<div class="no-pdb-entries">Could not render 3D structure.</div>'}},100)}catch(i){console.error("Error fetching PDB details:",i),n.innerHTML='<div class="no-pdb-entries">Could not load details for this PDB entry.</div>',s.style.display="none";const o=i.status&&i.url?`Failed to load PDB details (status ${i.status}) from ${i.url}`:"Failed to load PDB entry details.";typeof showNotification=="function"&&showNotification(o,"error")}}close(){this.modal&&(this.modal.style.display="none")}createPDBDetailsHTML(e){var d,r,c,u,p,g,f,h,w,v,_,C;const t=((d=e.struct)==null?void 0:d.title)||"Not available",n=((u=(c=(r=e.citation)==null?void 0:r[0])==null?void 0:c.rcsb_authors)==null?void 0:u.join(", "))||"Not available",s=(p=e.rcsb_accession_info)!=null&&p.initial_release_date?new Date(e.rcsb_accession_info.initial_release_date).toLocaleDateString():"Not available",i=(h=(f=(g=e.rcsb_entry_info)==null?void 0:g.resolution_combined)==null?void 0:f[0])!=null&&h.toFixed(2)?`${e.rcsb_entry_info.resolution_combined[0].toFixed(2)} Å`:"N/A",o=((v=(w=e.exptl)==null?void 0:w[0])==null?void 0:v.method)||"N/A",l=((C=(_=e.entity_src_gen)==null?void 0:_[0])==null?void 0:C.pdbx_host_org_scientific_name)||"Not available";return`
            <div class="details-section" style="padding-bottom: 0;">
                <div class="pdb-details-grid" style="grid-template-columns: repeat(5, 1fr);">
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">PDB ID</div>
                        <div class="pdb-info-value">${e.rcsb_id.toUpperCase()}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Organism</div>
                        <div class="pdb-info-value">${l}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Method</div>
                        <div class="pdb-info-value">${o}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Resolution</div>
                        <div class="pdb-info-value">${i}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Release Date</div>
                        <div class="pdb-info-value">${s}</div>
                    </div>
                </div>
            </div>
            <div class="details-section" style="padding-top: 0;">
                 <div class="pdb-details-grid">
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Title</div>
                        <div class="pdb-info-value" title="${t}">${t}</div>
                    </div>
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Authors</div>
                        <div class="pdb-info-value">${n}</div>
                    </div>
                </div>
                <div class="pdb-external-links">
                    <button id="open-rcsb-btn" class="view-structure-btn rcsb-btn">RCSB PDB</button>
                    <button id="open-pdbe-btn" class="view-structure-btn pdbe-btn">PDBe</button>
                </div>
            </div>
            <div class="details-section">
                <h4>Interactive Molecular Structure</h4>
            </div>
        `}}const Ie=["ATP","NAG","FAD","HEM","NAD","ADP","SAM","FMN","GDP","GTP"];class Be{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("add-molecule-modal"),this.codeInput=document.getElementById("molecule-code"),this.errorText=document.getElementById("ccd-error"),this.confirmBtn=document.getElementById("confirm-add-btn"),this.cancelBtn=document.getElementById("cancel-btn"),this.closeBtn=document.getElementById("close-modal"),this.luckyBtn=document.getElementById("feeling-lucky-btn"),this.pdbIdInput=document.getElementById("pdb-id"),this.authSeqIdInput=document.getElementById("auth-seq-id"),this.labelAsymIdInput=document.getElementById("label-asym-id"),this.instanceError=document.getElementById("instance-error"),this.cancelBtn&&this.cancelBtn.addEventListener("click",()=>this.close()),this.closeBtn&&this.closeBtn.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()}),this.codeInput&&this.codeInput.addEventListener("input",()=>this.handleInput()),this.pdbIdInput&&this.pdbIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.authSeqIdInput&&this.authSeqIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.labelAsymIdInput&&this.labelAsymIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.confirmBtn&&this.confirmBtn.addEventListener("click",()=>this.handleSubmit()),this.luckyBtn&&(this.luckyCodes=Ie,this.luckyCodes.length>0&&this.luckyBtn.addEventListener("click",()=>this.handleLucky()))}open(){this.modal&&(this.reset(),this.modal.style.display="block",this.codeInput.focus())}close(){this.modal&&(this.modal.style.display="none")}reset(){this.codeInput&&(this.codeInput.value=""),this.errorText&&(this.errorText.textContent=""),this.instanceError&&(this.instanceError.textContent=""),this.pdbIdInput&&(this.pdbIdInput.value=""),this.authSeqIdInput&&(this.authSeqIdInput.value=""),this.labelAsymIdInput&&(this.labelAsymIdInput.value=""),this.confirmBtn&&(this.confirmBtn.disabled=!0)}handleInput(){let e=this.codeInput.value.toUpperCase();this.codeInput.value=e;const t=/^[A-Z0-9]{3}$/.test(e);this.errorText&&(this.errorText.textContent=t?"":"Code must be 3 alphanumeric characters."),this.confirmBtn&&(this.confirmBtn.disabled=!t)}handleInstanceInput(){this.instanceError&&(this.instanceError.textContent="")}handleLucky(){if(!this.luckyCodes||this.luckyCodes.length===0)return;let e,t=0;do e=this.luckyCodes[Math.floor(Math.random()*this.luckyCodes.length)],t++;while(this.moleculeManager.getMolecule(e)&&t<10);this.moleculeManager.addMolecule(e)?window.showNotification(`Adding molecule ${e}...`,"success"):window.showNotification(`Molecule ${e} already exists`,"info"),this.close()}handleSubmit(){const e=this.codeInput.value.toUpperCase(),t=this.pdbIdInput.value.trim().toUpperCase(),n=this.authSeqIdInput.value.trim(),s=this.labelAsymIdInput.value.trim().toUpperCase();if(t||n||s){if(!(t&&n&&s)){this.instanceError&&(this.instanceError.textContent="PDB ID, residue number and chain are required.");return}this.moleculeManager.addPdbInstance({code:e,pdbId:t,authSeqId:n,labelAsymId:s})?window.showNotification(`Adding ligand ${e} from ${t}...`,"success"):window.showNotification(`Ligand ${e} instance already exists`,"info")}else this.moleculeManager.addMolecule(e)?window.showNotification(`Adding molecule ${e}...`,"success"):window.showNotification(`Molecule ${e} already exists`,"info");this.close()}}class Se{constructor(e){this.moleculeManager=e,this.searchBtn=null,this.searchInput=null,this.suggestedDropdown=null,this.resultsContainer=null,this.resultsBody=null,this.loadingIndicator=null,this.noResultsMessage=null,this.hideAidsToggle=null,this.hideIonsToggle=null,this.currentProteinDetails=[],this.resultsCountMessage=null,this.loadMoreBtn=null,this.allPdbIds=[],this.totalResults=0,this.currentOffset=0,this.limit=20}init(){return this.searchBtn=document.getElementById("protein-group-search-btn"),this.searchInput=document.getElementById("protein-group-search"),this.suggestedDropdown=document.getElementById("suggested-groups-dropdown"),this.resultsContainer=document.getElementById("protein-results-table-container"),this.resultsBody=document.getElementById("protein-results-tbody"),this.loadingIndicator=document.getElementById("protein-loading-indicator"),this.noResultsMessage=document.getElementById("no-protein-results-message"),this.hideAidsToggle=document.getElementById("hide-aids-toggle"),this.hideIonsToggle=document.getElementById("hide-ions-toggle"),this.resultsCountMessage=document.getElementById("protein-results-count"),this.loadMoreBtn=document.getElementById("protein-load-more"),this.searchBtn&&this.searchBtn.addEventListener("click",()=>{const e=this.searchInput.value.trim();e?this.fetchProteinEntries(e):showNotification("Please enter a Group ID or UniProt ID.","info")}),this.searchInput&&this.searchInput.addEventListener("keydown",e=>{if(e.key==="Enter"){e.preventDefault();const t=this.searchInput.value.trim();t?this.fetchProteinEntries(t):showNotification("Please enter a Group ID or UniProt ID.","info"),this.searchInput.blur()}}),this.hideAidsToggle&&this.hideAidsToggle.addEventListener("change",()=>{this.currentProteinDetails.length>0&&this.displayResults(this.currentProteinDetails)}),this.hideIonsToggle&&this.hideIonsToggle.addEventListener("change",()=>{this.currentProteinDetails.length>0&&this.displayResults(this.currentProteinDetails)}),this.suggestedDropdown&&this.suggestedDropdown.addEventListener("change",()=>{const e=this.suggestedDropdown.value;e&&(this.searchInput&&(this.searchInput.value=e),this.fetchProteinEntries(e))}),this.loadMoreBtn&&this.loadMoreBtn.addEventListener("click",()=>{this.loadMoreResults()}),this}async fetchProteinEntries(e){this.loadingIndicator.style.display="block",this.resultsContainer.style.display="none",this.noResultsMessage.style.display="none",this.resultsCountMessage&&(this.resultsCountMessage.style.display="none"),this.loadMoreBtn&&(this.loadMoreBtn.style.display="none");try{let t=[];e.toUpperCase().startsWith("G_")?t=(await y.getProteinGroup(e)).rcsb_group_container_identifiers.group_member_ids:t=await y.getPdbEntriesForUniprot(e),this.allPdbIds=t,this.totalResults=t.length,this.currentOffset=0,this.currentProteinDetails=[];const n=await this.fetchMemberDetails(this.allPdbIds,this.limit,this.currentOffset);this.currentOffset+=n.length,this.currentProteinDetails=n,await this.displayResults(this.currentProteinDetails),this.updateResultsInfo()}catch(t){console.error("Error fetching protein entries:",t),this.noResultsMessage.textContent="Could not fetch data for the given identifier.",this.noResultsMessage.style.display="block";const n=t.status&&t.url?`Failed to fetch protein data (status ${t.status}) from ${t.url}`:"Failed to fetch protein data.";typeof showNotification=="function"&&showNotification(n,"error")}finally{this.loadingIndicator.style.display="none"}}async fetchMemberDetails(e,t=20,n=0){const i=e.slice(n,n+t).map(async o=>{try{return await y.getRcsbEntry(o)}catch{return{rcsb_id:o,error:"Failed to fetch details"}}});return Promise.all(i)}async loadMoreResults(){if(!(this.currentOffset>=this.totalResults)){this.loadingIndicator.style.display="block";try{const e=await this.fetchMemberDetails(this.allPdbIds,this.limit,this.currentOffset);this.currentOffset+=e.length,this.currentProteinDetails=this.currentProteinDetails.concat(e),await this.displayResults(e,!0),this.updateResultsInfo()}catch(e){console.error("Error loading more results:",e),typeof showNotification=="function"&&showNotification("Failed to load more protein entries.","error")}finally{this.loadingIndicator.style.display="none"}}}updateResultsInfo(){if(!(!this.resultsCountMessage||!this.loadMoreBtn)){if(this.totalResults>0){const e=Math.min(this.currentOffset,this.totalResults);this.resultsCountMessage.textContent=`Showing ${e} of ${this.totalResults} results.`,this.resultsCountMessage.style.display="block"}else this.resultsCountMessage.style.display="none";this.currentOffset<this.totalResults?this.loadMoreBtn.style.display="block":this.loadMoreBtn.style.display="none"}}async fetchBoundLigands(e){try{return(await y.getLigandMonomers(e))[e.toLowerCase()]||[]}catch(t){return console.error(`Error fetching bound ligands for ${e}:`,t),[]}}renderBoundLigands(e,t){if(!e||e.length===0)return'<div class="bound-ligands-container"></div>';const n=e.slice(0,5).map(i=>`
            <div class="ligand-img-container">
                <img src="${x}/${i.chem_comp_id}_200.svg" alt="${i.chem_comp_id}" title="${i.chem_comp_id}: ${i.chem_comp_name}" class="bound-ligand-img">
                <div class="ligand-img-overlay">
                    <button class="ligand-action-btn add-ligand" data-ccd-code="${i.chem_comp_id}" data-pdb-id="${t}" data-label-asym-id="${i.chain_id}" data-auth-seq-id="${i.author_residue_number}">+</button>
                </div>
            </div>
        `).join(""),s=e.length>5?`<span class="more-ligands-indicator" title="${e.length-5} more ligands">+${e.length-5}</span>`:"";return`<div class="bound-ligands-container">${n}${s}</div>`}async displayResults(e,t=!1){var n,s,i,o,l;if(t||(this.resultsBody.innerHTML=""),e&&e.length>0){const a=this.hideAidsToggle&&this.hideAidsToggle.checked,d=this.hideIonsToggle&&this.hideIonsToggle.checked;for(const r of e){const c=this.resultsBody.insertRow(),u=r.rcsb_id,p=((n=r.struct)==null?void 0:n.title)||"N/A",g=((o=(i=(s=r.rcsb_entry_info)==null?void 0:s.resolution_combined)==null?void 0:i[0])==null?void 0:o.toFixed(2))||"N/A",f=(l=r.rcsb_accession_info)!=null&&l.initial_release_date?new Date(r.rcsb_accession_info.initial_release_date).toLocaleDateString():"N/A",h=r.rcsb_primary_citation,w=(h==null?void 0:h.title)||"N/A",v=h!=null&&h.pdbx_database_id_doi?`https://doi.org/${h.pdbx_database_id_doi}`:h!=null&&h.pdbx_database_id_PubMed?`https://pubmed.ncbi.nlm.nih.gov/${h.pdbx_database_id_PubMed}/`:null,_=v?`<a href="${v}" target="_blank">${w}</a>`:w,C=`${re}/${u.toLowerCase()}_assembly-1.jpeg`;let M=await this.fetchBoundLigands(u);a&&(M=M.filter(b=>!he.includes(b.chem_comp_id))),d&&(M=M.filter(b=>!me.includes(b.chem_comp_id))),c.innerHTML=`
                    <td data-label="Image"><img src="${C}" alt="${u} thumbnail" class="protein-thumbnail"></td>
                    <td data-label="PDB ID"><a href="#" class="pdb-id-link" data-pdb-id="${u}">${u}</a></td>
                    <td data-label="Title">${p}</td>
                    <td data-label="Resolution">${g}</td>
                    <td data-label="Release Date">${f}</td>
                    <td data-label="Publication">${_}</td>
                    <td data-label="Bound Ligands" class="bound-ligands-cell">${this.renderBoundLigands(M,u)}</td>
                    <td data-label="View Structure" class="view-buttons-cell">
                        <button class="view-structure-btn rcsb-btn" data-pdb-id="${u}">RCSB PDB</button>
                        <button class="view-structure-btn pdbe-btn" data-pdb-id="${u}">PDBe</button>
                    </td>
                `,c.querySelector(".pdb-id-link").addEventListener("click",b=>{b.preventDefault(),this.moleculeManager.showPDBDetailsModal(b.target.dataset.pdbId)}),c.querySelector(".view-structure-btn.rcsb-btn").addEventListener("click",b=>{window.open(`${S}/${b.target.dataset.pdbId}`,"_blank")}),c.querySelector(".view-structure-btn.pdbe-btn").addEventListener("click",b=>{window.open(`${D}/${b.target.dataset.pdbId.toLowerCase()}`,"_blank")}),c.querySelectorAll(".add-ligand").forEach(b=>{b.addEventListener("click",z=>{const{ccdCode:$,pdbId:G,authSeqId:Y,labelAsymId:j}=z.currentTarget.dataset;this.moleculeManager.addPdbInstance({code:$,pdbId:G,authSeqId:Y,labelAsymId:j})?showNotification(`Adding molecule ${$}...`,"success"):showNotification(`Molecule ${$} already exists`,"info")})})}this.resultsContainer.style.display="block",this.noResultsMessage.style.display="none"}else t||(this.noResultsMessage.textContent="No PDB entries found in this group.",this.noResultsMessage.style.display="block",this.resultsContainer.style.display="none")}}class De{constructor(){this.modal=document.getElementById("comparison-modal"),this.viewerContainer=document.getElementById("comparison-viewer"),this.title=document.getElementById("comparison-title");const e=document.getElementById("close-comparison-modal");e&&e.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()})}show(e,t){!e||!t||(this.title&&(this.title.textContent=`${e.code} vs ${t.code}`),this.viewerContainer&&(this.viewerContainer.innerHTML=""),this.modal&&(this.modal.style.display="block"),setTimeout(()=>{var n,s;try{const i=(s=(n=document.body)==null?void 0:n.classList)!=null&&s.contains("dark-mode")?"#e0e0e0":"white",o=$3Dmol.createViewer(this.viewerContainer,{backgroundColor:i});this.viewerContainer.viewer=o;const l=o.addModel(e.sdf,"sdf"),a=o.addModel(t.sdf,"sdf");l.setStyle({},{stick:{colorscheme:"cyanCarbon"}}),a.setStyle({},{stick:{colorscheme:"magentaCarbon"}}),this._alignModels(l,a),o.zoomTo(),o.render()}catch(i){console.error("Error rendering comparison viewer:",i),this.viewerContainer&&(this.viewerContainer.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>')}},100))}_alignModels(e,t){if(!e||!t||!e.selectedAtoms||!t.selectedAtoms)return;const n=e.selectedAtoms({}),s=t.selectedAtoms({});if(!n.length||!s.length)return;const i=c=>{let u=0,p=0,g=0;for(const f of c)u+=f.x,p+=f.y,g+=f.z;return{x:u/c.length,y:p/c.length,z:g/c.length}},o=i(n),l=i(s),a=o.x-l.x,d=o.y-l.y,r=o.z-l.z;for(const c of s)c.x+=a,c.y+=d,c.z+=r}close(){this.modal&&(this.modal.style.display="none")}}class Ae{constructor(e="quick-view-viewer"){this.containerId=e,this.container=null,this.viewer=null,this.models=new Map}init(e=[]){var t,n;if(this.container=document.getElementById(this.containerId),!this.container)return console.warn(`Viewer container #${this.containerId} not found`),this;this.container.innerHTML="";try{const s=(n=(t=document.body)==null?void 0:t.classList)!=null&&n.contains("dark-mode")?"#e0e0e0":"white";this.viewer=$3Dmol.createViewer(this.container,{backgroundColor:s}),this.viewer.render()}catch(s){console.error("Error initializing viewer:",s)}return Array.isArray(e)&&e.length>0&&this.restore(e),this}addMolecule({code:e,sdf:t}){if(!(!this.viewer||!t||!e)&&!this.models.has(e))try{const n=this.viewer.addModel(t,"sdf");this.viewer.setStyle({model:n},{stick:{}}),this.viewer.setStyle({model:n,elem:"H"},{}),this.viewer.zoomTo(),this.viewer.render(),this.models.set(e,{model:n,sdf:t})}catch(n){console.error(`Error adding molecule ${e} to viewer:`,n)}}removeMolecule(e){if(!(!this.viewer||!this.models.has(e)))try{const{model:t}=this.models.get(e);this.viewer.removeModel(t),this.models.delete(e),this.viewer.render()}catch(t){console.error(`Error removing molecule ${e} from viewer:`,t)}}clear(){this.viewer&&(this.viewer.removeAllModels(),this.viewer.render()),this.models.clear()}restore(e=[]){e.forEach(t=>this.addMolecule(t))}getState(){return Array.from(this.models.entries()).map(([e,{sdf:t}])=>({code:e,sdf:t}))}}class $e{constructor(){this.repository=new ge([...ce.map(e=>({code:e,status:"pending"})),...ue.map(e=>({...e,status:"pending"}))]),this.grid=null,this.loadingIndicator=null,this.cardUI=null,this.loader=null,this.ligandModal=null,this.boundLigandTable=null,this.pdbDetailsModal=null,this.addModal=null,this.comparisonModal=null,this.compareQueue=[]}init(){this.grid=document.getElementById("molecule-grid"),this.loadingIndicator=document.querySelector(".loading-indicator"),this.cardUI=new _e(this.grid,this.repository,{onDelete:l=>this.confirmDelete(l),onShowDetails:(l,a,d)=>this.showMoleculeDetails(l,a,d),onCompare:l=>this.queueComparison(l)}),this.loader=new pe(this.repository,this.cardUI),this.ligandModal=new Me(this),this.boundLigandTable=new fe(l=>this.addMolecule(l),l=>this.showMoleculeDetails(l),this.ligandModal),this.pdbDetailsModal=new Le(this.boundLigandTable),this.addModal=new Be(this),this.comparisonModal=new De,document.getElementById("add-molecule-btn").addEventListener("click",()=>{this.addModal&&this.addModal.open()}),document.getElementById("delete-all-btn").addEventListener("click",()=>{confirm("Delete all molecules?")&&this.deleteAllMolecules()});const e=document.getElementById("export-modal"),t=document.getElementById("export-filename"),n=document.getElementById("export-remove-h-toggle"),s=()=>e.style.display="none";document.getElementById("export-btn").addEventListener("click",()=>{e&&(t.value="molecules",n.checked=!1,e.style.display="block")}),document.getElementById("cancel-export-btn").addEventListener("click",s),document.getElementById("close-export-modal").addEventListener("click",s),document.getElementById("confirm-export-btn").addEventListener("click",()=>{const l=this.repository.exportToSdf({removeHydrogens:n.checked});if(!l){E("No SDF data to export","info");return}let a=t.value.trim()||"molecules";a.toLowerCase().endsWith(".sdf")||(a+=".sdf");const d=new Blob([l],{type:"chemical/x-mdl-sdfile"}),r=URL.createObjectURL(d),c=document.createElement("a");c.href=r,c.download=a,document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(r),s()});const i=document.querySelectorAll(".tab-button"),o=[document.getElementById("molecule-library-content"),document.getElementById("fragment-library-content"),document.getElementById("protein-browser-content")];return i.forEach((l,a)=>{l.addEventListener("click",()=>{i.forEach((d,r)=>d.classList.toggle("active",r===a)),o.forEach((d,r)=>{d.style.display=r===a?"block":"none"})})}),this}addMolecule(e){const t=this.repository.addMolecule(e);return t&&this.loader.loadMolecule(e),t}addPdbInstance({code:e,pdbId:t,authSeqId:n,labelAsymId:s}){return this.addMolecule({code:e,pdbId:t,authSeqId:n,labelAsymId:s})}deleteMolecule(e){if(this.repository.removeMolecule(e)){const t=this.grid.querySelector(`[data-molecule-code="${e}"]`);return t&&t.remove(),this.repository.removeViewerMolecule(e),window.viewer&&window.viewer.removeMolecule(e),!0}return!1}deleteAllMolecules(){this.repository.clearAll(),this.repository.clearViewerState(),this.cardUI&&this.cardUI.clearAll(),window.viewer&&window.viewer.clear(),E("All molecules deleted successfully!","info")}getMolecule(e){return this.repository.getMolecule(e)}getAllMolecules(){return this.repository.getAllMolecules()}updateMoleculeStatus(e,t){this.repository.updateMoleculeStatus(e,t)}queueComparison(e){if(!this.compareQueue.includes(e))if(this.compareQueue.push(e),this.compareQueue.length===2){const[t,n]=this.compareQueue,s=this.getMolecule(t),i=this.getMolecule(n);s&&i&&this.comparisonModal&&(s.sdf&&i.sdf?this.comparisonModal.show(s,i):typeof E=="function"&&E("Both molecules must be loaded before comparison","error")),this.compareQueue=[]}else typeof E=="function"&&E("Select another molecule to compare","info")}loadAllMolecules(){this.loadingIndicator&&(this.loadingIndicator.style.display="block"),this.loader.loadAllMolecules().finally(()=>{this.loadingIndicator&&(this.loadingIndicator.style.display="none")})}showMoleculeDetails(e,t,n){this.ligandModal&&this.ligandModal.show(e,t,n)}fetchRCSBDetails(e){return this.pdbDetailsModal?this.pdbDetailsModal.fetchRCSBDetails(e):Promise.resolve(null)}showPDBDetailsModal(e){this.pdbDetailsModal&&this.pdbDetailsModal.showPDBDetailsModal(e)}confirmDelete(e){confirm(`Delete ${e}?`)&&this.deleteMolecule(e)}}const I=new $e().init(),Te=new Ae().init(I.repository.getViewerMolecules());I.loadAllMolecules();const xe=typeof initRDKitModule=="function"?initRDKitModule():Promise.resolve(null),k=new ye(I,{notify:E,rdkit:xe}).init();k.loadFragments();const A=document.getElementById("add-fragment-modal"),F=document.getElementById("add-fragment-btn"),O=document.getElementById("cancel-add-fragment-btn"),V=document.getElementById("close-fragment-modal"),q=document.getElementById("confirm-add-fragment-btn"),Ne=()=>{A&&(A.style.display="block")},P=()=>{A&&(A.style.display="none")};F&&F.addEventListener("click",Ne);O&&O.addEventListener("click",P);V&&V.addEventListener("click",P);q&&q.addEventListener("click",()=>{const m=document.getElementById("fragment-name"),e=document.getElementById("fragment-query"),t=document.getElementById("fragment-source"),n=document.getElementById("fragment-description"),s={name:m?m.value.trim():"",query:e?e.value.trim():"",source:t?t.value.trim():"",description:n?n.value.trim():""};k.addFragment(s)&&(m&&(m.value=""),e&&(e.value=""),t&&(t.value="custom"),n&&(n.value=""),P())});const ke=new Se(I).init();function E(m,e="info"){const t=document.createElement("div");t.className=`notification ${e}`,t.textContent=m,Object.assign(t.style,{position:"fixed",top:"20px",right:"20px",padding:"12px 20px",borderRadius:"6px",color:"white",fontWeight:"500",zIndex:"1001",opacity:"0",transform:"translateY(-20px)",transition:"all 0.3s ease"}),e==="success"?t.style.background="#4CAF50":e==="error"?t.style.background="#f44336":t.style.background="#6e45e2",document.body.appendChild(t),setTimeout(()=>{t.style.opacity="1",t.style.transform="translateY(0)"},10),setTimeout(()=>{t.style.opacity="0",t.style.transform="translateY(-20px)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)},3e3)}window.moleculeManager=I;window.fragmentLibrary=k;window.proteinBrowser=ke;window.viewer=Te;window.showNotification=E;function Pe(){document.body.classList.toggle("dark-mode");const m=document.body.classList.contains("dark-mode"),e=m?"#e0e0e0":"white";document.querySelectorAll(".viewer-container, .molecule-viewer, .details-viewer").forEach(n=>{n.viewer&&typeof n.viewer.setBackgroundColor=="function"?(n.viewer.setBackgroundColor(e),n.viewer.render()):n.style.background=e});const t=document.getElementById("theme-toggle-icon");t&&(t.textContent=m?"light_mode":"dark_mode")}function Re(){const m=document.getElementById("theme-toggle");m&&m.addEventListener("click",Pe)}Re();
