var $=h=>{throw TypeError(h)};var k=(h,e,t)=>e.has(h)||$("Cannot "+t);var T=(h,e,t)=>e.has(h)?$("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(h):e.set(h,t);var S=(h,e,t)=>(k(h,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();const P="https://files.rcsb.org/ligands/view",R="https://models.rcsb.org/v1",H="https://raw.githubusercontent.com/cch1999/cch1999.github.io/refs/heads/new_website/assets/files/fragment_library_ccd.tsv",F="https://www.ebi.ac.uk/pdbe/graph-api/compound/similarity",U="https://www.ebi.ac.uk/pdbe/graph-api/compound/in_pdb",q="https://data.rcsb.org/rest/v1/core/entry",O="https://www.ebi.ac.uk/pdbe/graph-api/pdb/summary",V="https://files.rcsb.org/download",Y="https://www.ebi.ac.uk/pdbe/api/pdb/entry/ligand_monomers",G="https://data.rcsb.org/rest/v1/core/entry_groups",D="https://www.ebi.ac.uk/pdbe/static/files/pdbechem_v2",I="https://www.rcsb.org/structure",M="https://www.ebi.ac.uk/pdbe/entry/pdb",z="https://cdn.rcsb.org/images/structures",j=["HOH","ZN","MG","CA","NA","K","CL"],J=100,W=["HEM","NAD","FAD","COA","ATP","ADP","355","MPV","YQD","J9N","VIA"],Z=["SO4","PO4","CIT","EDO","GOL","1PE","ACE","ACT","BME","DMS","FMT","IMD","MES","PEG","PGE","TRS"],_=new Map;var C,A;class y{static async fetchText(e){return S(this,C,A).call(this,e,t=>t.text())}static async fetchJson(e){return S(this,C,A).call(this,e,t=>t.json())}static getCcdSdf(e){return this.fetchText(`${P}/${e.toUpperCase()}_ideal.sdf`)}static getInstanceSdf(e,t,n){return this.fetchText(`${R}/${e.toUpperCase()}/ligand?auth_seq_id=${t}&label_asym_id=${n}&encoding=sdf`)}static getFragmentLibraryTsv(){return this.fetchText(H)}static getSimilarCcds(e){return this.fetchJson(`${F}/${e}`)}static getPdbEntriesForCcd(e){return this.fetchJson(`${U}/${e}`)}static getRcsbEntry(e){return this.fetchJson(`${q}/${e.toLowerCase()}`)}static getPdbSummary(e){return this.fetchJson(`${O}/${e}`)}static getPdbFile(e){return this.fetchText(`${V}/${e}.pdb`)}static getLigandMonomers(e){return this.fetchJson(`${Y}/${e}`)}static getProteinGroup(e){return this.fetchJson(`${G}/${e}`)}static clearCache(){_.clear()}}C=new WeakSet,A=async function(e,t){if(_.has(e))return _.get(e);const n=await fetch(e);if(!n.ok){const i=new Error(`HTTP error! status: ${n.status}`);throw i.status=n.status,i.url=e,i}const s=await t(n);return _.set(e,s),s},T(y,C);class Q{constructor(e,t){this.repository=e,this.cardUI=t}async loadAllMolecules(){for(const e of this.repository.getAllMolecules())e.status==="pending"&&await this.loadMolecule(e)}async loadMolecule(e){const{code:t,pdbId:n,authSeqId:s,labelAsymId:i}=typeof e=="string"?{code:e}:e;try{this.repository.updateMoleculeStatus(t,"loading");const l=await this.findMoleculeInLocalTsv(t);if(l){this.repository.updateMoleculeStatus(t,"loaded"),this.cardUI.createMoleculeCardFromSmiles(l,t);return}let o;if(n&&s&&i?o=await y.getInstanceSdf(n,s,i):o=await y.getCcdSdf(t),!o||o.trim()===""||o.toLowerCase().includes("<html"))throw new Error("Received empty or invalid SDF data.");this.repository.updateMoleculeStatus(t,"loaded");const a=this.repository.getMolecule(t);a&&(a.sdf=o),this.cardUI.createMoleculeCard(o,t,"sdf")}catch(l){console.error(`Could not fetch or process data for ${t}:`,l),this.repository.updateMoleculeStatus(t,"error"),this.cardUI.createNotFoundCard(t,`Failed to load: ${l.message}`)}}async findMoleculeInLocalTsv(e){try{const n=(await y.getFragmentLibraryTsv()).split(`
`);for(const s of n){const i=s.split("	");if(i.length>8&&i[8]===e)return i[3]}return null}catch(t){return console.error("Error searching fragment library TSV:",t),null}}}class X{constructor(e=[]){this.molecules=e.map(t=>({...t,id:this.generateId(t)}))}generateId(e){if(typeof e=="string")return e;const{code:t,pdbId:n,authSeqId:s,labelAsymId:i}=e;return n&&s&&i?`${n}_${i}_${s}_${t}`:t}addMolecule(e){const t=this.generateId(e);if(this.molecules.find(s=>s.id===t))return!1;const n={code:typeof e=="string"?e:e.code,status:"pending",id:t};return e&&typeof e=="object"&&Object.assign(n,e),this.molecules.push(n),!0}removeMolecule(e){const t=this.molecules.findIndex(n=>n.id===e||n.code===e);return t===-1?!1:(this.molecules.splice(t,1),!0)}deleteAllMolecules(){this.molecules=[]}getMolecule(e){return this.molecules.find(t=>t.id===e||t.code===e)}updateMoleculeStatus(e,t){const n=this.getMolecule(e);n&&(n.status=t)}getAllMolecules(){return[...this.molecules]}clearAll(){this.molecules=[]}removeHydrogensFromSdf(e){const t=e.split(/\r?\n/);if(t.length<4)return e;const n=t[3],s=parseInt(n.slice(0,3)),i=parseInt(n.slice(3,6)),l=t.slice(4,4+s),o=t.slice(4+s,4+s+i),a=t.slice(4+s+i),d=[],r=[];l.forEach((m,g)=>{m.slice(31,34).trim()!=="H"&&(d.push(g+1),r.push(m))});const c=new Map;d.forEach((m,g)=>{c.set(m,g+1)});const u=[];o.forEach(m=>{const g=parseInt(m.slice(0,3)),f=parseInt(m.slice(3,6));if(c.has(g)&&c.has(f)){const b=String(c.get(g)).padStart(3,"0"),w=String(c.get(f)).padStart(3,"0");u.push(b+w+m.slice(6))}});const p=String(r.length).padStart(3,"0")+String(u.length).padStart(3,"0")+n.slice(6);return[...t.slice(0,3),p,...r,...u,...a].join(`
`)}exportToSdf(e={}){const{removeHydrogens:t=!1}=e;return this.molecules.filter(n=>n.sdf).map(n=>{let s=t?this.removeHydrogensFromSdf(n.sdf):n.sdf;return s=s.trimEnd(),s.endsWith("$$$$")||(s+=`
$$$$`),s}).join(`
`)}}class K{constructor(e,t,n){this.addMolecule=e,this.showMoleculeDetails=t,this.ligandModal=n}populateBoundLigands(e){const t=document.getElementById("bound-ligands-section"),n=document.getElementById("bound-ligands-table"),s=document.getElementById("bound-ligands-tbody"),i=document.getElementById("no-bound-ligands-message"),l=document.getElementById("add-all-bound-btn");s.innerHTML="",y.getLigandMonomers(e).then(o=>{const a=o[e.toLowerCase()];if(a&&a.length>0){const d=a.filter(u=>!j.includes(u.chem_comp_id)),r=d.length>0?d:a;t.style.display="block",n.style.display="table",i.style.display="none",r.forEach(u=>{const p=this.createBoundLigandRow(u,e);s.appendChild(p)});const c=r;c.length>0?(l.style.display="inline-block",l.textContent=`Add All (${c.length})`,l.onclick=()=>this.addAllLigands(c,"bound",e)):l.style.display="none"}else t.style.display="block",n.style.display="none",i.style.display="block",l.style.display="none"}).catch(o=>{console.error("Error fetching bound ligands:",o),t.style.display="block",n.style.display="none",i.style.display="block",i.textContent="Could not load bound ligand data.",l.style.display="none";const a=o.status&&o.url?`Failed to load bound ligands (status ${o.status}) from ${o.url}`:"Failed to load bound ligand data.";typeof showNotification=="function"&&showNotification(a,"error")})}createBoundLigandRow(e,t){const n=document.createElement("tr"),s=document.createElement("td");s.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",s.appendChild(i),this.ligandModal&&this.ligandModal.load2DStructure(e.chem_comp_id,i);const l=document.createElement("td"),o=document.createElement("span");o.className="ccd-code",o.textContent=e.chem_comp_id,o.title=`Click to add ${e.chem_comp_id} to database`,o.addEventListener("click",()=>{document.getElementById("close-pdb-details-modal").click(),this.showMoleculeDetails&&this.showMoleculeDetails(e.chem_comp_id)}),l.appendChild(o);const a=document.createElement("td");a.textContent=e.chain_id;const d=document.createElement("td");d.textContent=e.author_residue_number;const r=document.createElement("td");r.textContent=e.entity_id;const c=document.createElement("td");c.className="ligand-name",c.textContent=e.chem_comp_name,c.title=e.chem_comp_name;const u=document.createElement("td"),p=document.createElement("button");return p.className="add-ligand-btn",p.innerHTML="&#43;",p.title=`Add ${e.chem_comp_id} to database`,p.addEventListener("click",()=>{this.addMolecule({code:e.chem_comp_id,pdbId:t,labelAsymId:e.chain_id,authSeqId:e.author_residue_number})?showNotification(`Adding molecule ${e.chem_comp_id}...`,"success"):showNotification(`Molecule ${e.chem_comp_id} already exists`,"info")}),u.appendChild(p),n.appendChild(s),n.appendChild(l),n.appendChild(a),n.appendChild(d),n.appendChild(r),n.appendChild(c),n.appendChild(u),n}addAllLigands(e,t,n){if(!e||e.length===0){showNotification(`No ${t} ligands to add`,"info");return}const s=document.getElementById(`add-all-${t}-btn`);s.disabled=!0,s.textContent="Adding...";let i=0,l=0;e.forEach((o,a)=>{setTimeout(()=>{if(this.addMolecule({code:o.chem_comp_id,pdbId:n,labelAsymId:o.chain_id,authSeqId:o.author_residue_number})?i++:l++,a===e.length-1){let r="";i>0&&l>0?r=`Added ${i} new molecules, ${l} already existed`:i>0?r=`Added ${i} new molecules`:r=`All ${l} molecules already existed`,showNotification(r,i>0?"success":"info"),s.disabled=!1,s.textContent=`Add All (${e.length})`}},a*J)})}}class ee{constructor(e,{notify:t=typeof window<"u"&&window.showNotification||(typeof showNotification=="function"?showNotification:()=>{}),smilesDrawer:n=typeof window<"u"&&window.SmilesDrawer||(typeof SmilesDrawer<"u"?SmilesDrawer:void 0)}={}){this.moleculeManager=e,this.fragments=[],this.grid=null,this.searchInput=null,this.sourceFilter=null,this.ccdToggle=null,this.notify=t,this.smilesDrawer=n}init(){return this.grid=document.getElementById("fragment-grid"),this.searchInput=document.getElementById("fragment-search"),this.sourceFilter=document.getElementById("fragment-filter-source"),this.ccdToggle=document.getElementById("ccd-toggle"),this.addEventListeners(),this}addEventListeners(){this.searchInput&&this.searchInput.addEventListener("input",()=>this.renderFragments()),this.sourceFilter&&this.sourceFilter.addEventListener("change",()=>this.renderFragments()),this.ccdToggle&&this.ccdToggle.addEventListener("change",()=>this.renderFragments())}async loadFragments(){try{const t=(await y.getFragmentLibraryTsv()).split(`
`).slice(1);this.fragments=t.map((n,s)=>{const i=n.split("	");return i.length<10?null:{id:i[0]||s,name:i[1],kind:i[2],query:i[3],description:i[4],comment:i[5],url:i[6],source:i[7],ccd:i[8],in_ccd:i[9].trim()==="True"}}).filter(Boolean),this.renderFragments()}catch(e){console.error("Failed to load fragment library:",e),this.grid&&(this.grid.innerHTML="<p>No fragments match your criteria.</p>")}}renderFragments(){if(!this.grid)return;this.grid.innerHTML="";const e=this.searchInput?this.searchInput.value.toLowerCase():"",t=this.sourceFilter?this.sourceFilter.value:"all",n=this.ccdToggle?this.ccdToggle.checked:!1,s=this.fragments.filter(l=>{const o=l.name.toLowerCase().includes(e),a=t==="all"||l.source===t,d=!n||l.in_ccd;return o&&a&&d});if(s.length===0){this.grid.innerHTML="<p>No fragments match your criteria.</p>";return}const i=document.createDocumentFragment();s.forEach(l=>{const o=this.createFragmentCard(l);i.appendChild(o)}),this.grid.appendChild(i)}createFragmentCard(e){const t=document.createElement("div");t.className="molecule-card fragment-card";const n=document.createElement("h3");n.textContent=e.name,t.appendChild(n);const s=document.createElement("div");s.className="viewer-container",t.appendChild(s);const i=document.createElement("div");i.className="fragment-info";let l="No";if(e.in_ccd&&e.ccd){const a=e.ccd.split(",")[0].trim();l=`Yes (<a href="#" class="ccd-link" data-ccd="${a}">${a}</a>)`}i.innerHTML=`
            <p><strong>Source:</strong> ${e.source}</p>
            <p><strong>In CCD:</strong> ${l}</p>
            <p><strong>Type:</strong> ${e.kind}</p>
        `,t.appendChild(i);const o=i.querySelector(".ccd-link");if(o&&o.addEventListener("click",a=>{a.preventDefault();const d=a.target.dataset.ccd;this.moleculeManager&&this.moleculeManager.showMoleculeDetails&&this.moleculeManager.showMoleculeDetails(d)}),e.in_ccd&&e.ccd){const a=e.ccd.split(",")[0].trim(),d=this.moleculeManager.getMolecule(a),r=document.createElement("button");r.textContent=d?"In library":"Add to library",r.className="add-to-library-btn",d&&(r.disabled=!0,r.classList.add("added")),r.addEventListener("click",c=>{c.stopPropagation(),this.moleculeManager.addMolecule(a)?(this.notify(`Adding molecule ${a} to library...`,"success"),r.textContent="Added to library",r.disabled=!0,r.classList.add("added")):(this.notify(`Molecule ${a} already exists.`,"info"),r.textContent="In library",r.disabled=!0,r.classList.add("added"))}),t.appendChild(r)}return setTimeout(()=>{if((e.kind==="SMILES"||e.kind==="SMARTS")&&e.query){const a=document.createElement("canvas");a.width=200,a.height=150,s.appendChild(a);try{const d=this.sanitizeSMILES(e.query);this.smilesDrawer.parse(d,r=>{const c={width:200,height:150};new this.smilesDrawer.Drawer(c).draw(r,a,"light",!1)},r=>{console.error("Error parsing SMILES for "+e.name,r),s.innerHTML=`<p class="render-error">Render error for query: ${e.query}</p>`})}catch(d){console.error("General error rendering SMILES for "+e.name,d),s.innerHTML=`<p class="render-error">Render error for query: ${e.query}</p>`}}else s.innerHTML=`<p class="render-error">Cannot render type: ${e.kind||"N/A"}</p>`},50),t}addFragment(e){return!e.name||!e.query?(this.notify("Fragment name and SMILES/SMARTS query are required.","error"),!1):(this.fragments.unshift({id:`custom-${Date.now()}`,name:e.name,kind:"SMILES",query:e.query,description:e.description,comment:"Custom fragment",url:"",source:e.source||"custom",ccd:"",in_ccd:!1}),this.renderFragments(),this.notify(`Fragment "${e.name}" added successfully!`,"success"),!0)}sanitizeSMILES(e){return e?e.replace(/[^A-Za-z0-9\(\)\[\]\.\-=#$:@\/\\]/g,""):""}}class te{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("molecule-details-modal"),this.detailsTitle=document.getElementById("details-title"),this.detailsCode=document.getElementById("details-code"),this.detailsSource=document.getElementById("details-source"),this.detailsType=document.getElementById("details-type"),this.detailsStructure=document.getElementById("details-structure"),this.pdbInstanceFields=document.querySelectorAll(".pdb-instance-field"),this.detailsPdbId=document.getElementById("details-pdb-id"),this.detailsChain=document.getElementById("details-chain"),this.detailsResidue=document.getElementById("details-residue"),this.detailsViewer=document.getElementById("details-viewer-container"),this.detailsJSON=document.getElementById("details-json"),this.viewer=null;const t=document.getElementById("close-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",n=>{n.target===this.modal&&this.close()})}show(e,t){this.cleanupViewer(),this.detailsTitle.textContent=`Molecule Details: ${e}`,this.detailsCode.textContent=e;const n=["ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL"].includes(e);this.detailsSource.textContent=n?"building_blocks":"reagents",this.detailsType.textContent=n?"building_block":"reagent";const s=this.moleculeManager.getMolecule?this.moleculeManager.getMolecule(e):null,i=s&&s.pdbId&&s.authSeqId&&s.labelAsymId;this.detailsStructure&&(this.detailsStructure.textContent=i?"PDB instance":"Ideal CCD SDF"),this.pdbInstanceFields&&this.pdbInstanceFields.forEach(o=>{o.style.display=i?"flex":"none"}),i?(this.detailsPdbId&&(this.detailsPdbId.textContent=s.pdbId.toUpperCase()),this.detailsChain&&(this.detailsChain.textContent=s.labelAsymId),this.detailsResidue&&(this.detailsResidue.textContent=s.authSeqId)):(this.detailsPdbId&&(this.detailsPdbId.textContent="-"),this.detailsChain&&(this.detailsChain.textContent="-"),this.detailsResidue&&(this.detailsResidue.textContent="-")),this.detailsViewer.innerHTML="<p>Loading structure...</p>",t?setTimeout(()=>{try{const o=$3Dmol.createViewer(this.detailsViewer,{backgroundColor:"white",width:"100%",height:"100%"});o.addModel(t,"sdf"),o.setStyle({},{stick:{radius:.2},sphere:{scale:.3}}),o.setStyle({elem:"H"},{}),o.zoomTo(),o.render(),this.viewer=o}catch(o){console.error(`Error initializing details viewer for ${e}:`,o),this.detailsViewer.innerHTML='<p style="color: #666;">Structure rendering error</p>'}},100):this.detailsViewer.innerHTML='<p style="color: #666;">Structure data not available</p>';const l={molecule_id:`mol_${e.toLowerCase()}`,ccd_code:e,source:n?"building_blocks":"reagents",type:n?"building_block":"reagent",structure_type:i?"pdb_instance":"ideal_sdf",structure_data:t?t.substring(0,100)+"...":"N/A",properties:{molecular_weight:null,formula:null,status:s?s.status:"unknown"}};i&&(l.pdb_instance={pdb_id:s.pdbId,auth_seq_id:s.authSeqId,label_asym_id:s.labelAsymId}),this.detailsJSON.textContent=JSON.stringify(l,null,2),this.modal.style.display="block"}close(){this.cleanupViewer(),this.modal.style.display="none"}cleanupViewer(){var e,t;if(this.viewer){try{this.viewer.clear(),typeof this.viewer.destroy=="function"?this.viewer.destroy():(e=this.viewer)!=null&&e.gl&&typeof this.viewer.gl.getExtension=="function"&&((t=this.viewer.gl.getExtension("WEBGL_lose_context"))==null||t.loseContext())}catch(n){console.warn("Error destroying viewer:",n)}this.viewer=null}this.detailsViewer&&(this.detailsViewer.innerHTML="")}}class ne{constructor(e){this.moleculeManager=e,this.currentSimilarLigands=[]}async load(e){var l,o,a,d,r,c,u,p,m;const t=document.getElementById("similar-ligands-container"),n=document.getElementById("similar-ligands-table"),s=document.getElementById("similar-ligands-tbody"),i=document.getElementById("add-all-similar-btn");this.currentSimilarLigands=[];try{t.innerHTML="<p>Loading similar ligands...</p>",n.style.display="none",i.style.display="none";const f=(await y.getSimilarCcds(e))[e];if(!f||!((o=(l=f[0])==null?void 0:l.stereoisomers)!=null&&o.length)&&!((d=(a=f[0])==null?void 0:a.same_scaffold)!=null&&d.length)&&!((c=(r=f[0])==null?void 0:r.similar_ligands)!=null&&c.length)){t.innerHTML='<div class="no-similar-ligands">No similar ligands found</div>';return}s.innerHTML="";const b=(w,L)=>{L.forEach(v=>{this.currentSimilarLigands.push(v);const N=this.createSimilarLigandRow(w,v);s.appendChild(N)})};(u=f[0])!=null&&u.stereoisomers&&b("stereoisomer",f[0].stereoisomers),(p=f[0])!=null&&p.same_scaffold&&b("scaffold",f[0].same_scaffold),(m=f[0])!=null&&m.similar_ligands&&b("similar",f[0].similar_ligands),t.style.display="none",n.style.display="table",this.currentSimilarLigands.length>0&&(i.style.display="inline-block",i.textContent=`Add All (${this.currentSimilarLigands.length})`,i.replaceWith(i.cloneNode(!0)),document.getElementById("add-all-similar-btn").addEventListener("click",()=>this.addAllSimilarLigands()))}catch(g){console.error(`Error fetching similar CCDs for ${e}:`,g),t.innerHTML='<div class="no-similar-ligands">Similar ligands feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoSimilarLigands()}}addAllSimilarLigands(){if(!this.currentSimilarLigands||this.currentSimilarLigands.length===0){showNotification("No similar ligands to add","info");return}const e=document.getElementById("add-all-similar-btn");e.disabled=!0,e.textContent="Adding...";let t=0,n=0;this.currentSimilarLigands.forEach((s,i)=>{setTimeout(()=>{if(this.moleculeManager.addMolecule(s.chem_comp_id)?t++:n++,i===this.currentSimilarLigands.length-1){let o="";t>0&&n>0?o=`Added ${t} new molecules, ${n} already existed`:t>0?o=`Added ${t} new molecules`:o=`All ${n} molecules already existed`,showNotification(o,t>0?"success":"info"),e.disabled=!1,e.textContent=`Add All (${this.currentSimilarLigands.length})`}},i*100)})}createSimilarLigandRow(e,t){const n=document.createElement("tr"),s=document.createElement("td");s.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",s.appendChild(i),this.load2DStructure(t.chem_comp_id,i);const l=document.createElement("td"),o=document.createElement("span");o.className=`type-badge type-${e}`;let a="";switch(e){case"stereoisomer":a="Stereoisomer";break;case"scaffold":a="Same Scaffold";break;case"similar":a="Similar";break}o.textContent=a,l.appendChild(o);const d=document.createElement("td"),r=document.createElement("span");r.className="ccd-code",r.textContent=t.chem_comp_id,r.title=`Click to add ${t.chem_comp_id} to database`,r.addEventListener("click",()=>{document.getElementById("close-details-modal").click(),this.moleculeManager.showMoleculeDetails(t.chem_comp_id)}),d.appendChild(r);const c=document.createElement("td");c.className="ligand-name",c.textContent=t.name||"N/A";const u=document.createElement("td");if(u.className="match-info",t.similarity_score){const g=Math.round(t.similarity_score*100);u.textContent=`${g}% similarity`}else t.substructure_match&&t.substructure_match.length>0?u.textContent=t.substructure_match.join(", "):u.textContent="-";const p=document.createElement("td"),m=document.createElement("button");return m.className="add-ligand-btn",m.innerHTML="&#43;",m.title=`Add ${t.chem_comp_id} to database`,m.addEventListener("click",()=>{this.moleculeManager.addMolecule(t.chem_comp_id)?showNotification(`Adding molecule ${t.chem_comp_id}...`,"success"):showNotification(`Molecule ${t.chem_comp_id} already exists`,"info")}),p.appendChild(m),n.appendChild(s),n.appendChild(l),n.appendChild(d),n.appendChild(c),n.appendChild(u),n.appendChild(p),n}async load2DStructure(e,t){try{const n=`${D}/${e.toUpperCase()}_200.svg`,s=document.createElement("img");s.src=n,s.alt=`2D structure of ${e}`,s.onload=()=>{t.innerHTML="",t.appendChild(s)},s.onerror=()=>{const i=`${D}/${e.toLowerCase()}_200.svg`,l=document.createElement("img");l.src=i,l.alt=`2D structure of ${e}`,l.onload=()=>{t.innerHTML="",t.appendChild(l)},l.onerror=()=>{t.className="error",t.textContent="No image"}}}catch(n){console.error(`Error loading 2D structure for ${e}:`,n),t.className="error",t.textContent="Error"}}showDemoSimilarLigands(){const e=document.getElementById("similar-ligands-container"),t=document.getElementById("similar-ligands-table"),n=document.getElementById("similar-ligands-tbody"),s=[{type:"stereoisomer",chem_comp_id:"HEJ",name:"9-{5-O-[(S)-hydroxy{[(R)-hydroxy(phosphonooxy)phosphoryl]oxy}phosphoryl]-beta-D-arabinofuranosyl}-9H-purin-6-amine",substructure_match:[]},{type:"scaffold",chem_comp_id:"E7X",name:"(2~{S})-4-[[(2~{R},3~{S},4~{R},5~{R})-5-(6-aminopurin-9-yl)-3,4-bis(oxidanyl)oxolan-2-yl]methyl-(2-hydroxyethyl)amino]-2-azaniumyl-butanoate",substructure_match:["N7"]},{type:"scaffold",chem_comp_id:"ADP",name:"Adenosine 5-diphosphate",substructure_match:["N1","N3","N7","N9"]}];n.innerHTML="",s.forEach(i=>{const l=this.createSimilarLigandRow(i.type,i);n.appendChild(l)}),e.innerHTML='<div style="background: #e8f5e8; padding: 10px; border-radius: 4px; margin-bottom: 10px; font-size: 13px;"><strong>Demo Data:</strong> Showing sample similar ligands for ATP. In production, this would fetch real data from the PDBe API.</div>',t.style.display="table"}}class se{constructor(e){this.moleculeManager=e}async load(e){const t=document.getElementById("pdb-entries-container"),n=document.getElementById("pdb-entries-table-container"),s=document.getElementById("pdb-entries-tbody");try{t.innerHTML="<p>Loading PDB entries...</p>",s.innerHTML="",n.style.display="none",n.querySelectorAll('p[style*="font-size: 12px"]').forEach(d=>d.remove());const o=(await y.getPdbEntriesForCcd(e))[e];if(!o||o.length===0){t.innerHTML='<div class="no-pdb-entries">No PDB entries found containing this CCD code</div>';return}s.innerHTML="";const a=o.slice(0,10);console.log(`Found ${o.length} PDB entries for ${e}, showing first ${a.length}`);for(const d of a)try{const r=await this.moleculeManager.fetchRCSBDetails(d),c=this.createDetailedPDBEntryRow(d,r);s.appendChild(c)}catch(r){console.warn(`Failed to fetch details for ${d}:`,r);const c=this.createSimplePDBEntryRow(d);s.appendChild(c)}if(t.style.display="none",n.style.display="block",o.length>10){const d=document.createElement("p");d.style.fontSize="12px",d.style.color="#666",d.style.fontStyle="italic",d.style.marginTop="10px",d.textContent=`Showing first 10 of ${o.length} PDB entries containing ${e}`,n.appendChild(d)}}catch(i){console.error(`Error fetching PDB entries for ${e}:`,i),s.innerHTML="",n.style.display="none",t.innerHTML='<div class="no-pdb-entries">PDB entries feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoPDBEntries()}}createDetailedPDBEntryRow(e,t){const n=document.createElement("tr"),s=document.createElement("td"),i=document.createElement("span");i.className="pdb-id",i.textContent=e.toUpperCase(),i.title=`Click to view details for ${e.toUpperCase()}`,i.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),s.appendChild(i);const l=document.createElement("td");l.className="pdb-title",t&&t.struct&&t.struct.title?(l.textContent=t.struct.title,l.title=t.struct.title):l.textContent="N/A";const o=document.createElement("td");o.className="pdb-resolution",t&&t.rcsb_entry_info&&t.rcsb_entry_info.resolution_combined&&t.rcsb_entry_info.resolution_combined.length>0?o.textContent=`${t.rcsb_entry_info.resolution_combined[0].toFixed(2)}`:o.textContent="N/A";const a=document.createElement("td");if(a.className="pdb-date",t&&t.rcsb_accession_info&&t.rcsb_accession_info.initial_release_date){const u=new Date(t.rcsb_accession_info.initial_release_date);a.textContent=u.toLocaleDateString()}else a.textContent="N/A";const d=document.createElement("td");d.className="view-buttons-cell";const r=document.createElement("button");r.textContent="RCSB PDB",r.className="view-structure-btn rcsb-btn",r.title=`View ${e.toUpperCase()} on RCSB PDB`,r.addEventListener("click",()=>{window.open(`${I}/${e.toUpperCase()}`,"_blank")});const c=document.createElement("button");return c.textContent="PDBe",c.className="view-structure-btn pdbe-btn",c.title=`View ${e.toUpperCase()} on PDBe`,c.addEventListener("click",()=>{window.open(`${M}/${e.toLowerCase()}`,"_blank")}),d.appendChild(r),d.appendChild(c),n.appendChild(s),n.appendChild(l),n.appendChild(o),n.appendChild(a),n.appendChild(d),n}createSimplePDBEntryRow(e){const t=document.createElement("tr"),n=document.createElement("td"),s=document.createElement("span");s.className="pdb-id",s.textContent=e.toUpperCase(),s.title=`Click to view details for ${e.toUpperCase()}`,s.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),n.appendChild(s);const i=document.createElement("td");i.textContent="Loading...",i.className="pdb-title";const l=document.createElement("td");l.textContent="N/A",l.className="pdb-resolution";const o=document.createElement("td");o.textContent="N/A",o.className="pdb-date";const a=document.createElement("td");a.className="view-buttons-cell";const d=document.createElement("button");d.textContent="RCSB PDB",d.className="view-structure-btn rcsb-btn",d.title=`View ${e.toUpperCase()} on RCSB PDB`,d.addEventListener("click",()=>{window.open(`${I}/${e.toUpperCase()}`,"_blank")});const r=document.createElement("button");return r.textContent="PDBe",r.className="view-structure-btn pdbe-btn",r.title=`View ${e.toUpperCase()} on PDBe`,r.addEventListener("click",()=>{window.open(`${M}/${e.toLowerCase()}`,"_blank")}),a.appendChild(d),a.appendChild(r),t.appendChild(n),t.appendChild(i),t.appendChild(l),t.appendChild(o),t.appendChild(a),t}showDemoPDBEntries(){const e=document.getElementById("pdb-entries-container"),t=document.getElementById("pdb-entries-table-container"),n=document.getElementById("pdb-entries-tbody");n.innerHTML="",t.querySelectorAll('p[style*="font-size: 12px"]').forEach(l=>l.remove()),[{pdb_id:"1atp",title:"CRYSTAL STRUCTURE OF THE TERNARY COMPLEX OF PHENYLALANYL-TRNA SYNTHETASE WITH TRNA AND A PHENYLALANYL-ADENYLATE ANALOGUE",resolution:2.7,release_date:"1995-01-31"},{pdb_id:"2atp",title:"ADENOSINE-5'-TRIPHOSPHATE",resolution:1.83,release_date:"1996-07-17"},{pdb_id:"3atp",title:"ATP SYNTHASE",resolution:2.4,release_date:"1999-02-24"},{pdb_id:"1a49",title:"CRYSTAL STRUCTURE OF ADENYLYL CYCLASE",resolution:2.8,release_date:"1998-04-15"},{pdb_id:"1a5u",title:"ATP BINDING CASSETTE TRANSPORTER",resolution:3.2,release_date:"1998-08-12"}].forEach(l=>{const o={struct:{title:l.title},rcsb_entry_info:{resolution_combined:[l.resolution]},rcsb_accession_info:{initial_release_date:l.release_date}},a=this.createDetailedPDBEntryRow(l.pdb_id,o);n.appendChild(a)}),e.innerHTML='<div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 4px; font-size: 12px; margin-bottom: 10px;">Demo data shown due to CORS restrictions. In production, this would show all PDB entries containing ATP.</div>',t.style.display="block"}}const ie="https://data.rcsb.org/rest/v1/core/chemcomp";class oe{static async getProperties(e){try{const t=await fetch(`${ie}/${e.toUpperCase()}`);if(!t.ok)throw new Error(`HTTP error ${t.status}`);const n=await t.json(),s=(n==null?void 0:n.chem_comp)||{};return{molecularWeight:s.formula_weight??null,formula:s.formula??null}}catch(t){return console.error(`Failed to fetch properties for ${e}:`,t),null}}}class le{constructor(e){this.details=new te(e),this.similarLigandTable=new ne(e),this.pdbEntryList=new se(e),this.propertiesContainer=document.getElementById("ligand-properties")}show(e,t){this.details.show(e,t),this.similarLigandTable.load(e),this.pdbEntryList.load(e),this.propertiesContainer&&(this.propertiesContainer.textContent="Loading properties...",oe.getProperties(e).then(n=>{if(n){const s=n.molecularWeight??"N/A",i=n.formula??"N/A";this.propertiesContainer.innerHTML=`
                            <div>Molecular Weight: ${s}</div>
                            <div>Formula: ${i}</div>
                        `}else this.propertiesContainer.textContent="Properties unavailable"}).catch(()=>{this.propertiesContainer.textContent="Properties unavailable"}))}close(){this.details.close()}load2DStructure(e,t){return this.similarLigandTable.load2DStructure(e,t)}}class ae{constructor(e,t,n={}){this.grid=e,this.repository=t,this.onDelete=n.onDelete,this.onShowDetails=n.onShowDetails,this.onCompare=n.onCompare,this.draggedElement=null}createMoleculeCardFromSmiles(e,t,n=t){const s=document.createElement("div");s.className="molecule-card",s.draggable=!0,s.setAttribute("data-molecule-code",t),s.setAttribute("data-molecule-id",n);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",s.appendChild(i);const l=document.createElement("div");l.className="delete-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',l.title=`Delete ${t}`,l.addEventListener("click",u=>{u.stopPropagation(),this.onDelete&&this.onDelete(t)}),s.appendChild(l);const o=document.createElement("div");o.className="download-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',o.title=`Download ${t} as SDF`,o.addEventListener("click",u=>{u.stopPropagation(),this.downloadSdf(t)}),s.appendChild(o);const a=document.createElement("div");a.className="compare-btn",a.textContent="⇆",a.title=`Compare ${t}`,a.addEventListener("click",u=>{u.stopPropagation(),this.onCompare&&this.onCompare(t)}),s.appendChild(a);const d=document.createElement("div");d.className="molecule-code",d.textContent=t,s.appendChild(d);const r=document.createElement("div");r.className="molecule-viewer",r.id=`viewer-${t}`,s.appendChild(r);const c=document.createElement("div");c.className="smiles-label",c.textContent=`SMILES: ${e}`,c.style.fontSize="10px",c.style.color="#666",c.style.marginTop="5px",s.appendChild(c),this.grid.appendChild(s),this.renderSmilesIn2D(e,r),this.addDragEvents(s)}renderSmilesIn2D(e,t){t.innerHTML=`
            <div style="display:flex;align-items:center;justify-content:center;height:100%;background:#f8f9fa;border:1px solid #e9ecef;border-radius:4px;">
                <div style="text-align:center;padding:10px;">
                    <div style="font-size:24px;margin-bottom:5px;">🧪</div>
                    <div style="font-size:10px;color:#666;">SMILES</div>
                </div>
            </div>
        `}createMoleculeCard(e,t,n="sdf",s=t){const i=document.createElement("div");i.className="molecule-card",i.draggable=!0,i.setAttribute("data-molecule-code",t),i.setAttribute("data-molecule-id",s);const l=document.createElement("div");l.className="drag-handle",l.innerHTML="⋯",i.appendChild(l);const o=document.createElement("div");o.className="delete-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',o.title=`Delete ${t}`,o.addEventListener("click",u=>{u.stopPropagation(),this.onDelete&&this.onDelete(t)}),i.appendChild(o);const a=document.createElement("div");a.className="download-btn",a.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',a.title=`Download ${t} as SDF`,a.addEventListener("click",u=>{u.stopPropagation(),this.downloadSdf(t,e)}),i.appendChild(a);const d=document.createElement("div");d.className="compare-btn",d.textContent="⇆",d.title=`Compare ${t}`,d.addEventListener("click",u=>{u.stopPropagation(),this.onCompare&&this.onCompare(t)}),i.appendChild(d);const r=document.createElement("h3");r.textContent=t,r.style.cursor="pointer",r.addEventListener("click",()=>{this.onShowDetails&&this.onShowDetails(t,e,n)}),i.appendChild(r);const c=document.createElement("div");c.id=`viewer-${t}`,c.className="viewer-container",i.appendChild(c),this.grid.appendChild(i),this.addDragEvents(i),setTimeout(()=>{try{const u=$3Dmol.createViewer(c,{backgroundColor:"white"});u.addModel(e,n),u.setStyle({},{stick:{}}),u.setStyle({elem:"H"},{}),u.zoomTo(),u.render()}catch(u){console.error(`Error initializing 3Dmol viewer for ${t}:`,u),c.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>'}},100)}createNotFoundCard(e,t="Not found",n=e){const s=document.createElement("div");s.className="molecule-card",s.draggable=!0,s.setAttribute("data-molecule-code",e),s.setAttribute("data-molecule-id",n);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",s.appendChild(i);const l=document.createElement("div");l.className="delete-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',l.title=`Delete ${e}`,l.addEventListener("click",d=>{d.stopPropagation(),this.onDelete&&this.onDelete(e)}),s.appendChild(l);const o=document.createElement("div");o.className="download-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',o.title=`Download ${e} as SDF`,o.addEventListener("click",d=>{d.stopPropagation(),this.downloadSdf(e)}),s.appendChild(o);const a=document.createElement("div");a.className="not-found-content",a.innerHTML=`<h3>${e}</h3><p>${t}</p>`,s.appendChild(a),this.grid.appendChild(s),this.addDragEvents(s)}addDragEvents(e){e.addEventListener("dragstart",t=>this.handleDragStart(t)),e.addEventListener("dragover",t=>this.handleDragOver(t)),e.addEventListener("drop",t=>this.handleDrop(t)),e.addEventListener("dragend",t=>this.handleDragEnd(t))}handleDragStart(e){this.draggedElement=e.currentTarget,e.currentTarget.classList.add("dragging"),e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/html",e.currentTarget.outerHTML)}handleDragOver(e){return e.preventDefault&&e.preventDefault(),e.dataTransfer.dropEffect="move",!1}handleDrop(e){if(e.stopPropagation&&e.stopPropagation(),this.draggedElement!==e.currentTarget){const t=Array.from(this.grid.querySelectorAll(".molecule-card")),n=t.indexOf(this.draggedElement),s=t.indexOf(e.currentTarget);n<s?e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget.nextSibling):e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget);const i=this.repository.molecules,l=this.draggedElement.getAttribute("data-molecule-code"),o=e.currentTarget.getAttribute("data-molecule-code"),a=i.findIndex(r=>r.code===l),d=i.findIndex(r=>r.code===o);if(a>-1&&d>-1){const[r]=i.splice(a,1);i.splice(d,0,r)}}return!1}handleDragEnd(e){e.currentTarget.classList.remove("dragging"),this.draggedElement=null}async downloadSdf(e,t){try{let n=t;if(n||(n=await y.getCcdSdf(e)),!n)throw new Error("No SDF data available");const s=new Blob([n],{type:"chemical/x-mdl-sdfile"}),i=URL.createObjectURL(s),l=document.createElement("a");l.href=i,l.download=`${e}.sdf`,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(i)}catch(n){console.error(`Failed to download SDF for ${e}:`,n)}}clearAll(){this.grid.querySelectorAll(".molecule-card").forEach(t=>t.remove())}}class re{constructor(e){this.boundLigandTable=e,this.modal=document.getElementById("pdb-details-modal");const t=document.getElementById("close-pdb-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",n=>{n.target===this.modal&&this.close()})}async fetchRCSBDetails(e){try{return await y.getRcsbEntry(e)}catch(t){return console.error(`Error fetching RCSB details for PDB ${e}:`,t),null}}async showPDBDetailsModal(e){const t=document.getElementById("pdb-details-title"),n=document.getElementById("pdb-details-body"),s=document.getElementById("pdb-viewer-container");t.textContent=`PDB Entry Details: ${e.toUpperCase()}`,n.innerHTML='<div class="properties-loading">Loading PDB entry details...</div>',s.innerHTML="",s.style.display="none",this.modal.style.display="block";try{const i=await this.fetchRCSBDetails(e);if(!i)throw new Error("No data found for this PDB entry.");n.innerHTML=this.createPDBDetailsHTML(i),this.boundLigandTable&&this.boundLigandTable.populateBoundLigands(e),document.getElementById("open-rcsb-btn").addEventListener("click",()=>{window.open(`${I}/${e.toUpperCase()}`,"_blank")}),document.getElementById("open-pdbe-btn").addEventListener("click",()=>{window.open(`${M}/${e.toLowerCase()}`,"_blank")}),s.style.display="block",s.innerHTML='<p class="properties-loading">Loading 3D structure...</p>';const l=await y.getPdbFile(e);setTimeout(()=>{try{const o=$3Dmol.createViewer(s,{backgroundColor:"white",width:"100%",height:"100%"});o.addModel(l,"pdb"),o.setStyle({},{cartoon:{color:"spectrum"}}),o.zoomTo(),o.render()}catch(o){console.error("Error creating 3Dmol viewer:",o),s.innerHTML='<div class="no-pdb-entries">Could not render 3D structure.</div>'}},100)}catch(i){console.error("Error fetching PDB details:",i),n.innerHTML='<div class="no-pdb-entries">Could not load details for this PDB entry.</div>',s.style.display="none";const l=i.status&&i.url?`Failed to load PDB details (status ${i.status}) from ${i.url}`:"Failed to load PDB entry details.";typeof showNotification=="function"&&showNotification(l,"error")}}close(){this.modal&&(this.modal.style.display="none")}createPDBDetailsHTML(e){var d,r,c,u,p,m,g,f,b,w,L,v;const t=((d=e.struct)==null?void 0:d.title)||"Not available",n=((u=(c=(r=e.citation)==null?void 0:r[0])==null?void 0:c.rcsb_authors)==null?void 0:u.join(", "))||"Not available",s=(p=e.rcsb_accession_info)!=null&&p.initial_release_date?new Date(e.rcsb_accession_info.initial_release_date).toLocaleDateString():"Not available",i=(f=(g=(m=e.rcsb_entry_info)==null?void 0:m.resolution_combined)==null?void 0:g[0])!=null&&f.toFixed(2)?`${e.rcsb_entry_info.resolution_combined[0].toFixed(2)} Å`:"N/A",l=((w=(b=e.exptl)==null?void 0:b[0])==null?void 0:w.method)||"N/A",o=((v=(L=e.entity_src_gen)==null?void 0:L[0])==null?void 0:v.pdbx_host_org_scientific_name)||"Not available";return`
            <div class="details-section" style="padding-bottom: 0;">
                <div class="pdb-details-grid" style="grid-template-columns: repeat(5, 1fr);">
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">PDB ID</div>
                        <div class="pdb-info-value">${e.rcsb_id.toUpperCase()}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Organism</div>
                        <div class="pdb-info-value">${o}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Method</div>
                        <div class="pdb-info-value">${l}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Resolution</div>
                        <div class="pdb-info-value">${i}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Release Date</div>
                        <div class="pdb-info-value">${s}</div>
                    </div>
                </div>
            </div>
            <div class="details-section" style="padding-top: 0;">
                 <div class="pdb-details-grid">
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Title</div>
                        <div class="pdb-info-value" title="${t}">${t}</div>
                    </div>
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Authors</div>
                        <div class="pdb-info-value">${n}</div>
                    </div>
                </div>
                <div class="pdb-external-links">
                    <button id="open-rcsb-btn" class="view-structure-btn rcsb-btn">RCSB PDB</button>
                    <button id="open-pdbe-btn" class="view-structure-btn pdbe-btn">PDBe</button>
                </div>
            </div>
            <div class="details-section">
                <h4>Interactive Molecular Structure</h4>
            </div>
        `}}class de{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("add-molecule-modal"),this.codeInput=document.getElementById("molecule-code"),this.errorText=document.getElementById("ccd-error"),this.confirmBtn=document.getElementById("confirm-add-btn"),this.cancelBtn=document.getElementById("cancel-btn"),this.closeBtn=document.getElementById("close-modal"),this.luckyBtn=document.getElementById("feeling-lucky-btn"),this.pdbIdInput=document.getElementById("pdb-id"),this.authSeqIdInput=document.getElementById("auth-seq-id"),this.labelAsymIdInput=document.getElementById("label-asym-id"),this.instanceError=document.getElementById("instance-error"),this.cancelBtn&&this.cancelBtn.addEventListener("click",()=>this.close()),this.closeBtn&&this.closeBtn.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()}),this.codeInput&&this.codeInput.addEventListener("input",()=>this.handleInput()),this.pdbIdInput&&this.pdbIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.authSeqIdInput&&this.authSeqIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.labelAsymIdInput&&this.labelAsymIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.confirmBtn&&this.confirmBtn.addEventListener("click",()=>this.handleSubmit()),this.luckyBtn&&(this.luckyBtn.disabled=!0)}open(){this.modal&&(this.reset(),this.modal.style.display="block",this.codeInput.focus())}close(){this.modal&&(this.modal.style.display="none")}reset(){this.codeInput&&(this.codeInput.value=""),this.errorText&&(this.errorText.textContent=""),this.instanceError&&(this.instanceError.textContent=""),this.pdbIdInput&&(this.pdbIdInput.value=""),this.authSeqIdInput&&(this.authSeqIdInput.value=""),this.labelAsymIdInput&&(this.labelAsymIdInput.value=""),this.confirmBtn&&(this.confirmBtn.disabled=!0)}handleInput(){let e=this.codeInput.value.toUpperCase();this.codeInput.value=e;const t=/^[A-Z0-9]{3}$/.test(e);this.errorText&&(this.errorText.textContent=t?"":"Code must be 3 alphanumeric characters."),this.confirmBtn&&(this.confirmBtn.disabled=!t)}handleInstanceInput(){this.instanceError&&(this.instanceError.textContent="")}handleSubmit(){const e=this.codeInput.value.toUpperCase(),t=this.pdbIdInput.value.trim().toUpperCase(),n=this.authSeqIdInput.value.trim(),s=this.labelAsymIdInput.value.trim().toUpperCase();if(t||n||s){if(!(t&&n&&s)){this.instanceError&&(this.instanceError.textContent="PDB ID, residue number and chain are required.");return}this.moleculeManager.addPdbInstance({code:e,pdbId:t,authSeqId:n,labelAsymId:s})?window.showNotification(`Adding ligand ${e} from ${t}...`,"success"):window.showNotification(`Ligand ${e} instance already exists`,"info")}else this.moleculeManager.addMolecule(e)?window.showNotification(`Adding molecule ${e}...`,"success"):window.showNotification(`Molecule ${e} already exists`,"info");this.close()}}class ce{constructor(e){this.moleculeManager=e,this.searchBtn=null,this.searchInput=null,this.suggestedDropdown=null,this.resultsContainer=null,this.resultsBody=null,this.loadingIndicator=null,this.noResultsMessage=null,this.hideAidsToggle=null,this.currentProteinDetails=[]}init(){return this.searchBtn=document.getElementById("protein-group-search-btn"),this.searchInput=document.getElementById("protein-group-search"),this.suggestedDropdown=document.getElementById("suggested-groups-dropdown"),this.resultsContainer=document.getElementById("protein-results-table-container"),this.resultsBody=document.getElementById("protein-results-tbody"),this.loadingIndicator=document.getElementById("protein-loading-indicator"),this.noResultsMessage=document.getElementById("no-protein-results-message"),this.hideAidsToggle=document.getElementById("hide-aids-toggle"),this.searchBtn&&this.searchBtn.addEventListener("click",()=>{const e=this.searchInput.value.trim();e?this.fetchProteinGroup(e):showNotification("Please enter a Group ID.","info")}),this.hideAidsToggle&&this.hideAidsToggle.addEventListener("change",()=>{this.currentProteinDetails.length>0&&this.displayResults(this.currentProteinDetails)}),this.suggestedDropdown&&this.suggestedDropdown.addEventListener("change",()=>{const e=this.suggestedDropdown.value;e&&(this.searchInput&&(this.searchInput.value=e),this.fetchProteinGroup(e))}),this}async fetchProteinGroup(e){this.loadingIndicator.style.display="block",this.resultsContainer.style.display="none",this.noResultsMessage.style.display="none";try{const n=(await y.getProteinGroup(e)).rcsb_group_container_identifiers.group_member_ids;this.currentProteinDetails=await this.fetchMemberDetails(n),this.displayResults(this.currentProteinDetails)}catch(t){console.error("Error fetching protein group:",t),this.noResultsMessage.textContent="Could not fetch data for the given Group ID.",this.noResultsMessage.style.display="block";const n=t.status&&t.url?`Failed to fetch protein group (status ${t.status}) from ${t.url}`:"Failed to fetch protein group data.";typeof showNotification=="function"&&showNotification(n,"error")}finally{this.loadingIndicator.style.display="none"}}async fetchMemberDetails(e){const t=[];for(const n of e)try{const s=await y.getRcsbEntry(n);t.push(s)}catch{t.push({rcsb_id:n,error:"Failed to fetch details"})}return t}async fetchBoundLigands(e){try{return(await y.getLigandMonomers(e))[e.toLowerCase()]||[]}catch(t){return console.error(`Error fetching bound ligands for ${e}:`,t),[]}}renderBoundLigands(e,t){if(!e||e.length===0)return'<div class="bound-ligands-container"></div>';const n=e.slice(0,5).map(i=>`
            <div class="ligand-img-container">
                <img src="${D}/${i.chem_comp_id}_200.svg" alt="${i.chem_comp_id}" title="${i.chem_comp_id}: ${i.chem_comp_name}" class="bound-ligand-img">
                <div class="ligand-img-overlay">
                    <button class="ligand-action-btn add-ligand" data-ccd-code="${i.chem_comp_id}" data-pdb-id="${t}" data-label-asym-id="${i.chain_id}" data-auth-seq-id="${i.author_residue_number}">+</button>
                </div>
            </div>
        `).join(""),s=e.length>5?`<span class="more-ligands-indicator" title="${e.length-5} more ligands">+${e.length-5}</span>`:"";return`<div class="bound-ligands-container">${n}${s}</div>`}async displayResults(e){var t,n,s,i,l;if(this.resultsBody.innerHTML="",e&&e.length>0){const o=this.hideAidsToggle&&this.hideAidsToggle.checked;for(const a of e){const d=this.resultsBody.insertRow(),r=a.rcsb_id,c=((t=a.struct)==null?void 0:t.title)||"N/A",u=((i=(s=(n=a.rcsb_entry_info)==null?void 0:n.resolution_combined)==null?void 0:s[0])==null?void 0:i.toFixed(2))||"N/A",p=(l=a.rcsb_accession_info)!=null&&l.initial_release_date?new Date(a.rcsb_accession_info.initial_release_date).toLocaleDateString():"N/A",m=`${z}/${r.toLowerCase()}_assembly-1.jpeg`;let g=await this.fetchBoundLigands(r);o&&(g=g.filter(f=>!Z.includes(f.chem_comp_id))),d.innerHTML=`
                    <td><img src="${m}" alt="${r} thumbnail" class="protein-thumbnail"></td>
                    <td><a href="#" class="pdb-id-link" data-pdb-id="${r}">${r}</a></td>
                    <td>${c}</td>
                    <td>${u}</td>
                    <td>${p}</td>
                    <td class="bound-ligands-cell">${this.renderBoundLigands(g,r)}</td>
                    <td class="view-buttons-cell">
                        <button class="view-structure-btn rcsb-btn" data-pdb-id="${r}">RCSB PDB</button>
                        <button class="view-structure-btn pdbe-btn" data-pdb-id="${r}">PDBe</button>
                    </td>
                `}this.resultsContainer.style.display="block",this.noResultsMessage.style.display="none",document.querySelectorAll(".pdb-id-link").forEach(a=>{a.addEventListener("click",d=>{d.preventDefault(),this.moleculeManager.showPDBDetailsModal(d.target.dataset.pdbId)})}),document.querySelectorAll(".view-structure-btn.rcsb-btn").forEach(a=>{a.addEventListener("click",d=>{window.open(`${I}/${d.target.dataset.pdbId}`,"_blank")})}),document.querySelectorAll(".view-structure-btn.pdbe-btn").forEach(a=>{a.addEventListener("click",d=>{window.open(`${M}/${d.target.dataset.pdbId.toLowerCase()}`,"_blank")})}),document.querySelectorAll(".add-ligand").forEach(a=>{a.addEventListener("click",d=>{const{ccdCode:r,pdbId:c,authSeqId:u,labelAsymId:p}=d.currentTarget.dataset;this.moleculeManager.addPdbInstance({code:r,pdbId:c,authSeqId:u,labelAsymId:p})?showNotification(`Adding molecule ${r}...`,"success"):showNotification(`Molecule ${r} already exists`,"info")})})}else this.noResultsMessage.textContent="No PDB entries found in this group.",this.noResultsMessage.style.display="block",this.resultsContainer.style.display="none"}}class ue{constructor(){this.modal=document.getElementById("comparison-modal"),this.viewerContainer=document.getElementById("comparison-viewer"),this.title=document.getElementById("comparison-title");const e=document.getElementById("close-comparison-modal");e&&e.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()})}show(e,t){!e||!t||(this.title&&(this.title.textContent=`${e.code} vs ${t.code}`),this.viewerContainer&&(this.viewerContainer.innerHTML=""),this.modal&&(this.modal.style.display="block"),setTimeout(()=>{try{const n=$3Dmol.createViewer(this.viewerContainer,{backgroundColor:"white"}),s=n.addModel(e.sdf,"sdf"),i=n.addModel(t.sdf,"sdf");s.setStyle({},{stick:{colorscheme:"cyanCarbon"}}),i.setStyle({},{stick:{colorscheme:"magentaCarbon"}}),i.align(s),n.zoomTo(),n.render()}catch(n){console.error("Error rendering comparison viewer:",n),this.viewerContainer&&(this.viewerContainer.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>')}},100))}close(){this.modal&&(this.modal.style.display="none")}}class he{constructor(){this.repository=new X(W.map(e=>({code:e,status:"pending"}))),this.grid=null,this.loadingIndicator=null,this.cardUI=null,this.loader=null,this.ligandModal=null,this.boundLigandTable=null,this.pdbDetailsModal=null,this.addModal=null,this.comparisonModal=null,this.compareQueue=[]}init(){this.grid=document.getElementById("molecule-grid"),this.loadingIndicator=document.querySelector(".loading-indicator"),this.cardUI=new ae(this.grid,this.repository,{onDelete:o=>this.confirmDelete(o),onShowDetails:(o,a,d)=>this.showMoleculeDetails(o,a,d),onCompare:o=>this.queueComparison(o)}),this.loader=new Q(this.repository,this.cardUI),this.ligandModal=new le(this),this.boundLigandTable=new K(o=>this.addMolecule(o),o=>this.showMoleculeDetails(o),this.ligandModal),this.pdbDetailsModal=new re(this.boundLigandTable),this.addModal=new de(this),this.comparisonModal=new ue,document.getElementById("add-molecule-btn").addEventListener("click",()=>{this.addModal&&this.addModal.open()}),document.getElementById("delete-all-btn").addEventListener("click",()=>{confirm("Delete all molecules?")&&this.deleteAllMolecules()});const e=document.getElementById("export-modal"),t=document.getElementById("export-filename"),n=document.getElementById("export-remove-h-toggle"),s=()=>e.style.display="none";document.getElementById("export-btn").addEventListener("click",()=>{e&&(t.value="molecules",n.checked=!1,e.style.display="block")}),document.getElementById("cancel-export-btn").addEventListener("click",s),document.getElementById("close-export-modal").addEventListener("click",s),document.getElementById("confirm-export-btn").addEventListener("click",()=>{const o=this.repository.exportToSdf({removeHydrogens:n.checked});if(!o){E("No SDF data to export","info");return}let a=t.value.trim()||"molecules";a.toLowerCase().endsWith(".sdf")||(a+=".sdf");const d=new Blob([o],{type:"chemical/x-mdl-sdfile"}),r=URL.createObjectURL(d),c=document.createElement("a");c.href=r,c.download=a,document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(r),s()});const i=document.querySelectorAll(".tab-button"),l=[document.getElementById("molecule-library-content"),document.getElementById("fragment-library-content"),document.getElementById("protein-browser-content")];return i.forEach((o,a)=>{o.addEventListener("click",()=>{i.forEach((d,r)=>d.classList.toggle("active",r===a)),l.forEach((d,r)=>{d.style.display=r===a?"block":"none"})})}),this}addMolecule(e){const t=this.repository.addMolecule(e);return t&&this.loader.loadMolecule(e),t}addPdbInstance({code:e,pdbId:t,authSeqId:n,labelAsymId:s}){return this.addMolecule({code:e,pdbId:t,authSeqId:n,labelAsymId:s})}deleteMolecule(e){if(this.repository.removeMolecule(e)){const t=this.grid.querySelector(`[data-molecule-code="${e}"]`);return t&&t.remove(),!0}return!1}deleteAllMolecules(){this.repository.clearAll(),this.cardUI&&this.cardUI.clearAll(),E("All molecules deleted successfully!","info")}getMolecule(e){return this.repository.getMolecule(e)}getAllMolecules(){return this.repository.getAllMolecules()}updateMoleculeStatus(e,t){this.repository.updateMoleculeStatus(e,t)}queueComparison(e){if(!this.compareQueue.includes(e))if(this.compareQueue.push(e),this.compareQueue.length===2){const[t,n]=this.compareQueue,s=this.getMolecule(t),i=this.getMolecule(n);s&&i&&this.comparisonModal&&(s.sdf&&i.sdf?this.comparisonModal.show(s,i):typeof E=="function"&&E("Both molecules must be loaded before comparison","error")),this.compareQueue=[]}else typeof E=="function"&&E("Select another molecule to compare","info")}loadAllMolecules(){this.loadingIndicator&&(this.loadingIndicator.style.display="block"),this.loader.loadAllMolecules().finally(()=>{this.loadingIndicator&&(this.loadingIndicator.style.display="none")})}showMoleculeDetails(e,t,n){this.ligandModal&&this.ligandModal.show(e,t,n)}fetchRCSBDetails(e){return this.pdbDetailsModal?this.pdbDetailsModal.fetchRCSBDetails(e):Promise.resolve(null)}showPDBDetailsModal(e){this.pdbDetailsModal&&this.pdbDetailsModal.showPDBDetailsModal(e)}confirmDelete(e){confirm(`Delete ${e}?`)&&this.deleteMolecule(e)}}const B=new he().init();B.loadAllMolecules();const x=new ee(B,{notify:E,smilesDrawer:window.SmilesDrawer}).init();x.loadFragments();const me=new ce(B).init();function E(h,e="info"){const t=document.createElement("div");t.className=`notification ${e}`,t.textContent=h,Object.assign(t.style,{position:"fixed",top:"20px",right:"20px",padding:"12px 20px",borderRadius:"6px",color:"white",fontWeight:"500",zIndex:"1001",opacity:"0",transform:"translateY(-20px)",transition:"all 0.3s ease"}),e==="success"?t.style.background="#4CAF50":e==="error"?t.style.background="#f44336":t.style.background="#6e45e2",document.body.appendChild(t),setTimeout(()=>{t.style.opacity="1",t.style.transform="translateY(0)"},10),setTimeout(()=>{t.style.opacity="0",t.style.transform="translateY(-20px)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)},3e3)}window.moleculeManager=B;window.fragmentLibrary=x;window.proteinBrowser=me;window.showNotification=E;
