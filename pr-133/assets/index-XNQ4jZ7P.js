var R=h=>{throw TypeError(h)};var J=(h,e,t)=>e.has(h)||R("Cannot "+t);var H=(h,e,t)=>e.has(h)?R("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(h):e.set(h,t);var $=(h,e,t)=>(J(h,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const W="https://files.rcsb.org/ligands/view",Z="https://models.rcsb.org/v1",Q="https://raw.githubusercontent.com/cch1999/cch1999.github.io/refs/heads/new_website/assets/files/fragment_library_ccd.tsv",K="https://www.ebi.ac.uk/pdbe/graph-api/compound/similarity",X="https://www.ebi.ac.uk/pdbe/graph-api/compound/in_pdb",ee="https://data.rcsb.org/rest/v1/core/entry",te="https://www.ebi.ac.uk/pdbe/graph-api/pdb/summary",ne="https://files.rcsb.org/download",se="https://www.ebi.ac.uk/pdbe/api/pdb/entry/ligand_monomers",ie="https://data.rcsb.org/rest/v1/core/entry_groups",oe="https://rest.uniprot.org/uniprotkb",U="https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound",le="https://pubchem.ncbi.nlm.nih.gov/compound",T="https://www.ebi.ac.uk/pdbe/static/files/pdbechem_v2",M="https://www.rcsb.org/structure",B="https://www.ebi.ac.uk/pdbe/entry/pdb",re="https://cdn.rcsb.org/images/structures",ae=["HOH","ZN","MG","CA","NA","K","CL"],de=100,ce=["HEM","NAD","FAD","COA","ATP","ADP","355","MPV","YQD","J9N","VIA"],ue=[{code:"UHV",source:"reagents",type:"reagent",pdbId:"5RH5",labelAsymId:"A",authSeqId:"1001"}],he=["SO4","PO4","CIT","EDO","GOL","1PE","ACE","ACT","BME","DMS","FMT","IMD","MES","PEG","PGE","TRS"],I=new Map;var _,x;class y{static async fetchText(e){return $(this,_,x).call(this,e,t=>t.text())}static async fetchJson(e){return $(this,_,x).call(this,e,t=>t.json())}static getCcdSdf(e){return this.fetchText(`${W}/${e.toUpperCase()}_ideal.sdf`)}static getInstanceSdf(e,t,s,n){const i=e.toLowerCase(),o=new URLSearchParams({auth_seq_id:t,label_asym_id:s,encoding:"sdf"});if(n){const r=`${i}_${s}_${n}`.toLowerCase();o.append("filename",`${r}.sdf`)}const l=`${Z}/${i}/ligand?${o.toString()}`;return this.fetchText(l)}static getFragmentLibraryTsv(){return this.fetchText(Q)}static getSimilarCcds(e){return this.fetchJson(`${K}/${e}`)}static getPdbEntriesForCcd(e){return this.fetchJson(`${X}/${e}`)}static getRcsbEntry(e){return this.fetchJson(`${ee}/${e.toLowerCase()}`)}static getPdbSummary(e){return this.fetchJson(`${te}/${e}`)}static getPdbFile(e){return this.fetchText(`${ne}/${e}.pdb`)}static getLigandMonomers(e){return this.fetchJson(`${se}/${e}`)}static async getPubChemSynonyms(e){var n,i,o;const t=`${U}/name/${encodeURIComponent(e)}/synonyms/JSON`,s=await this.fetchJson(t);return((o=(i=(n=s==null?void 0:s.InformationList)==null?void 0:n.Information)==null?void 0:i[0])==null?void 0:o.Synonym)??[]}static async getPubChemProperties(e){var n,i;const t=`${U}/name/${encodeURIComponent(e)}/property/MolecularFormula,MolecularWeight,IUPACName,CanonicalSMILES/JSON`,s=await this.fetchJson(t);return((i=(n=s==null?void 0:s.PropertyTable)==null?void 0:n.Properties)==null?void 0:i[0])??null}static async getPubChemMetadata(e){const[t,s]=await Promise.all([this.getPubChemSynonyms(e).catch(()=>[]),this.getPubChemProperties(e).catch(()=>null)]),n=s==null?void 0:s.CID;return{synonyms:t,properties:s,link:n?`${le}/${n}`:null}}static async getPdbEntriesForUniprot(e){const t=e.toUpperCase(),s=`${oe}/${t}.json`,n=await this.fetchJson(s);return((n==null?void 0:n.uniProtKBCrossReferences)??[]).filter(o=>o.database==="PDB").map(o=>o.id)}static getProteinGroup(e){return this.fetchJson(`${ie}/${e}`)}static clearCache(){I.clear()}}_=new WeakSet,x=async function(e,t){if(I.has(e))return I.get(e);const s=await fetch(e);if(!s.ok){const i=new Error(`HTTP error! status: ${s.status}`);throw i.status=s.status,i.url=e,i}const n=await t(s);return I.set(e,n),n},H(y,_);class me{constructor(e,t){this.repository=e,this.cardUI=t}async loadAllMolecules(){for(const e of this.repository.getAllMolecules())e.status==="pending"&&await this.loadMolecule(e)}async loadMolecule(e){const{code:t,pdbId:s,authSeqId:n,labelAsymId:i,id:o}=typeof e=="string"?{code:e}:e,l=o||t;try{this.repository.updateMoleculeStatus(l,"loading");let r;if(s&&n&&i)r=await y.getInstanceSdf(s,n,i,t);else{const c=await this.findMoleculeInLocalTsv(t);if(c){this.repository.updateMoleculeStatus(l,"loaded"),this.cardUI.createMoleculeCardFromSmiles(c,t,l);return}r=await y.getCcdSdf(t)}if(!r||r.trim()===""||r.toLowerCase().includes("<html"))throw new Error("Received empty or invalid SDF data.");this.repository.updateMoleculeStatus(l,"loaded");const d=this.repository.getMolecule(l);d&&(d.sdf=r);const a=s&&n&&i?{pdbId:s,authSeqId:n,labelAsymId:i}:null;this.cardUI.createMoleculeCard(r,t,"sdf",l,a)}catch(r){console.error(`Could not fetch or process data for ${t}:`,r),this.repository.updateMoleculeStatus(l,"error"),this.cardUI.createNotFoundCard(t,`Failed to load: ${r.message}`,l)}}async findMoleculeInLocalTsv(e){try{const s=(await y.getFragmentLibraryTsv()).split(`
`);for(const n of s){const i=n.split("	");if(i.length>8&&i[8]===e)return i[3]}return null}catch(t){return console.error("Error searching fragment library TSV:",t),null}}}class pe{constructor(e=[]){this.molecules=e.map(t=>({...t,id:this.generateId(t)}))}generateId(e){if(typeof e=="string")return e;const{code:t,pdbId:s,authSeqId:n,labelAsymId:i}=e;return s&&n&&i?`${s}_${i}_${n}_${t}`:t}addMolecule(e){const t=this.generateId(e);if(this.molecules.find(n=>n.id===t))return!1;const s={code:typeof e=="string"?e:e.code,status:"pending",id:t};return e&&typeof e=="object"&&Object.assign(s,e),this.molecules.push(s),!0}removeMolecule(e){const t=this.molecules.findIndex(s=>s.id===e||s.code===e);return t===-1?!1:(this.molecules.splice(t,1),!0)}deleteAllMolecules(){this.molecules=[]}getMolecule(e){return this.molecules.find(t=>t.id===e||t.code===e)}updateMoleculeStatus(e,t){const s=this.getMolecule(e);s&&(s.status=t)}getAllMolecules(){return[...this.molecules]}clearAll(){this.molecules=[]}removeHydrogensFromSdf(e){const t=e.split(/\r?\n/);if(t.length<4)return e;const s=t[3],n=parseInt(s.slice(0,3)),i=parseInt(s.slice(3,6)),o=t.slice(4,4+n),l=t.slice(4+n,4+n+i),r=t.slice(4+n+i),d=[],a=[];o.forEach((g,p)=>{g.slice(31,34).trim()!=="H"&&(d.push(p+1),a.push(g))});const c=new Map;d.forEach((g,p)=>{c.set(g,p+1)});const u=[];l.forEach(g=>{const p=parseInt(g.slice(0,3)),f=parseInt(g.slice(3,6));if(c.has(p)&&c.has(f)){const b=String(c.get(p)).padStart(3,"0"),w=String(c.get(f)).padStart(3,"0");u.push(b+w+g.slice(6))}});const m=String(a.length).padStart(3,"0")+String(u.length).padStart(3,"0")+s.slice(6);return[...t.slice(0,3),m,...a,...u,...r].join(`
`)}exportToSdf(e={}){const{removeHydrogens:t=!1}=e;return this.molecules.filter(s=>s.sdf).map(s=>{let n=t?this.removeHydrogensFromSdf(s.sdf):s.sdf;return n=n.trimEnd(),n.endsWith("$$$$")||(n+=`
$$$$`),n}).join(`
`)}}class ge{constructor(e,t,s){this.addMolecule=e,this.showMoleculeDetails=t,this.ligandModal=s}populateBoundLigands(e){const t=document.getElementById("bound-ligands-section"),s=document.getElementById("bound-ligands-table"),n=document.getElementById("bound-ligands-tbody"),i=document.getElementById("no-bound-ligands-message"),o=document.getElementById("add-all-bound-btn");n.innerHTML="",y.getLigandMonomers(e).then(l=>{const r=l[e.toLowerCase()];if(r&&r.length>0){const d=r.filter(u=>!ae.includes(u.chem_comp_id)),a=d.length>0?d:r;t.style.display="block",s.style.display="table",i.style.display="none",a.forEach(u=>{const m=this.createBoundLigandRow(u,e);n.appendChild(m)});const c=a;c.length>0?(o.style.display="inline-block",o.textContent=`Add All (${c.length})`,o.onclick=()=>this.addAllLigands(c,"bound",e)):o.style.display="none"}else t.style.display="block",s.style.display="none",i.style.display="block",o.style.display="none"}).catch(l=>{console.error("Error fetching bound ligands:",l),t.style.display="block",s.style.display="none",i.style.display="block",i.textContent="Could not load bound ligand data.",o.style.display="none";const r=l.status&&l.url?`Failed to load bound ligands (status ${l.status}) from ${l.url}`:"Failed to load bound ligand data.";typeof showNotification=="function"&&showNotification(r,"error")})}createBoundLigandRow(e,t){const s=document.createElement("tr"),n=document.createElement("td");n.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",n.appendChild(i),this.ligandModal&&this.ligandModal.load2DStructure(e.chem_comp_id,i);const o=document.createElement("td"),l=document.createElement("span");l.className="ccd-code",l.textContent=e.chem_comp_id,l.title=`Click to add ${e.chem_comp_id} to database`,l.addEventListener("click",()=>{document.getElementById("close-pdb-details-modal").click(),this.showMoleculeDetails&&this.showMoleculeDetails(e.chem_comp_id)}),o.appendChild(l);const r=document.createElement("td");r.textContent=e.chain_id;const d=document.createElement("td");d.textContent=e.author_residue_number;const a=document.createElement("td");a.textContent=e.entity_id;const c=document.createElement("td");c.className="ligand-name",c.textContent=e.chem_comp_name,c.title=e.chem_comp_name;const u=document.createElement("td"),m=document.createElement("button");return m.className="add-ligand-btn",m.innerHTML="&#43;",m.title=`Add ${e.chem_comp_id} to database`,m.addEventListener("click",()=>{this.addMolecule({code:e.chem_comp_id,pdbId:t,labelAsymId:e.chain_id,authSeqId:e.author_residue_number})?showNotification(`Adding molecule ${e.chem_comp_id}...`,"success"):showNotification(`Molecule ${e.chem_comp_id} already exists`,"info")}),u.appendChild(m),s.appendChild(n),s.appendChild(o),s.appendChild(r),s.appendChild(d),s.appendChild(a),s.appendChild(c),s.appendChild(u),s}addAllLigands(e,t,s){if(!e||e.length===0){showNotification(`No ${t} ligands to add`,"info");return}const n=document.getElementById(`add-all-${t}-btn`);n.disabled=!0,n.textContent="Adding...";let i=0,o=0;e.forEach((l,r)=>{setTimeout(()=>{if(this.addMolecule({code:l.chem_comp_id,pdbId:s,labelAsymId:l.chain_id,authSeqId:l.author_residue_number})?i++:o++,r===e.length-1){let a="";i>0&&o>0?a=`Added ${i} new molecules, ${o} already existed`:i>0?a=`Added ${i} new molecules`:a=`All ${o} molecules already existed`,showNotification(a,i>0?"success":"info"),n.disabled=!1,n.textContent=`Add All (${e.length})`}},r*de)})}}class fe{constructor(e,{notify:t=typeof window<"u"&&window.showNotification||(typeof showNotification=="function"?showNotification:()=>{}),rdkit:s=Promise.resolve(null)}={}){this.moleculeManager=e,this.fragments=[],this.grid=null,this.searchInput=null,this.sourceFilter=null,this.ccdToggle=null,this.notify=t,this.rdkitPromise=s}init(){return this.grid=document.getElementById("fragment-grid"),this.searchInput=document.getElementById("fragment-search"),this.sourceFilter=document.getElementById("fragment-filter-source"),this.ccdToggle=document.getElementById("ccd-toggle"),this.addEventListeners(),this}addEventListeners(){this.searchInput&&this.searchInput.addEventListener("input",()=>this.renderFragments()),this.sourceFilter&&this.sourceFilter.addEventListener("change",()=>this.renderFragments()),this.ccdToggle&&this.ccdToggle.addEventListener("change",()=>this.renderFragments())}async loadFragments(){try{const t=(await y.getFragmentLibraryTsv()).split(`
`).slice(1);this.fragments=t.map((s,n)=>{const i=s.split("	");return i.length<10?null:{id:i[0]||n,name:i[1],kind:i[2],query:i[3],description:i[4],comment:i[5],url:i[6],source:i[7],ccd:i[8],in_ccd:i[9].trim()==="True"}}).filter(Boolean),this.renderFragments()}catch(e){console.error("Failed to load fragment library:",e),this.grid&&(this.grid.innerHTML="<p>No fragments match your criteria.</p>")}}renderFragments(){if(!this.grid)return;this.grid.innerHTML="";const e=this.searchInput?this.searchInput.value.toLowerCase():"",t=this.sourceFilter?this.sourceFilter.value:"all",s=this.ccdToggle?this.ccdToggle.checked:!1,n=this.fragments.filter(o=>{const l=o.name.toLowerCase().includes(e),r=t==="all"||o.source===t,d=!s||o.in_ccd;return l&&r&&d});if(n.length===0){this.grid.innerHTML="<p>No fragments match your criteria.</p>";return}const i=document.createDocumentFragment();n.forEach(o=>{const l=this.createFragmentCard(o);i.appendChild(l)}),this.grid.appendChild(i)}createFragmentCard(e){const t=document.createElement("div");t.className="molecule-card fragment-card";const s=document.createElement("h3");s.textContent=e.name,t.appendChild(s);const n=document.createElement("div");n.className="viewer-container",t.appendChild(n);const i=document.createElement("div");i.className="fragment-info";let o="No";if(e.in_ccd&&e.ccd){const r=e.ccd.split(",")[0].trim();o=`Yes (<a href="#" class="ccd-link" data-ccd="${r}">${r}</a>)`}i.innerHTML=`
            <p><strong>Source:</strong> ${e.source}</p>
            <p><strong>In CCD:</strong> ${o}</p>
            <p><strong>Type:</strong> ${e.kind}</p>
        `,t.appendChild(i);const l=i.querySelector(".ccd-link");if(l&&l.addEventListener("click",r=>{r.preventDefault();const d=r.target.dataset.ccd;this.moleculeManager&&this.moleculeManager.showMoleculeDetails&&this.moleculeManager.showMoleculeDetails(d)}),e.in_ccd&&e.ccd){const r=e.ccd.split(",")[0].trim(),d=this.moleculeManager.getMolecule(r),a=document.createElement("button");a.textContent=d?"In library":"Add to library",a.className="add-to-library-btn",d&&(a.disabled=!0,a.classList.add("added")),a.addEventListener("click",c=>{c.stopPropagation(),this.moleculeManager.addMolecule(r)?(this.notify(`Adding molecule ${r} to library...`,"success"),a.textContent="Added to library",a.disabled=!0,a.classList.add("added")):(this.notify(`Molecule ${r} already exists.`,"info"),a.textContent="In library",a.disabled=!0,a.classList.add("added"))}),t.appendChild(a)}return setTimeout(()=>{(e.kind==="SMILES"||e.kind==="SMARTS")&&e.query?this.rdkitPromise.then(r=>{if(!r){n.innerHTML='<p class="render-error">RDKit not available</p>';return}try{const d=this.sanitizeSMILES(e.query),a=r.get_mol(d),c=a.get_svg(200,150);a.delete(),n.innerHTML=c}catch(d){console.error("Error rendering SMILES for "+e.name,d),n.innerHTML=`<p class="render-error">Render error for query: ${e.query}</p>`}}):n.innerHTML=`<p class="render-error">Cannot render type: ${e.kind||"N/A"}</p>`},50),t}addFragment(e){return!e.name||!e.query?(this.notify("Fragment name and SMILES/SMARTS query are required.","error"),!1):this.fragments.some(s=>s.name.toLowerCase()===e.name.toLowerCase())?(this.notify(`Fragment "${e.name}" already exists.`,"error"),!1):(this.fragments.unshift({id:`custom-${Date.now()}`,name:e.name,kind:"SMILES",query:e.query,description:e.description,comment:"Custom fragment",url:"",source:e.source||"custom",ccd:"",in_ccd:!1}),this.renderFragments(),this.notify(`Fragment "${e.name}" added successfully!`,"success"),!0)}sanitizeSMILES(e){return e?e.replace(/[^A-Za-z0-9\(\)\[\]\.\-=#$:@\/\\]/g,""):""}}class ye{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("molecule-details-modal"),this.detailsTitle=document.getElementById("details-title"),this.detailsCode=document.getElementById("details-code"),this.detailsSource=document.getElementById("details-source"),this.detailsType=document.getElementById("details-type"),this.detailsStructure=document.getElementById("details-structure"),this.pdbInstanceFields=document.querySelectorAll(".pdb-instance-field"),this.detailsPdbId=document.getElementById("details-pdb-id"),this.detailsChain=document.getElementById("details-chain"),this.detailsResidue=document.getElementById("details-residue"),this.detailsViewer=document.getElementById("details-viewer-container"),this.detailsJSON=document.getElementById("details-json"),this.viewer=null;const t=document.getElementById("close-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",s=>{s.target===this.modal&&this.close()})}show(e,t){this.cleanupViewer(),this.detailsTitle.textContent=`Molecule Details: ${e}`,this.detailsCode.textContent=e;const s=["ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL"].includes(e);this.detailsSource.textContent=s?"building_blocks":"reagents",this.detailsType.textContent=s?"building_block":"reagent";const n=this.moleculeManager.getMolecule?this.moleculeManager.getMolecule(e):null,i=n&&n.pdbId&&n.authSeqId&&n.labelAsymId;this.detailsStructure&&(this.detailsStructure.textContent=i?"PDB instance":"Ideal CCD SDF"),this.pdbInstanceFields&&this.pdbInstanceFields.forEach(l=>{l.style.display=i?"flex":"none"}),i?(this.detailsPdbId&&(this.detailsPdbId.textContent=n.pdbId.toUpperCase()),this.detailsChain&&(this.detailsChain.textContent=n.labelAsymId),this.detailsResidue&&(this.detailsResidue.textContent=n.authSeqId)):(this.detailsPdbId&&(this.detailsPdbId.textContent="-"),this.detailsChain&&(this.detailsChain.textContent="-"),this.detailsResidue&&(this.detailsResidue.textContent="-")),this.detailsViewer.innerHTML="<p>Loading structure...</p>",i?y.getPdbFile(n.pdbId).then(l=>{setTimeout(()=>{var r,d;try{const a=(d=(r=document.body)==null?void 0:r.classList)!=null&&d.contains("dark-mode")?"#e0e0e0":"white",c=$3Dmol.createViewer(this.detailsViewer,{backgroundColor:a,width:"100%",height:"100%"});this.detailsViewer.viewer=c,c.addModel(l,"pdb"),c.setStyle({},{cartoon:{color:"lightgrey"}});const u={chain:n.labelAsymId,resi:parseInt(n.authSeqId,10)},m={within:{distance:5,sel:u}};c.setStyle(m,{stick:{radius:.15,colorscheme:"element"}}),c.setStyle(u,{stick:{radius:.2,colorscheme:"element"},sphere:{scale:.3,colorscheme:"element"}}),c.addSurface($3Dmol.SurfaceType.MS,{opacity:.6,color:"white"},m),c.zoomTo(u),c.render(),this.viewer=c}catch(a){console.error(`Error initializing PDB viewer for ${e}:`,a),this.detailsViewer.innerHTML='<p style="color: #666;">Structure rendering error</p>'}},100)}).catch(l=>{console.error(`Error fetching PDB for ${e}:`,l),this.detailsViewer.innerHTML='<p style="color: #666;">Structure data not available</p>'}):t?setTimeout(()=>{var l,r;try{const d=(r=(l=document.body)==null?void 0:l.classList)!=null&&r.contains("dark-mode")?"#e0e0e0":"white",a=$3Dmol.createViewer(this.detailsViewer,{backgroundColor:d,width:"100%",height:"100%"});this.detailsViewer.viewer=a,a.addModel(t,"sdf"),a.setStyle({},{stick:{radius:.2,colorscheme:"element"},sphere:{scale:.3,colorscheme:"element"}}),a.setStyle({elem:"H"},{}),a.zoomTo(),a.render(),this.viewer=a}catch(d){console.error(`Error initializing details viewer for ${e}:`,d),this.detailsViewer.innerHTML='<p style="color: #666;">Structure rendering error</p>'}},100):this.detailsViewer.innerHTML='<p style="color: #666;">Structure data not available</p>';const o={molecule_id:`mol_${e.toLowerCase()}`,ccd_code:e,source:s?"building_blocks":"reagents",type:s?"building_block":"reagent",structure_type:i?"pdb_instance":"ideal_sdf",structure_data:t?t.substring(0,100)+"...":"N/A",properties:{molecular_weight:null,formula:null,status:n?n.status:"unknown"}};i&&(o.pdb_instance={pdb_id:n.pdbId,auth_seq_id:n.authSeqId,label_asym_id:n.labelAsymId}),this.detailsJSON.textContent=JSON.stringify(o,null,2),this.modal.style.display="block"}close(){this.cleanupViewer(),this.modal.style.display="none"}cleanupViewer(){var e,t;if(this.viewer){try{this.viewer.clear(),typeof this.viewer.destroy=="function"?this.viewer.destroy():(e=this.viewer)!=null&&e.gl&&typeof this.viewer.gl.getExtension=="function"&&((t=this.viewer.gl.getExtension("WEBGL_lose_context"))==null||t.loseContext())}catch(s){console.warn("Error destroying viewer:",s)}this.viewer=null}this.detailsViewer&&(this.detailsViewer.innerHTML="",this.detailsViewer.viewer=null)}}class be{constructor(e){this.moleculeManager=e,this.currentSimilarLigands=[]}async load(e){var o,l,r,d,a,c,u,m,g;const t=document.getElementById("similar-ligands-container"),s=document.getElementById("similar-ligands-table"),n=document.getElementById("similar-ligands-tbody"),i=document.getElementById("add-all-similar-btn");this.currentSimilarLigands=[];try{t.innerHTML="<p>Loading similar ligands...</p>",s.style.display="none",i.style.display="none";const f=(await y.getSimilarCcds(e))[e];if(!f||!((l=(o=f[0])==null?void 0:o.stereoisomers)!=null&&l.length)&&!((d=(r=f[0])==null?void 0:r.same_scaffold)!=null&&d.length)&&!((c=(a=f[0])==null?void 0:a.similar_ligands)!=null&&c.length)){t.innerHTML='<div class="no-similar-ligands">No similar ligands found</div>';return}n.innerHTML="";const b=(w,L)=>{L.forEach(v=>{this.currentSimilarLigands.push(v);const P=this.createSimilarLigandRow(w,v);n.appendChild(P)})};(u=f[0])!=null&&u.stereoisomers&&b("stereoisomer",f[0].stereoisomers),(m=f[0])!=null&&m.same_scaffold&&b("scaffold",f[0].same_scaffold),(g=f[0])!=null&&g.similar_ligands&&b("similar",f[0].similar_ligands),t.style.display="none",s.style.display="table",this.currentSimilarLigands.length>0&&(i.style.display="inline-block",i.textContent=`Add All (${this.currentSimilarLigands.length})`,i.replaceWith(i.cloneNode(!0)),document.getElementById("add-all-similar-btn").addEventListener("click",()=>this.addAllSimilarLigands()))}catch(p){console.error(`Error fetching similar CCDs for ${e}:`,p),t.innerHTML='<div class="no-similar-ligands">Similar ligands feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoSimilarLigands()}}addAllSimilarLigands(){if(!this.currentSimilarLigands||this.currentSimilarLigands.length===0){showNotification("No similar ligands to add","info");return}const e=document.getElementById("add-all-similar-btn");e.disabled=!0,e.textContent="Adding...";let t=0,s=0;this.currentSimilarLigands.forEach((n,i)=>{setTimeout(()=>{if(this.moleculeManager.addMolecule(n.chem_comp_id)?t++:s++,i===this.currentSimilarLigands.length-1){let l="";t>0&&s>0?l=`Added ${t} new molecules, ${s} already existed`:t>0?l=`Added ${t} new molecules`:l=`All ${s} molecules already existed`,showNotification(l,t>0?"success":"info"),e.disabled=!1,e.textContent=`Add All (${this.currentSimilarLigands.length})`}},i*100)})}createSimilarLigandRow(e,t){const s=document.createElement("tr"),n=document.createElement("td");n.className="structure-2d";const i=document.createElement("div");i.className="loading",i.textContent="Loading...",n.appendChild(i),this.load2DStructure(t.chem_comp_id,i);const o=document.createElement("td"),l=document.createElement("span");l.className=`type-badge type-${e}`;let r="";switch(e){case"stereoisomer":r="Stereoisomer";break;case"scaffold":r="Same Scaffold";break;case"similar":r="Similar";break}l.textContent=r,o.appendChild(l);const d=document.createElement("td"),a=document.createElement("span");a.className="ccd-code",a.textContent=t.chem_comp_id,a.title=`Click to add ${t.chem_comp_id} to database`,a.addEventListener("click",()=>{document.getElementById("close-details-modal").click(),this.moleculeManager.showMoleculeDetails(t.chem_comp_id)}),d.appendChild(a);const c=document.createElement("td");c.className="ligand-name",c.textContent=t.name||"N/A";const u=document.createElement("td");if(u.className="match-info",t.similarity_score){const p=Math.round(t.similarity_score*100);u.textContent=`${p}% similarity`}else t.substructure_match&&t.substructure_match.length>0?u.textContent=t.substructure_match.join(", "):u.textContent="-";const m=document.createElement("td"),g=document.createElement("button");return g.className="add-ligand-btn",g.innerHTML="&#43;",g.title=`Add ${t.chem_comp_id} to database`,g.addEventListener("click",()=>{this.moleculeManager.addMolecule(t.chem_comp_id)?showNotification(`Adding molecule ${t.chem_comp_id}...`,"success"):showNotification(`Molecule ${t.chem_comp_id} already exists`,"info")}),m.appendChild(g),s.appendChild(n),s.appendChild(o),s.appendChild(d),s.appendChild(c),s.appendChild(u),s.appendChild(m),s}async load2DStructure(e,t){try{const s=`${T}/${e.toUpperCase()}_200.svg`,n=document.createElement("img");n.src=s,n.alt=`2D structure of ${e}`,n.onload=()=>{t.innerHTML="",t.appendChild(n)},n.onerror=()=>{const i=`${T}/${e.toLowerCase()}_200.svg`,o=document.createElement("img");o.src=i,o.alt=`2D structure of ${e}`,o.onload=()=>{t.innerHTML="",t.appendChild(o)},o.onerror=()=>{t.className="error",t.textContent="No image"}}}catch(s){console.error(`Error loading 2D structure for ${e}:`,s),t.className="error",t.textContent="Error"}}showDemoSimilarLigands(){const e=document.getElementById("similar-ligands-container"),t=document.getElementById("similar-ligands-table"),s=document.getElementById("similar-ligands-tbody"),n=[{type:"stereoisomer",chem_comp_id:"HEJ",name:"9-{5-O-[(S)-hydroxy{[(R)-hydroxy(phosphonooxy)phosphoryl]oxy}phosphoryl]-beta-D-arabinofuranosyl}-9H-purin-6-amine",substructure_match:[]},{type:"scaffold",chem_comp_id:"E7X",name:"(2~{S})-4-[[(2~{R},3~{S},4~{R},5~{R})-5-(6-aminopurin-9-yl)-3,4-bis(oxidanyl)oxolan-2-yl]methyl-(2-hydroxyethyl)amino]-2-azaniumyl-butanoate",substructure_match:["N7"]},{type:"scaffold",chem_comp_id:"ADP",name:"Adenosine 5-diphosphate",substructure_match:["N1","N3","N7","N9"]}];s.innerHTML="",n.forEach(i=>{const o=this.createSimilarLigandRow(i.type,i);s.appendChild(o)}),e.innerHTML='<div style="background: #e8f5e8; padding: 10px; border-radius: 4px; margin-bottom: 10px; font-size: 13px;"><strong>Demo Data:</strong> Showing sample similar ligands for ATP. In production, this would fetch real data from the PDBe API.</div>',t.style.display="table"}}class Ee{constructor(e){this.moleculeManager=e}async load(e){const t=document.getElementById("pdb-entries-container"),s=document.getElementById("pdb-entries-table-container"),n=document.getElementById("pdb-entries-tbody");try{t.innerHTML="<p>Loading PDB entries...</p>",n.innerHTML="",s.style.display="none",s.querySelectorAll('p[style*="font-size: 12px"]').forEach(d=>d.remove());const l=(await y.getPdbEntriesForCcd(e))[e];if(!l||l.length===0){t.innerHTML='<div class="no-pdb-entries">No PDB entries found containing this CCD code</div>';return}n.innerHTML="";const r=l.slice(0,10);console.log(`Found ${l.length} PDB entries for ${e}, showing first ${r.length}`);for(const d of r)try{const a=await this.moleculeManager.fetchRCSBDetails(d),c=this.createDetailedPDBEntryRow(d,a);n.appendChild(c)}catch(a){console.warn(`Failed to fetch details for ${d}:`,a);const c=this.createSimplePDBEntryRow(d);n.appendChild(c)}if(t.style.display="none",s.style.display="block",l.length>10){const d=document.createElement("p");d.style.fontSize="12px",d.style.color="#666",d.style.fontStyle="italic",d.style.marginTop="10px",d.textContent=`Showing first 10 of ${l.length} PDB entries containing ${e}`,s.appendChild(d)}}catch(i){console.error(`Error fetching PDB entries for ${e}:`,i),n.innerHTML="",s.style.display="none",t.innerHTML='<div class="no-pdb-entries">PDB entries feature temporarily unavailable due to CORS restrictions. <br><small>In production, this would be handled via a backend proxy.</small></div>',e==="ATP"&&this.showDemoPDBEntries()}}createDetailedPDBEntryRow(e,t){const s=document.createElement("tr"),n=document.createElement("td"),i=document.createElement("span");i.className="pdb-id",i.textContent=e.toUpperCase(),i.title=`Click to view details for ${e.toUpperCase()}`,i.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),n.appendChild(i);const o=document.createElement("td");o.className="pdb-title",t&&t.struct&&t.struct.title?(o.textContent=t.struct.title,o.title=t.struct.title):o.textContent="N/A";const l=document.createElement("td");l.className="pdb-resolution",t&&t.rcsb_entry_info&&t.rcsb_entry_info.resolution_combined&&t.rcsb_entry_info.resolution_combined.length>0?l.textContent=`${t.rcsb_entry_info.resolution_combined[0].toFixed(2)}`:l.textContent="N/A";const r=document.createElement("td");if(r.className="pdb-date",t&&t.rcsb_accession_info&&t.rcsb_accession_info.initial_release_date){const u=new Date(t.rcsb_accession_info.initial_release_date);r.textContent=u.toLocaleDateString()}else r.textContent="N/A";const d=document.createElement("td");d.className="view-buttons-cell";const a=document.createElement("button");a.textContent="RCSB PDB",a.className="view-structure-btn rcsb-btn",a.title=`View ${e.toUpperCase()} on RCSB PDB`,a.addEventListener("click",()=>{window.open(`${M}/${e.toUpperCase()}`,"_blank")});const c=document.createElement("button");return c.textContent="PDBe",c.className="view-structure-btn pdbe-btn",c.title=`View ${e.toUpperCase()} on PDBe`,c.addEventListener("click",()=>{window.open(`${B}/${e.toLowerCase()}`,"_blank")}),d.appendChild(a),d.appendChild(c),s.appendChild(n),s.appendChild(o),s.appendChild(l),s.appendChild(r),s.appendChild(d),s}createSimplePDBEntryRow(e){const t=document.createElement("tr"),s=document.createElement("td"),n=document.createElement("span");n.className="pdb-id",n.textContent=e.toUpperCase(),n.title=`Click to view details for ${e.toUpperCase()}`,n.addEventListener("click",()=>{this.moleculeManager.showPDBDetailsModal(e)}),s.appendChild(n);const i=document.createElement("td");i.textContent="Loading...",i.className="pdb-title";const o=document.createElement("td");o.textContent="N/A",o.className="pdb-resolution";const l=document.createElement("td");l.textContent="N/A",l.className="pdb-date";const r=document.createElement("td");r.className="view-buttons-cell";const d=document.createElement("button");d.textContent="RCSB PDB",d.className="view-structure-btn rcsb-btn",d.title=`View ${e.toUpperCase()} on RCSB PDB`,d.addEventListener("click",()=>{window.open(`${M}/${e.toUpperCase()}`,"_blank")});const a=document.createElement("button");return a.textContent="PDBe",a.className="view-structure-btn pdbe-btn",a.title=`View ${e.toUpperCase()} on PDBe`,a.addEventListener("click",()=>{window.open(`${B}/${e.toLowerCase()}`,"_blank")}),r.appendChild(d),r.appendChild(a),t.appendChild(s),t.appendChild(i),t.appendChild(o),t.appendChild(l),t.appendChild(r),t}showDemoPDBEntries(){const e=document.getElementById("pdb-entries-container"),t=document.getElementById("pdb-entries-table-container"),s=document.getElementById("pdb-entries-tbody");s.innerHTML="",t.querySelectorAll('p[style*="font-size: 12px"]').forEach(o=>o.remove()),[{pdb_id:"1atp",title:"CRYSTAL STRUCTURE OF THE TERNARY COMPLEX OF PHENYLALANYL-TRNA SYNTHETASE WITH TRNA AND A PHENYLALANYL-ADENYLATE ANALOGUE",resolution:2.7,release_date:"1995-01-31"},{pdb_id:"2atp",title:"ADENOSINE-5'-TRIPHOSPHATE",resolution:1.83,release_date:"1996-07-17"},{pdb_id:"3atp",title:"ATP SYNTHASE",resolution:2.4,release_date:"1999-02-24"},{pdb_id:"1a49",title:"CRYSTAL STRUCTURE OF ADENYLYL CYCLASE",resolution:2.8,release_date:"1998-04-15"},{pdb_id:"1a5u",title:"ATP BINDING CASSETTE TRANSPORTER",resolution:3.2,release_date:"1998-08-12"}].forEach(o=>{const l={struct:{title:o.title},rcsb_entry_info:{resolution_combined:[o.resolution]},rcsb_accession_info:{initial_release_date:o.release_date}},r=this.createDetailedPDBEntryRow(o.pdb_id,l);s.appendChild(r)}),e.innerHTML='<div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 4px; font-size: 12px; margin-bottom: 10px;">Demo data shown due to CORS restrictions. In production, this would show all PDB entries containing ATP.</div>',t.style.display="block"}}const we="https://data.rcsb.org/rest/v1/core/chemcomp";class ve{static async getProperties(e){try{const t=await fetch(`${we}/${e.toUpperCase()}`);if(!t.ok)throw new Error(`HTTP error ${t.status}`);const s=await t.json(),n=(s==null?void 0:s.chem_comp)||{},i=(s==null?void 0:s.rcsb_chem_comp_info)||{};return{molecularWeight:n.formula_weight??null,formula:n.formula??null,atomCount:i.atom_count??null,heavyAtomCount:i.atom_count_heavy??null,aromaticBondCount:i.bond_count_aromatic??null}}catch(t){return console.error(`Failed to fetch properties for ${e}:`,t),null}}}class Ce{constructor(e){this.details=new ye(e),this.similarLigandTable=new be(e),this.pdbEntryList=new Ee(e),this.propertiesContainer=document.getElementById("ligand-properties")}show(e,t){this.details.show(e,t),this.similarLigandTable.load(e),this.pdbEntryList.load(e),this.propertiesContainer&&(this.propertiesContainer.textContent="Loading properties...",Promise.all([ve.getProperties(e).catch(()=>null),y.getPubChemMetadata(e).catch(()=>null)]).then(([s,n])=>{var r,d,a;if(!s&&!n){this.propertiesContainer.textContent="Properties unavailable";return}let i="";const o=((r=n==null?void 0:n.properties)==null?void 0:r.MolecularWeight)??(s==null?void 0:s.molecularWeight),l=((d=n==null?void 0:n.properties)==null?void 0:d.MolecularFormula)??(s==null?void 0:s.formula);(o||l)&&(i+=`<div>Molecular Weight: ${o??"N/A"}</div>`,i+=`<div>Formula: ${l??"N/A"}</div>`),s&&(s.atomCount!=null&&(i+=`<div>Atom Count: ${s.atomCount}</div>`),s.heavyAtomCount!=null&&(i+=`<div>Heavy Atom Count: ${s.heavyAtomCount}</div>`),s.aromaticBondCount!=null&&(i+=`<div>Aromatic Bond Count: ${s.aromaticBondCount}</div>`)),(a=n==null?void 0:n.properties)!=null&&a.IUPACName&&(i+=`<div>IUPAC Name: ${n.properties.IUPACName}</div>`),n!=null&&n.synonyms&&n.synonyms.length&&(i+=`<div>Synonyms: ${n.synonyms.slice(0,5).join(", ")}</div>`),n!=null&&n.link&&(i+=`<div><a href="${n.link}" target="_blank">PubChem Entry</a></div>`),this.propertiesContainer.innerHTML=i}).catch(()=>{this.propertiesContainer.textContent="Properties unavailable"}))}close(){this.details.close()}load2DStructure(e,t){return this.similarLigandTable.load2DStructure(e,t)}}class Le{constructor(e,t,s={}){this.grid=e,this.repository=t,this.onDelete=s.onDelete,this.onShowDetails=s.onShowDetails,this.onCompare=s.onCompare,this.draggedElement=null}createMoleculeCardFromSmiles(e,t,s=t){const n=document.createElement("div");n.className="molecule-card",n.draggable=!0,n.setAttribute("data-molecule-code",t),n.setAttribute("data-molecule-id",s);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",n.appendChild(i);const o=document.createElement("div");o.className="delete-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',o.title=`Delete ${t}`,o.addEventListener("click",u=>{u.stopPropagation(),this.onDelete&&this.onDelete(t)}),n.appendChild(o);const l=document.createElement("div");l.className="download-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',l.title=`Download ${t} as SDF`,l.addEventListener("click",u=>{u.stopPropagation(),this.downloadSdf(t)}),n.appendChild(l);const r=document.createElement("div");r.className="compare-btn",r.textContent="⇆",r.title=`Compare ${t}`,r.addEventListener("click",u=>{u.stopPropagation(),this.onCompare&&this.onCompare(t)}),n.appendChild(r);const d=document.createElement("div");d.className="molecule-code",d.textContent=t,n.appendChild(d);const a=document.createElement("div");a.className="molecule-viewer",a.id=`viewer-${t}`,n.appendChild(a);const c=document.createElement("div");c.className="smiles-label",c.textContent=`SMILES: ${e}`,c.style.fontSize="10px",c.style.color="#666",c.style.marginTop="5px",n.appendChild(c),this.grid.appendChild(n),this.renderSmilesIn2D(e,a),this.addDragEvents(n)}renderSmilesIn2D(e,t){t.innerHTML=`
            <div style="display:flex;align-items:center;justify-content:center;height:100%;background:#f8f9fa;border:1px solid #e9ecef;border-radius:4px;">
                <div style="text-align:center;padding:10px;">
                    <div style="font-size:24px;margin-bottom:5px;">🧪</div>
                    <div style="font-size:10px;color:#666;">SMILES</div>
                </div>
            </div>
        `}createMoleculeCard(e,t,s="sdf",n=t,i=null){const o=document.createElement("div");o.className="molecule-card",o.draggable=!0,o.setAttribute("data-molecule-code",t),o.setAttribute("data-molecule-id",n);const l=document.createElement("div");l.className="drag-handle",l.innerHTML="⋯",o.appendChild(l);const r=document.createElement("div");r.className="delete-btn",r.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',r.title=`Delete ${t}`,r.addEventListener("click",m=>{m.stopPropagation(),this.onDelete&&this.onDelete(t)}),o.appendChild(r);const d=document.createElement("div");d.className="download-btn",d.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',d.title=`Download ${t} as SDF`,d.addEventListener("click",m=>{m.stopPropagation(),this.downloadSdf(t,e,i)}),o.appendChild(d);const a=document.createElement("div");a.className="compare-btn",a.textContent="⇆",a.title=`Compare ${t}`,a.addEventListener("click",m=>{m.stopPropagation(),this.onCompare&&this.onCompare(t)}),o.appendChild(a);const c=document.createElement("h3");c.textContent=t,c.style.cursor="pointer",c.addEventListener("click",()=>{this.onShowDetails&&this.onShowDetails(t,e,s)}),o.appendChild(c);const u=document.createElement("div");u.id=`viewer-${t}`,u.className="viewer-container",o.appendChild(u),this.grid.appendChild(o),this.addDragEvents(o),setTimeout(()=>{var m,g;try{const p=(g=(m=document.body)==null?void 0:m.classList)!=null&&g.contains("dark-mode")?"#e0e0e0":"white",f=$3Dmol.createViewer(u,{backgroundColor:p});u.viewer=f,f.addModel(e,s),f.setStyle({},{stick:{}}),f.setStyle({elem:"H"},{}),f.zoomTo(),f.render()}catch(p){console.error(`Error initializing 3Dmol viewer for ${t}:`,p),u.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>'}},100)}createNotFoundCard(e,t="Not found",s=e){const n=document.createElement("div");n.className="molecule-card",n.draggable=!0,n.setAttribute("data-molecule-code",e),n.setAttribute("data-molecule-id",s);const i=document.createElement("div");i.className="drag-handle",i.innerHTML="⋯",n.appendChild(i);const o=document.createElement("div");o.className="delete-btn",o.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>',o.title=`Delete ${e}`,o.addEventListener("click",d=>{d.stopPropagation(),this.onDelete&&this.onDelete(e)}),n.appendChild(o);const l=document.createElement("div");l.className="download-btn",l.innerHTML='<svg viewBox="0 0 24 24" width="16" height="16"><path fill="currentColor" d="M5 20h14v-2H5m14-9h-4V3H9v6H5l7 7 7-7Z"/></svg>',l.title=`Download ${e} as SDF`,l.addEventListener("click",d=>{d.stopPropagation(),this.downloadSdf(e)}),n.appendChild(l);const r=document.createElement("div");r.className="not-found-content",r.innerHTML=`<h3>${e}</h3><p>${t}</p>`,n.appendChild(r),this.grid.appendChild(n),this.addDragEvents(n)}addDragEvents(e){e.addEventListener("dragstart",t=>this.handleDragStart(t)),e.addEventListener("dragover",t=>this.handleDragOver(t)),e.addEventListener("drop",t=>this.handleDrop(t)),e.addEventListener("dragend",t=>this.handleDragEnd(t))}handleDragStart(e){this.draggedElement=e.currentTarget,e.currentTarget.classList.add("dragging"),e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/html",e.currentTarget.outerHTML)}handleDragOver(e){return e.preventDefault&&e.preventDefault(),e.dataTransfer.dropEffect="move",!1}handleDrop(e){if(e.stopPropagation&&e.stopPropagation(),this.draggedElement!==e.currentTarget){const t=Array.from(this.grid.querySelectorAll(".molecule-card")),s=t.indexOf(this.draggedElement),n=t.indexOf(e.currentTarget);s<n?e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget.nextSibling):e.currentTarget.parentNode.insertBefore(this.draggedElement,e.currentTarget);const i=this.repository.molecules,o=this.draggedElement.getAttribute("data-molecule-code"),l=e.currentTarget.getAttribute("data-molecule-code"),r=i.findIndex(a=>a.code===o),d=i.findIndex(a=>a.code===l);if(r>-1&&d>-1){const[a]=i.splice(r,1);i.splice(d,0,a)}}return!1}handleDragEnd(e){e.currentTarget.classList.remove("dragging"),this.draggedElement=null}async downloadSdf(e,t,s){try{let n=t,i=`${e}.sdf`;if(s){const{pdbId:d,authSeqId:a,labelAsymId:c}=s;i=`${d.toLowerCase()}_${c}_${e}`.toLowerCase()+".sdf",n||(n=await y.getInstanceSdf(d,a,c,e))}else n||(n=await y.getCcdSdf(e));if(!n)throw new Error("No SDF data available");const o=new Blob([n],{type:"chemical/x-mdl-sdfile"}),l=URL.createObjectURL(o),r=document.createElement("a");r.href=l,r.download=i,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(l)}catch(n){console.error(`Failed to download SDF for ${e}:`,n)}}clearAll(){this.grid.querySelectorAll(".molecule-card").forEach(t=>t.remove())}}class _e{constructor(e){this.boundLigandTable=e,this.modal=document.getElementById("pdb-details-modal");const t=document.getElementById("close-pdb-details-modal");t&&t.addEventListener("click",()=>this.close()),window.addEventListener("click",s=>{s.target===this.modal&&this.close()})}async fetchRCSBDetails(e){try{return await y.getRcsbEntry(e)}catch(t){return console.error(`Error fetching RCSB details for PDB ${e}:`,t),null}}async showPDBDetailsModal(e){const t=document.getElementById("pdb-details-title"),s=document.getElementById("pdb-details-body"),n=document.getElementById("pdb-viewer-container");t.textContent=`PDB Entry Details: ${e.toUpperCase()}`,s.innerHTML='<div class="properties-loading">Loading PDB entry details...</div>',n.innerHTML="",n.style.display="none",this.modal.style.display="block";try{const i=await this.fetchRCSBDetails(e);if(!i)throw new Error("No data found for this PDB entry.");s.innerHTML=this.createPDBDetailsHTML(i),this.boundLigandTable&&this.boundLigandTable.populateBoundLigands(e),document.getElementById("open-rcsb-btn").addEventListener("click",()=>{window.open(`${M}/${e.toUpperCase()}`,"_blank")}),document.getElementById("open-pdbe-btn").addEventListener("click",()=>{window.open(`${B}/${e.toLowerCase()}`,"_blank")}),n.style.display="block",n.innerHTML='<p class="properties-loading">Loading 3D structure...</p>';const o=await y.getPdbFile(e);setTimeout(()=>{var l,r;try{const d=(r=(l=document.body)==null?void 0:l.classList)!=null&&r.contains("dark-mode")?"#e0e0e0":"white",a=$3Dmol.createViewer(n,{backgroundColor:d,width:"100%",height:"100%"});n.viewer=a,a.addModel(o,"pdb"),a.setStyle({},{cartoon:{color:"#b3b3b3",opacity:.7}}),a.setStyle({hetflag:!0},{stick:{radius:.5,colorscheme:"element"}}),a.setStyle({hetflag:!0,resn:["HOH","H2O","WAT"]},{}),a.zoomTo(),a.render()}catch(d){console.error("Error creating 3Dmol viewer:",d),n.innerHTML='<div class="no-pdb-entries">Could not render 3D structure.</div>'}},100)}catch(i){console.error("Error fetching PDB details:",i),s.innerHTML='<div class="no-pdb-entries">Could not load details for this PDB entry.</div>',n.style.display="none";const o=i.status&&i.url?`Failed to load PDB details (status ${i.status}) from ${i.url}`:"Failed to load PDB entry details.";typeof showNotification=="function"&&showNotification(o,"error")}}close(){this.modal&&(this.modal.style.display="none")}createPDBDetailsHTML(e){var d,a,c,u,m,g,p,f,b,w,L,v;const t=((d=e.struct)==null?void 0:d.title)||"Not available",s=((u=(c=(a=e.citation)==null?void 0:a[0])==null?void 0:c.rcsb_authors)==null?void 0:u.join(", "))||"Not available",n=(m=e.rcsb_accession_info)!=null&&m.initial_release_date?new Date(e.rcsb_accession_info.initial_release_date).toLocaleDateString():"Not available",i=(f=(p=(g=e.rcsb_entry_info)==null?void 0:g.resolution_combined)==null?void 0:p[0])!=null&&f.toFixed(2)?`${e.rcsb_entry_info.resolution_combined[0].toFixed(2)} Å`:"N/A",o=((w=(b=e.exptl)==null?void 0:b[0])==null?void 0:w.method)||"N/A",l=((v=(L=e.entity_src_gen)==null?void 0:L[0])==null?void 0:v.pdbx_host_org_scientific_name)||"Not available";return`
            <div class="details-section" style="padding-bottom: 0;">
                <div class="pdb-details-grid" style="grid-template-columns: repeat(5, 1fr);">
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">PDB ID</div>
                        <div class="pdb-info-value">${e.rcsb_id.toUpperCase()}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Organism</div>
                        <div class="pdb-info-value">${l}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Method</div>
                        <div class="pdb-info-value">${o}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Resolution</div>
                        <div class="pdb-info-value">${i}</div>
                    </div>
                    <div class="pdb-info-item">
                        <div class="pdb-info-label">Release Date</div>
                        <div class="pdb-info-value">${n}</div>
                    </div>
                </div>
            </div>
            <div class="details-section" style="padding-top: 0;">
                 <div class="pdb-details-grid">
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Title</div>
                        <div class="pdb-info-value" title="${t}">${t}</div>
                    </div>
                    <div class="pdb-info-item" style="grid-column: 1 / -1;">
                        <div class="pdb-info-label">Authors</div>
                        <div class="pdb-info-value">${s}</div>
                    </div>
                </div>
                <div class="pdb-external-links">
                    <button id="open-rcsb-btn" class="view-structure-btn rcsb-btn">RCSB PDB</button>
                    <button id="open-pdbe-btn" class="view-structure-btn pdbe-btn">PDBe</button>
                </div>
            </div>
            <div class="details-section">
                <h4>Interactive Molecular Structure</h4>
            </div>
        `}}const Ie=["ATP","NAG","FAD","HEM","NAD","ADP","SAM","FMN","GDP","GTP"];class Me{constructor(e){this.moleculeManager=e,this.modal=document.getElementById("add-molecule-modal"),this.codeInput=document.getElementById("molecule-code"),this.errorText=document.getElementById("ccd-error"),this.confirmBtn=document.getElementById("confirm-add-btn"),this.cancelBtn=document.getElementById("cancel-btn"),this.closeBtn=document.getElementById("close-modal"),this.luckyBtn=document.getElementById("feeling-lucky-btn"),this.pdbIdInput=document.getElementById("pdb-id"),this.authSeqIdInput=document.getElementById("auth-seq-id"),this.labelAsymIdInput=document.getElementById("label-asym-id"),this.instanceError=document.getElementById("instance-error"),this.cancelBtn&&this.cancelBtn.addEventListener("click",()=>this.close()),this.closeBtn&&this.closeBtn.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()}),this.codeInput&&this.codeInput.addEventListener("input",()=>this.handleInput()),this.pdbIdInput&&this.pdbIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.authSeqIdInput&&this.authSeqIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.labelAsymIdInput&&this.labelAsymIdInput.addEventListener("input",()=>this.handleInstanceInput()),this.confirmBtn&&this.confirmBtn.addEventListener("click",()=>this.handleSubmit()),this.luckyBtn&&(this.luckyCodes=Ie,this.luckyCodes.length>0&&this.luckyBtn.addEventListener("click",()=>this.handleLucky()))}open(){this.modal&&(this.reset(),this.modal.style.display="block",this.codeInput.focus())}close(){this.modal&&(this.modal.style.display="none")}reset(){this.codeInput&&(this.codeInput.value=""),this.errorText&&(this.errorText.textContent=""),this.instanceError&&(this.instanceError.textContent=""),this.pdbIdInput&&(this.pdbIdInput.value=""),this.authSeqIdInput&&(this.authSeqIdInput.value=""),this.labelAsymIdInput&&(this.labelAsymIdInput.value=""),this.confirmBtn&&(this.confirmBtn.disabled=!0)}handleInput(){let e=this.codeInput.value.toUpperCase();this.codeInput.value=e;const t=/^[A-Z0-9]{3}$/.test(e);this.errorText&&(this.errorText.textContent=t?"":"Code must be 3 alphanumeric characters."),this.confirmBtn&&(this.confirmBtn.disabled=!t)}handleInstanceInput(){this.instanceError&&(this.instanceError.textContent="")}handleLucky(){if(!this.luckyCodes||this.luckyCodes.length===0)return;let e,t=0;do e=this.luckyCodes[Math.floor(Math.random()*this.luckyCodes.length)],t++;while(this.moleculeManager.getMolecule(e)&&t<10);this.moleculeManager.addMolecule(e)?window.showNotification(`Adding molecule ${e}...`,"success"):window.showNotification(`Molecule ${e} already exists`,"info"),this.close()}handleSubmit(){const e=this.codeInput.value.toUpperCase(),t=this.pdbIdInput.value.trim().toUpperCase(),s=this.authSeqIdInput.value.trim(),n=this.labelAsymIdInput.value.trim().toUpperCase();if(t||s||n){if(!(t&&s&&n)){this.instanceError&&(this.instanceError.textContent="PDB ID, residue number and chain are required.");return}this.moleculeManager.addPdbInstance({code:e,pdbId:t,authSeqId:s,labelAsymId:n})?window.showNotification(`Adding ligand ${e} from ${t}...`,"success"):window.showNotification(`Ligand ${e} instance already exists`,"info")}else this.moleculeManager.addMolecule(e)?window.showNotification(`Adding molecule ${e}...`,"success"):window.showNotification(`Molecule ${e} already exists`,"info");this.close()}}class Be{constructor(e){this.moleculeManager=e,this.searchBtn=null,this.searchInput=null,this.suggestedDropdown=null,this.resultsContainer=null,this.resultsBody=null,this.loadingIndicator=null,this.noResultsMessage=null,this.hideAidsToggle=null,this.currentProteinDetails=[],this.resultsCountMessage=null,this.loadMoreBtn=null,this.allPdbIds=[],this.totalResults=0,this.currentOffset=0,this.limit=20}init(){return this.searchBtn=document.getElementById("protein-group-search-btn"),this.searchInput=document.getElementById("protein-group-search"),this.suggestedDropdown=document.getElementById("suggested-groups-dropdown"),this.resultsContainer=document.getElementById("protein-results-table-container"),this.resultsBody=document.getElementById("protein-results-tbody"),this.loadingIndicator=document.getElementById("protein-loading-indicator"),this.noResultsMessage=document.getElementById("no-protein-results-message"),this.hideAidsToggle=document.getElementById("hide-aids-toggle"),this.resultsCountMessage=document.getElementById("protein-results-count"),this.loadMoreBtn=document.getElementById("protein-load-more"),this.searchBtn&&this.searchBtn.addEventListener("click",()=>{const e=this.searchInput.value.trim();e?this.fetchProteinEntries(e):showNotification("Please enter a Group ID or UniProt ID.","info")}),this.hideAidsToggle&&this.hideAidsToggle.addEventListener("change",()=>{this.currentProteinDetails.length>0&&this.displayResults(this.currentProteinDetails)}),this.suggestedDropdown&&this.suggestedDropdown.addEventListener("change",()=>{const e=this.suggestedDropdown.value;e&&(this.searchInput&&(this.searchInput.value=e),this.fetchProteinEntries(e))}),this.loadMoreBtn&&this.loadMoreBtn.addEventListener("click",()=>{this.loadMoreResults()}),this}async fetchProteinEntries(e){this.loadingIndicator.style.display="block",this.resultsContainer.style.display="none",this.noResultsMessage.style.display="none",this.resultsCountMessage&&(this.resultsCountMessage.style.display="none"),this.loadMoreBtn&&(this.loadMoreBtn.style.display="none");try{let t=[];e.toUpperCase().startsWith("G_")?t=(await y.getProteinGroup(e)).rcsb_group_container_identifiers.group_member_ids:t=await y.getPdbEntriesForUniprot(e),this.allPdbIds=t,this.totalResults=t.length,this.currentOffset=0,this.currentProteinDetails=[];const s=await this.fetchMemberDetails(this.allPdbIds,this.limit,this.currentOffset);this.currentOffset+=s.length,this.currentProteinDetails=s,await this.displayResults(this.currentProteinDetails),this.updateResultsInfo()}catch(t){console.error("Error fetching protein entries:",t),this.noResultsMessage.textContent="Could not fetch data for the given identifier.",this.noResultsMessage.style.display="block";const s=t.status&&t.url?`Failed to fetch protein data (status ${t.status}) from ${t.url}`:"Failed to fetch protein data.";typeof showNotification=="function"&&showNotification(s,"error")}finally{this.loadingIndicator.style.display="none"}}async fetchMemberDetails(e,t=20,s=0){const i=e.slice(s,s+t).map(async o=>{try{return await y.getRcsbEntry(o)}catch{return{rcsb_id:o,error:"Failed to fetch details"}}});return Promise.all(i)}async loadMoreResults(){if(!(this.currentOffset>=this.totalResults)){this.loadingIndicator.style.display="block";try{const e=await this.fetchMemberDetails(this.allPdbIds,this.limit,this.currentOffset);this.currentOffset+=e.length,this.currentProteinDetails=this.currentProteinDetails.concat(e),await this.displayResults(e,!0),this.updateResultsInfo()}catch(e){console.error("Error loading more results:",e),typeof showNotification=="function"&&showNotification("Failed to load more protein entries.","error")}finally{this.loadingIndicator.style.display="none"}}}updateResultsInfo(){if(!(!this.resultsCountMessage||!this.loadMoreBtn)){if(this.totalResults>0){const e=Math.min(this.currentOffset,this.totalResults);this.resultsCountMessage.textContent=`Showing ${e} of ${this.totalResults} results.`,this.resultsCountMessage.style.display="block"}else this.resultsCountMessage.style.display="none";this.currentOffset<this.totalResults?this.loadMoreBtn.style.display="block":this.loadMoreBtn.style.display="none"}}async fetchBoundLigands(e){try{return(await y.getLigandMonomers(e))[e.toLowerCase()]||[]}catch(t){return console.error(`Error fetching bound ligands for ${e}:`,t),[]}}renderBoundLigands(e,t){if(!e||e.length===0)return'<div class="bound-ligands-container"></div>';const s=e.slice(0,5).map(i=>`
            <div class="ligand-img-container">
                <img src="${T}/${i.chem_comp_id}_200.svg" alt="${i.chem_comp_id}" title="${i.chem_comp_id}: ${i.chem_comp_name}" class="bound-ligand-img">
                <div class="ligand-img-overlay">
                    <button class="ligand-action-btn add-ligand" data-ccd-code="${i.chem_comp_id}" data-pdb-id="${t}" data-label-asym-id="${i.chain_id}" data-auth-seq-id="${i.author_residue_number}">+</button>
                </div>
            </div>
        `).join(""),n=e.length>5?`<span class="more-ligands-indicator" title="${e.length-5} more ligands">+${e.length-5}</span>`:"";return`<div class="bound-ligands-container">${s}${n}</div>`}async displayResults(e,t=!1){var s,n,i,o,l;if(t||(this.resultsBody.innerHTML=""),e&&e.length>0){const r=this.hideAidsToggle&&this.hideAidsToggle.checked;for(const d of e){const a=this.resultsBody.insertRow(),c=d.rcsb_id,u=((s=d.struct)==null?void 0:s.title)||"N/A",m=((o=(i=(n=d.rcsb_entry_info)==null?void 0:n.resolution_combined)==null?void 0:i[0])==null?void 0:o.toFixed(2))||"N/A",g=(l=d.rcsb_accession_info)!=null&&l.initial_release_date?new Date(d.rcsb_accession_info.initial_release_date).toLocaleDateString():"N/A",p=d.rcsb_primary_citation,f=(p==null?void 0:p.title)||"N/A",b=p!=null&&p.pdbx_database_id_doi?`https://doi.org/${p.pdbx_database_id_doi}`:p!=null&&p.pdbx_database_id_PubMed?`https://pubmed.ncbi.nlm.nih.gov/${p.pdbx_database_id_PubMed}/`:null,w=b?`<a href="${b}" target="_blank">${f}</a>`:f,L=`${re}/${c.toLowerCase()}_assembly-1.jpeg`;let v=await this.fetchBoundLigands(c);r&&(v=v.filter(E=>!he.includes(E.chem_comp_id))),a.innerHTML=`
                    <td data-label="Image"><img src="${L}" alt="${c} thumbnail" class="protein-thumbnail"></td>
                    <td data-label="PDB ID"><a href="#" class="pdb-id-link" data-pdb-id="${c}">${c}</a></td>
                    <td data-label="Title">${u}</td>
                    <td data-label="Resolution">${m}</td>
                    <td data-label="Release Date">${g}</td>
                    <td data-label="Publication">${w}</td>
                    <td data-label="Bound Ligands" class="bound-ligands-cell">${this.renderBoundLigands(v,c)}</td>
                    <td data-label="View Structure" class="view-buttons-cell">
                        <button class="view-structure-btn rcsb-btn" data-pdb-id="${c}">RCSB PDB</button>
                        <button class="view-structure-btn pdbe-btn" data-pdb-id="${c}">PDBe</button>
                    </td>
                `,a.querySelector(".pdb-id-link").addEventListener("click",E=>{E.preventDefault(),this.moleculeManager.showPDBDetailsModal(E.target.dataset.pdbId)}),a.querySelector(".view-structure-btn.rcsb-btn").addEventListener("click",E=>{window.open(`${M}/${E.target.dataset.pdbId}`,"_blank")}),a.querySelector(".view-structure-btn.pdbe-btn").addEventListener("click",E=>{window.open(`${B}/${E.target.dataset.pdbId.toLowerCase()}`,"_blank")}),a.querySelectorAll(".add-ligand").forEach(E=>{E.addEventListener("click",Y=>{const{ccdCode:A,pdbId:z,authSeqId:G,labelAsymId:j}=Y.currentTarget.dataset;this.moleculeManager.addPdbInstance({code:A,pdbId:z,authSeqId:G,labelAsymId:j})?showNotification(`Adding molecule ${A}...`,"success"):showNotification(`Molecule ${A} already exists`,"info")})})}this.resultsContainer.style.display="block",this.noResultsMessage.style.display="none"}else t||(this.noResultsMessage.textContent="No PDB entries found in this group.",this.noResultsMessage.style.display="block",this.resultsContainer.style.display="none")}}class Se{constructor(){this.modal=document.getElementById("comparison-modal"),this.viewerContainer=document.getElementById("comparison-viewer"),this.title=document.getElementById("comparison-title");const e=document.getElementById("close-comparison-modal");e&&e.addEventListener("click",()=>this.close()),window.addEventListener("click",t=>{t.target===this.modal&&this.close()})}show(e,t){!e||!t||(this.title&&(this.title.textContent=`${e.code} vs ${t.code}`),this.viewerContainer&&(this.viewerContainer.innerHTML=""),this.modal&&(this.modal.style.display="block"),setTimeout(()=>{var s,n;try{const i=(n=(s=document.body)==null?void 0:s.classList)!=null&&n.contains("dark-mode")?"#e0e0e0":"white",o=$3Dmol.createViewer(this.viewerContainer,{backgroundColor:i});this.viewerContainer.viewer=o;const l=o.addModel(e.sdf,"sdf"),r=o.addModel(t.sdf,"sdf");l.setStyle({},{stick:{colorscheme:"cyanCarbon"}}),r.setStyle({},{stick:{colorscheme:"magentaCarbon"}}),this._alignModels(l,r),o.zoomTo(),o.render()}catch(i){console.error("Error rendering comparison viewer:",i),this.viewerContainer&&(this.viewerContainer.innerHTML='<p style="text-align:center;padding:20px;">Render Error</p>')}},100))}_alignModels(e,t){if(!e||!t||!e.selectedAtoms||!t.selectedAtoms)return;const s=e.selectedAtoms({}),n=t.selectedAtoms({});if(!s.length||!n.length)return;const i=c=>{let u=0,m=0,g=0;for(const p of c)u+=p.x,m+=p.y,g+=p.z;return{x:u/c.length,y:m/c.length,z:g/c.length}},o=i(s),l=i(n),r=o.x-l.x,d=o.y-l.y,a=o.z-l.z;for(const c of n)c.x+=r,c.y+=d,c.z+=a}close(){this.modal&&(this.modal.style.display="none")}}class De{constructor(){this.repository=new pe([...ce.map(e=>({code:e,status:"pending"})),...ue.map(e=>({...e,status:"pending"}))]),this.grid=null,this.loadingIndicator=null,this.cardUI=null,this.loader=null,this.ligandModal=null,this.boundLigandTable=null,this.pdbDetailsModal=null,this.addModal=null,this.comparisonModal=null,this.compareQueue=[]}init(){this.grid=document.getElementById("molecule-grid"),this.loadingIndicator=document.querySelector(".loading-indicator"),this.cardUI=new Le(this.grid,this.repository,{onDelete:l=>this.confirmDelete(l),onShowDetails:(l,r,d)=>this.showMoleculeDetails(l,r,d),onCompare:l=>this.queueComparison(l)}),this.loader=new me(this.repository,this.cardUI),this.ligandModal=new Ce(this),this.boundLigandTable=new ge(l=>this.addMolecule(l),l=>this.showMoleculeDetails(l),this.ligandModal),this.pdbDetailsModal=new _e(this.boundLigandTable),this.addModal=new Me(this),this.comparisonModal=new Se,document.getElementById("add-molecule-btn").addEventListener("click",()=>{this.addModal&&this.addModal.open()}),document.getElementById("delete-all-btn").addEventListener("click",()=>{confirm("Delete all molecules?")&&this.deleteAllMolecules()});const e=document.getElementById("export-modal"),t=document.getElementById("export-filename"),s=document.getElementById("export-remove-h-toggle"),n=()=>e.style.display="none";document.getElementById("export-btn").addEventListener("click",()=>{e&&(t.value="molecules",s.checked=!1,e.style.display="block")}),document.getElementById("cancel-export-btn").addEventListener("click",n),document.getElementById("close-export-modal").addEventListener("click",n),document.getElementById("confirm-export-btn").addEventListener("click",()=>{const l=this.repository.exportToSdf({removeHydrogens:s.checked});if(!l){C("No SDF data to export","info");return}let r=t.value.trim()||"molecules";r.toLowerCase().endsWith(".sdf")||(r+=".sdf");const d=new Blob([l],{type:"chemical/x-mdl-sdfile"}),a=URL.createObjectURL(d),c=document.createElement("a");c.href=a,c.download=r,document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(a),n()});const i=document.querySelectorAll(".tab-button"),o=[document.getElementById("molecule-library-content"),document.getElementById("fragment-library-content"),document.getElementById("protein-browser-content")];return i.forEach((l,r)=>{l.addEventListener("click",()=>{i.forEach((d,a)=>d.classList.toggle("active",a===r)),o.forEach((d,a)=>{d.style.display=a===r?"block":"none"})})}),this}addMolecule(e){const t=this.repository.addMolecule(e);return t&&this.loader.loadMolecule(e),t}addPdbInstance({code:e,pdbId:t,authSeqId:s,labelAsymId:n}){return this.addMolecule({code:e,pdbId:t,authSeqId:s,labelAsymId:n})}deleteMolecule(e){if(this.repository.removeMolecule(e)){const t=this.grid.querySelector(`[data-molecule-code="${e}"]`);return t&&t.remove(),!0}return!1}deleteAllMolecules(){this.repository.clearAll(),this.cardUI&&this.cardUI.clearAll(),C("All molecules deleted successfully!","info")}getMolecule(e){return this.repository.getMolecule(e)}getAllMolecules(){return this.repository.getAllMolecules()}updateMoleculeStatus(e,t){this.repository.updateMoleculeStatus(e,t)}queueComparison(e){if(!this.compareQueue.includes(e))if(this.compareQueue.push(e),this.compareQueue.length===2){const[t,s]=this.compareQueue,n=this.getMolecule(t),i=this.getMolecule(s);n&&i&&this.comparisonModal&&(n.sdf&&i.sdf?this.comparisonModal.show(n,i):typeof C=="function"&&C("Both molecules must be loaded before comparison","error")),this.compareQueue=[]}else typeof C=="function"&&C("Select another molecule to compare","info")}loadAllMolecules(){this.loadingIndicator&&(this.loadingIndicator.style.display="block"),this.loader.loadAllMolecules().finally(()=>{this.loadingIndicator&&(this.loadingIndicator.style.display="none")})}showMoleculeDetails(e,t,s){this.ligandModal&&this.ligandModal.show(e,t,s)}fetchRCSBDetails(e){return this.pdbDetailsModal?this.pdbDetailsModal.fetchRCSBDetails(e):Promise.resolve(null)}showPDBDetailsModal(e){this.pdbDetailsModal&&this.pdbDetailsModal.showPDBDetailsModal(e)}confirmDelete(e){confirm(`Delete ${e}?`)&&this.deleteMolecule(e)}}const D=new De().init();D.loadAllMolecules();const Ae=typeof initRDKitModule=="function"?initRDKitModule():Promise.resolve(null),N=new fe(D,{notify:C,rdkit:Ae}).init();N.loadFragments();const S=document.getElementById("add-fragment-modal"),F=document.getElementById("add-fragment-btn"),O=document.getElementById("cancel-add-fragment-btn"),q=document.getElementById("close-fragment-modal"),V=document.getElementById("confirm-add-fragment-btn"),$e=()=>{S&&(S.style.display="block")},k=()=>{S&&(S.style.display="none")};F&&F.addEventListener("click",$e);O&&O.addEventListener("click",k);q&&q.addEventListener("click",k);V&&V.addEventListener("click",()=>{const h=document.getElementById("fragment-name"),e=document.getElementById("fragment-query"),t=document.getElementById("fragment-source"),s=document.getElementById("fragment-description"),n={name:h?h.value.trim():"",query:e?e.value.trim():"",source:t?t.value.trim():"",description:s?s.value.trim():""};N.addFragment(n)&&(h&&(h.value=""),e&&(e.value=""),t&&(t.value="custom"),s&&(s.value=""),k())});const Te=new Be(D).init();function C(h,e="info"){const t=document.createElement("div");t.className=`notification ${e}`,t.textContent=h,Object.assign(t.style,{position:"fixed",top:"20px",right:"20px",padding:"12px 20px",borderRadius:"6px",color:"white",fontWeight:"500",zIndex:"1001",opacity:"0",transform:"translateY(-20px)",transition:"all 0.3s ease"}),e==="success"?t.style.background="#4CAF50":e==="error"?t.style.background="#f44336":t.style.background="#6e45e2",document.body.appendChild(t),setTimeout(()=>{t.style.opacity="1",t.style.transform="translateY(0)"},10),setTimeout(()=>{t.style.opacity="0",t.style.transform="translateY(-20px)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)},3e3)}window.moleculeManager=D;window.fragmentLibrary=N;window.proteinBrowser=Te;window.showNotification=C;function xe(){document.body.classList.toggle("dark-mode");const h=document.body.classList.contains("dark-mode"),e=h?"#e0e0e0":"white";document.querySelectorAll(".viewer-container, .molecule-viewer, .details-viewer").forEach(s=>{s.viewer&&typeof s.viewer.setBackgroundColor=="function"?(s.viewer.setBackgroundColor(e),s.viewer.render()):s.style.background=e});const t=document.getElementById("theme-toggle-icon");t&&(t.textContent=h?"light_mode":"dark_mode")}function Ne(){const h=document.getElementById("theme-toggle");h&&h.addEventListener("click",xe)}Ne();
